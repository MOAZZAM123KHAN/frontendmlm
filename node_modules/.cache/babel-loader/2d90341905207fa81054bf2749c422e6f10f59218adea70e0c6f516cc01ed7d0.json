{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{RecaptchaVerifier,signInWithPhoneNumber}from\"firebase/auth\";import{auth}from\"../firebase\";// ðŸ‘ˆ make sure firebase.js exports \"auth\"\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ForgotPassword=()=>{const[step,setStep]=useState(1);const[mobile,setMobile]=useState(\"\");const[otp,setOtp]=useState(\"\");const[newPassword,setNewPassword]=useState(\"\");const[confirmPassword,setConfirmPassword]=useState(\"\");const[loading,setLoading]=useState(false);const[error,setError]=useState(\"\");const[message,setMessage]=useState(\"\");const navigate=useNavigate();// ðŸ”¹ Step 1: Send OTP\nconst sendOtp=async()=>{setLoading(true);setError(\"\");setMessage(\"\");try{const phoneNumber=\"+91\".concat(mobile);if(!window.recaptchaVerifier){window.recaptchaVerifier=new RecaptchaVerifier(auth,\"recaptcha-container\",{size:\"invisible\"});}const appVerifier=window.recaptchaVerifier;const confirmationResult=await signInWithPhoneNumber(auth,phoneNumber,appVerifier);window.confirmationResult=confirmationResult;setMessage(\"âœ… OTP sent to your mobile number.\");setStep(2);}catch(err){setError(err.code||err.message||\"Failed to send OTP\");}finally{setLoading(false);}};// ðŸ”¹ Step 2: Verify OTP\nconst verifyOtp=async()=>{setLoading(true);setError(\"\");try{const result=await window.confirmationResult.confirm(otp);if(result.user){setMessage(\"âœ… OTP verified. Please set your new password.\");setStep(3);}}catch(err){setError(err.code||err.message||\"Invalid OTP\");}finally{setLoading(false);}};// ðŸ”¹ Step 3: Reset Password via Backend\nconst handleResetPassword=async()=>{if(newPassword!==confirmPassword){setError(\"Passwords do not match\");return;}if(newPassword.length<6){setError(\"Password must be at least 6 characters\");return;}setLoading(true);setError(\"\");try{const response=await fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/reset-password\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({mobile,newPassword})});if(!response.ok)throw new Error(\"Failed to reset password\");setMessage(\"âœ… Password reset successfully! Redirecting to login...\");setTimeout(()=>navigate(\"/login\"),2000);}catch(err){setError(err.message||\"Failed to reset password\");}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"forgot-password\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Forgot Password\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:error}),message&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"green\"},children:message}),step===1&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter mobile number\",value:mobile,onChange:e=>setMobile(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:sendOtp,disabled:loading,children:loading?\"Sending...\":\"Send OTP\"}),/*#__PURE__*/_jsx(\"div\",{id:\"recaptcha-container\"})]}),step===2&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter OTP\",value:otp,onChange:e=>setOtp(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:verifyOtp,disabled:loading,children:loading?\"Verifying...\":\"Verify OTP\"})]}),step===3&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"New Password\",value:newPassword,onChange:e=>setNewPassword(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm Password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleResetPassword,disabled:loading,children:loading?\"Resetting...\":\"Reset Password\"})]})]});};export default ForgotPassword;","map":{"version":3,"names":["React","useState","useNavigate","RecaptchaVerifier","signInWithPhoneNumber","auth","jsx","_jsx","jsxs","_jsxs","ForgotPassword","step","setStep","mobile","setMobile","otp","setOtp","newPassword","setNewPassword","confirmPassword","setConfirmPassword","loading","setLoading","error","setError","message","setMessage","navigate","sendOtp","phoneNumber","concat","window","recaptchaVerifier","size","appVerifier","confirmationResult","err","code","verifyOtp","result","confirm","user","handleResetPassword","length","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","Error","setTimeout","className","children","style","color","type","placeholder","value","onChange","e","target","onClick","disabled","id"],"sources":["C:/Users/moazz/Desktop/frontend/src/pages/ForgotPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\r\nimport { auth } from \"../firebase\"; // ðŸ‘ˆ make sure firebase.js exports \"auth\"\r\n\r\nconst ForgotPassword = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // ðŸ”¹ Step 1: Send OTP\r\n  const sendOtp = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      const phoneNumber = `+91${mobile}`;\r\n      if (!window.recaptchaVerifier) {\r\n        window.recaptchaVerifier = new RecaptchaVerifier(\r\n          auth,\r\n          \"recaptcha-container\",\r\n          { size: \"invisible\" }\r\n        );\r\n      }\r\n\r\n      const appVerifier = window.recaptchaVerifier;\r\n      const confirmationResult = await signInWithPhoneNumber(\r\n        auth,\r\n        phoneNumber,\r\n        appVerifier\r\n      );\r\n\r\n      window.confirmationResult = confirmationResult;\r\n      setMessage(\"âœ… OTP sent to your mobile number.\");\r\n      setStep(2);\r\n    } catch (err) {\r\n      setError(err.code || err.message || \"Failed to send OTP\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ðŸ”¹ Step 2: Verify OTP\r\n  const verifyOtp = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const result = await window.confirmationResult.confirm(otp);\r\n      if (result.user) {\r\n        setMessage(\"âœ… OTP verified. Please set your new password.\");\r\n        setStep(3);\r\n      }\r\n    } catch (err) {\r\n      setError(err.code || err.message || \"Invalid OTP\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ðŸ”¹ Step 3: Reset Password via Backend\r\n  const handleResetPassword = async () => {\r\n    if (newPassword !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 6) {\r\n      setError(\"Password must be at least 6 characters\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/auth/reset-password`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ mobile, newPassword }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) throw new Error(\"Failed to reset password\");\r\n\r\n      setMessage(\"âœ… Password reset successfully! Redirecting to login...\");\r\n      setTimeout(() => navigate(\"/login\"), 2000);\r\n    } catch (err) {\r\n      setError(err.message || \"Failed to reset password\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgot-password\">\r\n      <h2>Forgot Password</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {message && <p style={{ color: \"green\" }}>{message}</p>}\r\n\r\n      {/* Step 1 */}\r\n      {step === 1 && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter mobile number\"\r\n            value={mobile}\r\n            onChange={(e) => setMobile(e.target.value)}\r\n          />\r\n          <button onClick={sendOtp} disabled={loading}>\r\n            {loading ? \"Sending...\" : \"Send OTP\"}\r\n          </button>\r\n          <div id=\"recaptcha-container\"></div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Step 2 */}\r\n      {step === 2 && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button onClick={verifyOtp} disabled={loading}>\r\n            {loading ? \"Verifying...\" : \"Verify OTP\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Step 3 */}\r\n      {step === 3 && (\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"New Password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n          <button onClick={handleResetPassword} disabled={loading}>\r\n            {loading ? \"Resetting...\" : \"Reset Password\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}