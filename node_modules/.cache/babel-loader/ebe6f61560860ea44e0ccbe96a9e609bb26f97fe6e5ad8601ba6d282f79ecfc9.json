{"ast":null,"code":"// // src/services/userWalletApi.js\n// import axios from \"axios\";\n\n// const API_URL = \"http://localhost:5001/api/wallet\";\n// const TOKEN_KEY = \"userToken\";\n\n// const userWalletAPI = axios.create({ baseURL: API_URL });\n\n// userWalletAPI.interceptors.request.use((config) => {\n//   const token = localStorage.getItem(TOKEN_KEY);\n//   if (token) config.headers.Authorization = `Bearer ${token}`;\n//   return config;\n// });\n\n// export default {\n//   getWallet: async (userId) => {\n//     const res = await userWalletAPI.get(`/user/${userId}`);\n//     return res.data;\n//   },\n//   getWithdrawals: async (userId) => {\n//     const res = await userWalletAPI.get(`/withdrawals/${userId}`);\n//     return res.data;\n//   },\n//   requestWithdrawal: async (userId, amount, bankDetails) => {\n//     const res = await userWalletAPI.post(`/withdraw`, {\n//       userId,\n//       amount,\n//       ...bankDetails,\n//     });\n//     return res.data;\n//   },\n// };\n\n// src/services/userWalletApi.js\nimport axios from \"axios\";\nconst API_URL = \"http://localhost:5001/api/wallet\";\nconst TOKEN_KEY = \"authToken\";\n\n// axios instance\nconst userWalletAPI = axios.create({\n  baseURL: API_URL\n});\n\n// har request ke header me token inject karega\nuserWalletAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem(TOKEN_KEY);\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\nexport default {\n  // GET wallet data\n  getWallet: async () => {\n    const userId = localStorage.getItem(\"selectedUserId\") || JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId;\n    const res = await userWalletAPI.get(`/user/${userId}`);\n    return res.data;\n  },\n  // GET withdrawals\n  getWithdrawals: async () => {\n    const userId = localStorage.getItem(\"selectedUserId\") || JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId;\n    const res = await userWalletAPI.get(`/withdrawals/${userId}`);\n    return res.data;\n  },\n  // POST withdrawal request\n  requestWithdrawal: async (amount, bankDetails) => {\n    const userId = localStorage.getItem(\"selectedUserId\") || JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId;\n    const res = await userWalletAPI.post(`/withdraw`, {\n      userId,\n      amount,\n      ...bankDetails\n    });\n    return res.data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","TOKEN_KEY","userWalletAPI","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","getWallet","userId","JSON","parse","res","get","data","getWithdrawals","requestWithdrawal","amount","bankDetails","post"],"sources":["C:/Users/moazz/Downloads/Ecommerce-MLM-Chain-main/Ecommerce-MLM-Chain-main/frontend/frontend/src/services/userWalletApi.js"],"sourcesContent":["// // src/services/userWalletApi.js\r\n// import axios from \"axios\";\r\n\r\n// const API_URL = \"http://localhost:5001/api/wallet\";\r\n// const TOKEN_KEY = \"userToken\";\r\n\r\n// const userWalletAPI = axios.create({ baseURL: API_URL });\r\n\r\n// userWalletAPI.interceptors.request.use((config) => {\r\n//   const token = localStorage.getItem(TOKEN_KEY);\r\n//   if (token) config.headers.Authorization = `Bearer ${token}`;\r\n//   return config;\r\n// });\r\n\r\n// export default {\r\n//   getWallet: async (userId) => {\r\n//     const res = await userWalletAPI.get(`/user/${userId}`);\r\n//     return res.data;\r\n//   },\r\n//   getWithdrawals: async (userId) => {\r\n//     const res = await userWalletAPI.get(`/withdrawals/${userId}`);\r\n//     return res.data;\r\n//   },\r\n//   requestWithdrawal: async (userId, amount, bankDetails) => {\r\n//     const res = await userWalletAPI.post(`/withdraw`, {\r\n//       userId,\r\n//       amount,\r\n//       ...bankDetails,\r\n//     });\r\n//     return res.data;\r\n//   },\r\n// };\r\n\r\n\r\n\r\n// src/services/userWalletApi.js\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5001/api/wallet\";\r\nconst TOKEN_KEY = \"authToken\";\r\n\r\n// axios instance\r\nconst userWalletAPI = axios.create({ baseURL: API_URL });\r\n\r\n// har request ke header me token inject karega\r\nuserWalletAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(TOKEN_KEY);\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\nexport default {\r\n  // GET wallet data\r\n  getWallet: async () => {\r\n    const userId =\r\n      localStorage.getItem(\"selectedUserId\") ||\r\n      JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId;\r\n\r\n    const res = await userWalletAPI.get(`/user/${userId}`);\r\n    return res.data;\r\n  },\r\n\r\n  // GET withdrawals\r\n  getWithdrawals: async () => {\r\n    const userId =\r\n      localStorage.getItem(\"selectedUserId\") ||\r\n      JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId;\r\n\r\n    const res = await userWalletAPI.get(`/withdrawals/${userId}`);\r\n    return res.data;\r\n  },\r\n\r\n  // POST withdrawal request\r\n  requestWithdrawal: async (amount, bankDetails) => {\r\n    const userId =\r\n      localStorage.getItem(\"selectedUserId\") ||\r\n      JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId;\r\n\r\n    const res = await userWalletAPI.post(`/withdraw`, {\r\n      userId,\r\n      amount,\r\n      ...bankDetails,\r\n    });\r\n    return res.data;\r\n  },\r\n};\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;AAClD,MAAMC,SAAS,GAAG,WAAW;;AAE7B;AACA,MAAMC,aAAa,GAAGH,KAAK,CAACI,MAAM,CAAC;EAAEC,OAAO,EAAEJ;AAAQ,CAAC,CAAC;;AAExD;AACAE,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACjD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACV,SAAS,CAAC;EAC7C,IAAIQ,KAAK,EAAED,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAC3D,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,eAAe;EACb;EACAM,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,MAAMC,MAAM,GACVL,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,IACtCK,IAAI,CAACC,KAAK,CAACP,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,CAACI,MAAM;IAE/D,MAAMG,GAAG,GAAG,MAAMhB,aAAa,CAACiB,GAAG,CAAC,SAASJ,MAAM,EAAE,CAAC;IACtD,OAAOG,GAAG,CAACE,IAAI;EACjB,CAAC;EAED;EACAC,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,MAAMN,MAAM,GACVL,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,IACtCK,IAAI,CAACC,KAAK,CAACP,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,CAACI,MAAM;IAE/D,MAAMG,GAAG,GAAG,MAAMhB,aAAa,CAACiB,GAAG,CAAC,gBAAgBJ,MAAM,EAAE,CAAC;IAC7D,OAAOG,GAAG,CAACE,IAAI;EACjB,CAAC;EAED;EACAE,iBAAiB,EAAE,MAAAA,CAAOC,MAAM,EAAEC,WAAW,KAAK;IAChD,MAAMT,MAAM,GACVL,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,IACtCK,IAAI,CAACC,KAAK,CAACP,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,CAACI,MAAM;IAE/D,MAAMG,GAAG,GAAG,MAAMhB,aAAa,CAACuB,IAAI,CAAC,WAAW,EAAE;MAChDV,MAAM;MACNQ,MAAM;MACN,GAAGC;IACL,CAAC,CAAC;IACF,OAAON,GAAG,CAACE,IAAI;EACjB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}