{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moazz\\\\Downloads\\\\Ecommerce-MLM-Chain-main\\\\Ecommerce-MLM-Chain-main\\\\frontend\\\\frontend\\\\src\\\\components\\\\dashboard\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // import * as Yup from 'yup';\n// // import { authAPI } from '../../services/api';\n// // import { useNavigate } from 'react-router-dom'; // ✅ Import useNavigate\n\n// // const UserDashboard = ({ userData, onLogout, onDataUpdate, onUserIdSelect }) => {\n// //   const [isLoading, setIsLoading] = useState(false);\n// //   const [error, setError] = useState('');\n// //   const [showCreateForm, setShowCreateForm] = useState(false);\n\n// //   const navigate = useNavigate(); // ✅ Initialize\n\n// //   const validationSchema = Yup.object({\n// //     name: Yup.string()\n// //       .min(2, 'Name must be at least 2 characters')\n// //       .max(50, 'Name cannot exceed 50 characters')\n// //       .required('Name is required'),\n// //   });\n\n// //   const handleCreateNewId = async (values, { setSubmitting, resetForm }) => {\n// //     setIsLoading(true);\n// //     setError('');\n\n// //     try {\n// //       const response = await authAPI.signup(userData.mobileNumber, values.name);\n\n// //       if (response.success) {\n// //         onDataUpdate(response.data);\n// //         setShowCreateForm(false);\n// //         resetForm();\n// //       } else {\n// //         setError(response.message || 'Failed to create new ID');\n// //       }\n// //     } catch (err) {\n// //       setError(err.message || 'Failed to create new ID. Please try again.');\n// //     } finally {\n// //       setIsLoading(false);\n// //       setSubmitting(false);\n// //     }\n// //   };\n\n// //   const formatDate = (dateString) => {\n// //     return new Date(dateString).toLocaleDateString('en-US', {\n// //       year: 'numeric',\n// //       month: 'short',\n// //       day: 'numeric',\n// //       hour: '2-digit',\n// //       minute: '2-digit'\n// //     });\n// //   };\n\n// //   const ids = userData?.allUserIds || [];\n\n// //   return (\n// //     <div className=\"min-h-screen bg-gray-50\">\n// //       {/* Header */}\n// //       <div className=\"bg-white shadow\">\n// //         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n// //           <div className=\"flex justify-between items-center py-6\">\n// //             <div>\n// //               <h1 className=\"text-3xl font-bold text-gray-900\">Your Dashboard</h1>\n// //               <p className=\"mt-1 text-sm text-gray-500\">\n// //                 Mobile: {userData?.parentMobile || userData?.mobileNumber || ''} • {ids.length} User ID{ids.length !== 1 ? 's' : ''} created\n// //               </p>\n// //             </div>\n// //             <button\n// //               onClick={onLogout}\n// //               className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n// //             >\n// //               Logout\n// //             </button>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       {/* Main Content */}\n// //       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n// //         {/* Stats */}\n// //         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n// //           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n// //             <div className=\"p-5\">\n// //               <div className=\"flex items-center\">\n// //                 <div className=\"flex-shrink-0\">\n// //                   <div className=\"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\">\n// //                     <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n// //                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n// //                     </svg>\n// //                   </div>\n// //                 </div>\n// //                 <div className=\"ml-5 w-0 flex-1\">\n// //                   <dl>\n// //                     <dt className=\"text-sm font-medium text-gray-500 truncate\">Total IDs</dt>\n// //                     <dd className=\"text-lg font-medium text-gray-900\">{userData.totalIds}/10</dd>\n// //                   </dl>\n// //                 </div>\n// //               </div>\n// //             </div>\n// //           </div>\n\n// //           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n// //             <div className=\"p-5\">\n// //               <div className=\"flex items-center\">\n// //                 <div className=\"flex-shrink-0\">\n// //                   <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\">\n// //                     <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n// //                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n// //                     </svg>\n// //                   </div>\n// //                 </div>\n// //                 <div className=\"ml-5 w-0 flex-1\">\n// //                   <dl>\n// //                     <dt className=\"text-sm font-medium text-gray-500 truncate\">Can Create More</dt>\n// //                     <dd className=\"text-lg font-medium text-gray-900\">\n// //                       {userData.canCreateMore ? 'Yes' : 'No'}\n// //                     </dd>\n// //                   </dl>\n// //                 </div>\n// //               </div>\n// //             </div>\n// //           </div>\n\n// //           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n// //             <div className=\"p-5\">\n// //               <div className=\"flex items-center\">\n// //                 <div className=\"flex-shrink-0\">\n// //                   <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\">\n// //                     <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n// //                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n// //                     </svg>\n// //                   </div>\n// //                 </div>\n// //                 <div className=\"ml-5 w-0 flex-1\">\n// //                   <dl>\n// //                     <dt className=\"text-sm font-medium text-gray-500 truncate\">Last Login</dt>\n// //                     <dd className=\"text-sm font-medium text-gray-900\">\n// //                       {formatDate(new Date())}\n// //                     </dd>\n// //                   </dl>\n// //                 </div>\n// //               </div>\n// //             </div>\n// //           </div>\n// //         </div>\n\n// //         {/* Create New ID Button */}\n// //         {userData.canCreateMore && (\n// //           <div className=\"mb-6\">\n// //             <button\n// //               onClick={() => setShowCreateForm(!showCreateForm)}\n// //               className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n// //             >\n// //               {showCreateForm ? 'Cancel' : 'Create New ID'}\n// //             </button>\n// //           </div>\n// //         )}\n\n// //         {/* Create New ID Form */}\n// //         {showCreateForm && userData.canCreateMore && (\n// //           <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\n// //             <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New ID</h3>\n// //             <Formik\n// //               initialValues={{ name: '' }}\n// //               validationSchema={validationSchema}\n// //               onSubmit={handleCreateNewId}\n// //             >\n// //               {({ isSubmitting }) => (\n// //                 <Form className=\"space-y-4\">\n// //                   <div>\n// //                     <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n// //                       Name for new ID\n// //                     </label>\n// //                     <Field\n// //                       id=\"name\"\n// //                       name=\"name\"\n// //                       type=\"text\"\n// //                       className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                       placeholder=\"Enter name for new ID\"\n// //                     />\n// //                     <ErrorMessage\n// //                       name=\"name\"\n// //                       component=\"div\"\n// //                       className=\"mt-1 text-sm text-red-600\"\n// //                     />\n// //                   </div>\n\n// //                   {error && (\n// //                     <div className=\"rounded-md bg-red-50 p-4\">\n// //                       <div className=\"flex\">\n// //                         <div className=\"ml-3\">\n// //                           <h3 className=\"text-sm font-medium text-red-800\">\n// //                             {error}\n// //                           </h3>\n// //                         </div>\n// //                       </div>\n// //                     </div>\n// //                   )}\n\n// //                   <div className=\"flex justify-end space-x-3\">\n// //                     <button\n// //                       type=\"button\"\n// //                       onClick={() => setShowCreateForm(false)}\n// //                       className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\"\n// //                     >\n// //                       Cancel\n// //                     </button>\n// //                     <button\n// //                       type=\"submit\"\n// //                       disabled={isSubmitting || isLoading}\n// //                       className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\"\n// //                     >\n// //                       {isLoading ? 'Creating...' : 'Create ID'}\n// //                     </button>\n// //                   </div>\n// //                 </Form>\n// //               )}\n// //             </Formik>\n// //           </div>\n// //         )}\n\n// //         {/* IDs List */}\n// //         <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n// //           <div className=\"px-4 py-5 sm:px-6\">\n// //             <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n// //               Your User IDs\n// //             </h3>\n// //             <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n// //               All user IDs associated with your mobile number\n// //             </p>\n// //           </div>\n// //           <ul className=\"divide-y divide-gray-200\">\n// //             {ids.map((userId, index) => (\n// //               <li key={userId} className=\"px-4 py-4 sm:px-6 cursor-pointer hover:bg-indigo-50\">\n// //                 <div className=\"flex items-center justify-between\">\n// //                   <div className=\"flex items-center\">\n// //                     <div className=\"flex-shrink-0\">\n// //                       <div className=\"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n// //                         <span className=\"text-indigo-600 font-medium text-sm\">\n// //                           {index + 1}\n// //                         </span>\n// //                       </div>\n// //                     </div>\n// //                     <div className=\"ml-4\">\n// //                       <div className=\"text-sm font-medium text-gray-900\">\n// //                         {userId}\n// //                       </div>\n// //                     </div>\n// //                   </div>\n// //                   <button\n// //                     className=\"ml-4 px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\"\n// //                     onClick={(e) => {\n// //                       e.stopPropagation();\n// //                       if (onUserIdSelect) onUserIdSelect(userId); // optional\n// //                     }}\n// //                   >\n// //                     Enter\n// //                   </button>\n// //                 </div>\n// //               </li>\n// //             ))}\n// //           </ul>\n// //         </div>\n\n// //         {/* Empty State */}\n// //         {ids.length === 0 && (\n// //           <div className=\"text-center py-12\">\n// //             <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n// //               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n// //             </svg>\n// //             <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No User IDs yet</h3>\n// //             <p className=\"mt-1 text-sm text-gray-500\">\n// //               Get started by creating your first user ID.\n// //             </p>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default UserDashboard;\n\n// // import React, { useState } from 'react';\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // import * as Yup from 'yup';\n// // import { authAPI } from '../../services/api';\n// // import { useNavigate } from 'react-router-dom';\n\n// // const UserDashboard = ({ userData, onLogout, onDataUpdate }) => {\n// //   const [isLoading, setIsLoading] = useState(false);\n// //   const [error, setError] = useState('');\n// //   const [showCreateForm, setShowCreateForm] = useState(false);\n\n// //   const navigate = useNavigate();\n\n// //   const validationSchema = Yup.object({\n// //     name: Yup.string()\n// //       .min(2, 'Name must be at least 2 characters')\n// //       .max(50, 'Name cannot exceed 50 characters')\n// //       .required('Name is required'),\n// //   });\n\n// //   const handleCreateNewId = async (values, { setSubmitting, resetForm }) => {\n// //     setIsLoading(true);\n// //     setError('');\n\n// //     try {\n// //       const response = await authAPI.signup(userData.mobileNumber, values.name);\n\n// //       if (response.success) {\n// //         onDataUpdate(response.data);\n// //         setShowCreateForm(false);\n// //         resetForm();\n// //       } else {\n// //         setError(response.message || 'Failed to create new ID');\n// //       }\n// //     } catch (err) {\n// //       setError(err.message || 'Failed to create new ID. Please try again.');\n// //     } finally {\n// //       setIsLoading(false);\n// //       setSubmitting(false);\n// //     }\n// //   };\n\n// //   // ✅ New Enter handler\n// //   const handleEnter = (selectedUserId) => {\n// //     if (!selectedUserId) {\n// //       alert(\"Please select a user ID first\");\n// //       return;\n// //     }\n\n// //     // Replace with actual token from backend if available\n// //     const token = \"dummy-token\";\n\n// //     localStorage.setItem(\"token\", token);\n// //     localStorage.setItem(\n// //       \"authData\",\n// //       JSON.stringify({\n// //         userId: selectedUserId,\n// //         token: token\n// //       })\n// //     );\n\n// //     console.log(\"Saved auth data:\", {\n// //       userId: selectedUserId,\n// //       token\n// //     });\n\n// //     navigate(\"/wallet\");\n// //   };\n\n// //   const formatDate = (dateString) => {\n// //     return new Date(dateString).toLocaleDateString('en-US', {\n// //       year: 'numeric',\n// //       month: 'short',\n// //       day: 'numeric',\n// //       hour: '2-digit',\n// //       minute: '2-digit'\n// //     });\n// //   };\n\n// //   const ids = userData?.allUserIds || [];\n\n// //   return (\n// //     <div className=\"min-h-screen bg-gray-50\">\n// //       {/* Header */}\n// //       <div className=\"bg-white shadow\">\n// //         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n// //           <div className=\"flex justify-between items-center py-6\">\n// //             <div>\n// //               <h1 className=\"text-3xl font-bold text-gray-900\">Your Dashboard</h1>\n// //               <p className=\"mt-1 text-sm text-gray-500\">\n// //                 Mobile: {userData?.parentMobile || userData?.mobileNumber || ''} • {ids.length} User ID{ids.length !== 1 ? 's' : ''} created\n// //               </p>\n// //             </div>\n// //             <button\n// //               onClick={onLogout}\n// //               className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n// //             >\n// //               Logout\n// //             </button>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       {/* Main Content */}\n// //       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n// //         {/* Stats */}\n// //         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n// //           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n// //             <div className=\"p-5 flex items-center\">\n// //               <div className=\"flex-shrink-0\">\n// //                 <div className=\"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\">\n// //                   <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n// //                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n// //                   </svg>\n// //                 </div>\n// //               </div>\n// //               <div className=\"ml-5\">\n// //                 <dt className=\"text-sm font-medium text-gray-500 truncate\">Total IDs</dt>\n// //                 <dd className=\"text-lg font-medium text-gray-900\">{userData.totalIds}/10</dd>\n// //               </div>\n// //             </div>\n// //           </div>\n\n// //           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n// //             <div className=\"p-5 flex items-center\">\n// //               <div className=\"flex-shrink-0\">\n// //                 <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\">\n// //                   <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n// //                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n// //                   </svg>\n// //                 </div>\n// //               </div>\n// //               <div className=\"ml-5\">\n// //                 <dt className=\"text-sm font-medium text-gray-500 truncate\">Can Create More</dt>\n// //                 <dd className=\"text-lg font-medium text-gray-900\">{userData.canCreateMore ? 'Yes' : 'No'}</dd>\n// //               </div>\n// //             </div>\n// //           </div>\n\n// //           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n// //             <div className=\"p-5 flex items-center\">\n// //               <div className=\"flex-shrink-0\">\n// //                 <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\">\n// //                   <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n// //                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n// //                   </svg>\n// //                 </div>\n// //               </div>\n// //               <div className=\"ml-5\">\n// //                 <dt className=\"text-sm font-medium text-gray-500 truncate\">Last Login</dt>\n// //                 <dd className=\"text-sm font-medium text-gray-900\">{formatDate(new Date())}</dd>\n// //               </div>\n// //             </div>\n// //           </div>\n// //         </div>\n\n// //         {/* Create New ID Button */}\n// //         {userData.canCreateMore && (\n// //           <div className=\"mb-6\">\n// //             <button\n// //               onClick={() => setShowCreateForm(!showCreateForm)}\n// //               className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n// //             >\n// //               {showCreateForm ? 'Cancel' : 'Create New ID'}\n// //             </button>\n// //           </div>\n// //         )}\n\n// //         {/* Create New ID Form */}\n// //         {showCreateForm && userData.canCreateMore && (\n// //           <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\n// //             <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New ID</h3>\n// //             <Formik\n// //               initialValues={{ name: '' }}\n// //               validationSchema={validationSchema}\n// //               onSubmit={handleCreateNewId}\n// //             >\n// //               {({ isSubmitting }) => (\n// //                 <Form className=\"space-y-4\">\n// //                   <div>\n// //                     <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n// //                       Name for new ID\n// //                     </label>\n// //                     <Field\n// //                       id=\"name\"\n// //                       name=\"name\"\n// //                       type=\"text\"\n// //                       className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                       placeholder=\"Enter name for new ID\"\n// //                     />\n// //                     <ErrorMessage\n// //                       name=\"name\"\n// //                       component=\"div\"\n// //                       className=\"mt-1 text-sm text-red-600\"\n// //                     />\n// //                   </div>\n\n// //                   {error && (\n// //                     <div className=\"rounded-md bg-red-50 p-4\">\n// //                       <div className=\"ml-3 text-sm font-medium text-red-800\">{error}</div>\n// //                     </div>\n// //                   )}\n\n// //                   <div className=\"flex justify-end space-x-3\">\n// //                     <button\n// //                       type=\"button\"\n// //                       onClick={() => setShowCreateForm(false)}\n// //                       className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\"\n// //                     >\n// //                       Cancel\n// //                     </button>\n// //                     <button\n// //                       type=\"submit\"\n// //                       disabled={isSubmitting || isLoading}\n// //                       className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\"\n// //                     >\n// //                       {isLoading ? 'Creating...' : 'Create ID'}\n// //                     </button>\n// //                   </div>\n// //                 </Form>\n// //               )}\n// //             </Formik>\n// //           </div>\n// //         )}\n\n// //         {/* IDs List */}\n// //         <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n// //           <div className=\"px-4 py-5 sm:px-6\">\n// //             <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Your User IDs</h3>\n// //             <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n// //               All user IDs associated with your mobile number\n// //             </p>\n// //           </div>\n// //           <ul className=\"divide-y divide-gray-200\">\n// //             {ids.map((userId, index) => (\n// //               <li key={userId} className=\"px-4 py-4 sm:px-6 hover:bg-indigo-50 flex justify-between items-center\">\n// //                 <div className=\"flex items-center\">\n// //                   <div className=\"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n// //                     <span className=\"text-indigo-600 font-medium text-sm\">{index + 1}</span>\n// //                   </div>\n// //                   <div className=\"ml-4 text-sm font-medium text-gray-900\">{userId}</div>\n// //                 </div>\n// //                 <button\n// //                   className=\"px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\"\n// //                   onClick={() => handleEnter(userId)}\n// //                 >\n// //                   Enter\n// //                 </button>\n// //               </li>\n// //             ))}\n// //           </ul>\n// //         </div>\n\n// //         {ids.length === 0 && (\n// //           <div className=\"text-center py-12\">\n// //             <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n// //               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n// //             </svg>\n// //             <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No User IDs yet</h3>\n// //             <p className=\"mt-1 text-sm text-gray-500\">Get started by creating your first user ID.</p>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default UserDashboard;\n\n// import React, { useState } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { authAPI } from '../../services/api';\n// import { useNavigate } from 'react-router-dom'; // ✅ Import useNavigate\n\n// const UserDashboard = ({ userData, onLogout, onDataUpdate, onUserIdSelect }) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   const navigate = useNavigate(); // ✅ Initialize navigate\n\n//   const validationSchema = Yup.object({\n//     name: Yup.string()\n//       .min(2, 'Name must be at least 2 characters')\n//       .max(50, 'Name cannot exceed 50 characters')\n//       .required('Name is required'),\n//   });\n\n//   const handleCreateNewId = async (values, { setSubmitting, resetForm }) => {\n//     setIsLoading(true);\n//     setError('');\n\n//     try {\n//       const response = await authAPI.signup(userData.mobileNumber, values.name);\n\n//       if (response.success) {\n//         onDataUpdate(response.data);\n//         setShowCreateForm(false);\n//         resetForm();\n//       } else {\n//         setError(response.message || 'Failed to create new ID');\n//       }\n//     } catch (err) {\n//       setError(err.message || 'Failed to create new ID. Please try again.');\n//     } finally {\n//       setIsLoading(false);\n//       setSubmitting(false);\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleDateString('en-US', {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: '2-digit',\n//       minute: '2-digit'\n//     });\n//   };\n\n//   const ids = userData?.allUserIds || [];\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-50\">\n//       {/* Header */}\n//       <div className=\"bg-white shadow\">\n//         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n//           <div className=\"flex justify-between items-center py-6\">\n//             <div>\n//               <h1 className=\"text-3xl font-bold text-gray-900\">Your Dashboard</h1>\n//               <p className=\"mt-1 text-sm text-gray-500\">\n//                 Mobile: {userData?.parentMobile || userData?.mobileNumber || ''} • {ids.length} User ID{ids.length !== 1 ? 's' : ''} created\n//               </p>\n//             </div>\n//             <button\n//               onClick={onLogout}\n//               className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n//             >\n//               Logout\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Main Content */}\n//       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n//         {/* Stats */}\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5 flex items-center\">\n//               <div className=\"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\">\n//                 <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                   <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n//                 </svg>\n//               </div>\n//               <div className=\"ml-5 flex-1\">\n//                 <dl>\n//                   <dt className=\"text-sm font-medium text-gray-500 truncate\">Total IDs</dt>\n//                   <dd className=\"text-lg font-medium text-gray-900\">{userData.totalIds}/10</dd>\n//                 </dl>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5 flex items-center\">\n//               <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\">\n//                 <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                   <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n//                 </svg>\n//               </div>\n//               <div className=\"ml-5 flex-1\">\n//                 <dl>\n//                   <dt className=\"text-sm font-medium text-gray-500 truncate\">Can Create More</dt>\n//                   <dd className=\"text-lg font-medium text-gray-900\">\n//                     {userData.canCreateMore ? 'Yes' : 'No'}\n//                   </dd>\n//                 </dl>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5 flex items-center\">\n//               <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\">\n//                 <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                   <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n//                 </svg>\n//               </div>\n//               <div className=\"ml-5 flex-1\">\n//                 <dl>\n//                   <dt className=\"text-sm font-medium text-gray-500 truncate\">Last Login</dt>\n//                   <dd className=\"text-sm font-medium text-gray-900\">\n//                     {formatDate(new Date())}\n//                   </dd>\n//                 </dl>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Create New ID Button */}\n//         {userData.canCreateMore && (\n//           <div className=\"mb-6\">\n//             <button\n//               onClick={() => setShowCreateForm(!showCreateForm)}\n//               className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n//             >\n//               {showCreateForm ? 'Cancel' : 'Create New ID'}\n//             </button>\n//           </div>\n//         )}\n\n//         {/* Create New ID Form */}\n//         {showCreateForm && userData.canCreateMore && (\n//           <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\n//             <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New ID</h3>\n//             <Formik\n//               initialValues={{ name: '' }}\n//               validationSchema={validationSchema}\n//               onSubmit={handleCreateNewId}\n//             >\n//               {({ isSubmitting }) => (\n//                 <Form className=\"space-y-4\">\n//                   <div>\n//                     <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n//                       Name for new ID\n//                     </label>\n//                     <Field\n//                       id=\"name\"\n//                       name=\"name\"\n//                       type=\"text\"\n//                       className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                       placeholder=\"Enter name for new ID\"\n//                     />\n//                     <ErrorMessage\n//                       name=\"name\"\n//                       component=\"div\"\n//                       className=\"mt-1 text-sm text-red-600\"\n//                     />\n//                   </div>\n\n//                   {error && (\n//                     <div className=\"rounded-md bg-red-50 p-4\">\n//                       <div className=\"flex\">\n//                         <div className=\"ml-3\">\n//                           <h3 className=\"text-sm font-medium text-red-800\">\n//                             {error}\n//                           </h3>\n//                         </div>\n//                       </div>\n//                     </div>\n//                   )}\n\n//                   <div className=\"flex justify-end space-x-3\">\n//                     <button\n//                       type=\"button\"\n//                       onClick={() => setShowCreateForm(false)}\n//                       className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\"\n//                     >\n//                       Cancel\n//                     </button>\n//                     <button\n//                       type=\"submit\"\n//                       disabled={isSubmitting || isLoading}\n//                       className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\"\n//                     >\n//                       {isLoading ? 'Creating...' : 'Create ID'}\n//                     </button>\n//                   </div>\n//                 </Form>\n//               )}\n//             </Formik>\n//           </div>\n//         )}\n\n//         {/* IDs List */}\n//         <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n//           <div className=\"px-4 py-5 sm:px-6\">\n//             <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n//               Your User IDs\n//             </h3>\n//             <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n//               All user IDs associated with your mobile number\n//             </p>\n//           </div>\n//           <ul className=\"divide-y divide-gray-200\">\n//             {ids.map((userId, index) => (\n//               <li key={userId} className=\"px-4 py-4 sm:px-6 cursor-pointer hover:bg-indigo-50\">\n//                 <div className=\"flex items-center justify-between\">\n//                   <div className=\"flex items-center\">\n//                     <div className=\"flex-shrink-0\">\n//                       <div className=\"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n//                         <span className=\"text-indigo-600 font-medium text-sm\">\n//                           {index + 1}\n//                         </span>\n//                       </div>\n//                     </div>\n//                     <div className=\"ml-4\">\n//                       <div className=\"text-sm font-medium text-gray-900\">\n//                         {userId}\n//                       </div>\n//                     </div>\n//                   </div>\n//                   <button\n//                     className=\"ml-4 px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\"\n//                     onClick={(e) => {\n//                       e.stopPropagation();\n\n//                       // ✅ Save token & userId to localStorage\n//                       const token = userData?.token || \"dummy-token\"; // Replace with actual token if available\n//                       localStorage.setItem(\"token\", token);\n//                       localStorage.setItem(\"authData\", JSON.stringify({\n//                         userId,\n//                         token\n//                       }));\n\n//                       // Optional: call your onUserIdSelect function\n//                       if (onUserIdSelect) onUserIdSelect(userId);\n\n//                       // ✅ Navigate to home or wallet\n//                       navigate(\"/\"); // or navigate(\"/wallet\")\n//                     }}\n//                   >\n//                     Enter\n//                   </button>\n//                 </div>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n\n//         {/* Empty State */}\n//         {ids.length === 0 && (\n//           <div className=\"text-center py-12\">\n//             <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n//               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n//             </svg>\n//             <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No User IDs yet</h3>\n//             <p className=\"mt-1 text-sm text-gray-500\">\n//               Get started by creating your first user ID.\n//             </p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UserDashboard;\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { authAPI } from \"../../services/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = ({\n  userData,\n  onLogout,\n  onDataUpdate,\n  onUserIdSelect\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const navigate = useNavigate();\n  const validationSchema = Yup.object({\n    name: Yup.string().min(2, \"Name must be at least 2 characters\").max(50, \"Name cannot exceed 50 characters\").required(\"Name is required\")\n  });\n\n  // Store token & userId in localStorage and navigate\n  const enterWithUserId = userId => {\n    try {\n      const existingToken = localStorage.getItem(\"token\") || (userData === null || userData === void 0 ? void 0 : userData.token) || (userData === null || userData === void 0 ? void 0 : userData.accessToken) || (userData === null || userData === void 0 ? void 0 : userData.authToken) || \"dummy-token\"; // fallback token\n\n      localStorage.setItem(\"token\", existingToken);\n      localStorage.setItem(\"authData\", JSON.stringify({\n        userId,\n        token: existingToken\n      }));\n      if (onUserIdSelect) onUserIdSelect(userId);\n      navigate(\"/wallet\"); // Change if your wallet route differs\n    } catch (e) {\n      console.error(\"Failed to save auth data:\", e);\n      alert(\"Error saving login details. Please try again.\");\n    }\n  };\n  const handleCreateNewId = async (values, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await authAPI.signup(userData.mobileNumber, values.name);\n      if (response.success) {\n        onDataUpdate(response.data);\n        setShowCreateForm(false);\n        resetForm();\n      } else {\n        setError(response.message || \"Failed to create new ID\");\n      }\n    } catch (err) {\n      setError(err.message || \"Failed to create new ID. Please try again.\");\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    });\n  };\n  const ids = (userData === null || userData === void 0 ? void 0 : userData.allUserIds) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center py-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-3xl font-bold text-gray-900\",\n              children: \"Your Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-gray-500\",\n              children: [\"Mobile:\", \" \", (userData === null || userData === void 0 ? void 0 : userData.parentMobile) || (userData === null || userData === void 0 ? void 0 : userData.mobileNumber) || \"\", \" \\u2022\", \" \", ids.length, \" User ID\", ids.length !== 1 ? \"s\" : \"\", \" created\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onLogout,\n            className: \"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 924,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white overflow-hidden shadow rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-5 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-5 h-5 text-white\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 960,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-500 truncate\",\n                children: \"Total IDs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-lg font-medium text-gray-900\",\n                children: [userData.totalIds, \"/10\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white overflow-hidden shadow rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-5 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-5 h-5 text-white\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 988,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 982,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-500 truncate\",\n                children: \"Can Create More\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-lg font-medium text-gray-900\",\n                children: userData.canCreateMore ? \"Yes\" : \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1000,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white overflow-hidden shadow rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-5 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-5 h-5 text-white\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1016,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-500 truncate\",\n                children: \"Last Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-900\",\n                children: formatDate(new Date())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1024,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 9\n      }, this), userData.canCreateMore && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCreateForm(!showCreateForm),\n          className: \"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\",\n          children: showCreateForm ? \"Cancel\" : \"Create New ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1038,\n        columnNumber: 11\n      }, this), showCreateForm && userData.canCreateMore && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-4\",\n          children: \"Create New ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            name: \"\"\n          },\n          validationSchema: validationSchema,\n          onSubmit: handleCreateNewId,\n          children: ({\n            isSubmitting\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Name for new ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"name\",\n                name: \"name\",\n                type: \"text\",\n                className: \"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n                placeholder: \"Enter name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1068,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"name\",\n                component: \"div\",\n                className: \"mt-1 text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1075,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 19\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rounded-md bg-red-50 p-4\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-sm font-medium text-red-800\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1084,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setShowCreateForm(false),\n                className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1091,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: isSubmitting || isLoading,\n                className: \"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\",\n                children: isLoading ? \"Creating...\" : \"Create ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1098,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1090,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1050,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow overflow-hidden sm:rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-5 sm:px-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg leading-6 font-medium text-gray-900\",\n            children: \"Your User IDs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 max-w-2xl text-sm text-gray-500\",\n            children: \"All user IDs associated with your mobile number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"divide-y divide-gray-200\",\n          children: ids.map((userId, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"px-4 py-4 sm:px-6 hover:bg-indigo-50\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-shrink-0\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-indigo-600 font-medium text-sm\",\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1132,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1131,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1130,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm font-medium text-gray-900\",\n                    children: userId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1138,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1137,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"ml-4 px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\",\n                onClick: () => enterWithUserId(userId),\n                children: \"Enter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1143,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1128,\n              columnNumber: 17\n            }, this)\n          }, userId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1124,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1113,\n        columnNumber: 9\n      }, this), ids.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-2 text-sm font-medium text-gray-900\",\n          children: \"No User IDs yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-gray-500\",\n          children: \"Get started by creating your first user ID.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 948,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 922,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"E0ja/66Za0G2n9vSRuVXHFDLz+8=\", false, function () {\n  return [useNavigate];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","Formik","Form","Field","ErrorMessage","Yup","authAPI","useNavigate","jsxDEV","_jsxDEV","UserDashboard","userData","onLogout","onDataUpdate","onUserIdSelect","_s","isLoading","setIsLoading","error","setError","showCreateForm","setShowCreateForm","navigate","validationSchema","object","name","string","min","max","required","enterWithUserId","userId","existingToken","localStorage","getItem","token","accessToken","authToken","setItem","JSON","stringify","e","console","alert","handleCreateNewId","values","setSubmitting","resetForm","response","signup","mobileNumber","success","data","message","err","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","ids","allUserIds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","parentMobile","length","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","totalIds","canCreateMore","initialValues","onSubmit","isSubmitting","htmlFor","id","type","placeholder","component","disabled","map","index","_c","$RefreshReg$"],"sources":["C:/Users/moazz/Downloads/Ecommerce-MLM-Chain-main/Ecommerce-MLM-Chain-main/frontend/frontend/src/components/dashboard/UserDashboard.js"],"sourcesContent":["// // import React, { useState } from 'react';\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // import * as Yup from 'yup';\n// // import { authAPI } from '../../services/api';\n// // import { useNavigate } from 'react-router-dom'; // ✅ Import useNavigate\n\n// // const UserDashboard = ({ userData, onLogout, onDataUpdate, onUserIdSelect }) => {\n// //   const [isLoading, setIsLoading] = useState(false);\n// //   const [error, setError] = useState('');\n// //   const [showCreateForm, setShowCreateForm] = useState(false);\n\n// //   const navigate = useNavigate(); // ✅ Initialize\n\n// //   const validationSchema = Yup.object({\n// //     name: Yup.string()\n// //       .min(2, 'Name must be at least 2 characters')\n// //       .max(50, 'Name cannot exceed 50 characters')\n// //       .required('Name is required'),\n// //   });\n\n// //   const handleCreateNewId = async (values, { setSubmitting, resetForm }) => {\n// //     setIsLoading(true);\n// //     setError('');\n\n// //     try {\n// //       const response = await authAPI.signup(userData.mobileNumber, values.name);\n      \n// //       if (response.success) {\n// //         onDataUpdate(response.data);\n// //         setShowCreateForm(false);\n// //         resetForm();\n// //       } else {\n// //         setError(response.message || 'Failed to create new ID');\n// //       }\n// //     } catch (err) {\n// //       setError(err.message || 'Failed to create new ID. Please try again.');\n// //     } finally {\n// //       setIsLoading(false);\n// //       setSubmitting(false);\n// //     }\n// //   };\n\n// //   const formatDate = (dateString) => {\n// //     return new Date(dateString).toLocaleDateString('en-US', {\n// //       year: 'numeric',\n// //       month: 'short',\n// //       day: 'numeric',\n// //       hour: '2-digit',\n// //       minute: '2-digit'\n// //     });\n// //   };\n\n// //   const ids = userData?.allUserIds || [];\n\n// //   return (\n// //     <div className=\"min-h-screen bg-gray-50\">\n// //       {/* Header */}\n// //       <div className=\"bg-white shadow\">\n// //         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n// //           <div className=\"flex justify-between items-center py-6\">\n// //             <div>\n// //               <h1 className=\"text-3xl font-bold text-gray-900\">Your Dashboard</h1>\n// //               <p className=\"mt-1 text-sm text-gray-500\">\n// //                 Mobile: {userData?.parentMobile || userData?.mobileNumber || ''} • {ids.length} User ID{ids.length !== 1 ? 's' : ''} created\n// //               </p>\n// //             </div>\n// //             <button\n// //               onClick={onLogout}\n// //               className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n// //             >\n// //               Logout\n// //             </button>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       {/* Main Content */}\n// //       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n// //         {/* Stats */}\n// //         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n// //           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n// //             <div className=\"p-5\">\n// //               <div className=\"flex items-center\">\n// //                 <div className=\"flex-shrink-0\">\n// //                   <div className=\"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\">\n// //                     <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n// //                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n// //                     </svg>\n// //                   </div>\n// //                 </div>\n// //                 <div className=\"ml-5 w-0 flex-1\">\n// //                   <dl>\n// //                     <dt className=\"text-sm font-medium text-gray-500 truncate\">Total IDs</dt>\n// //                     <dd className=\"text-lg font-medium text-gray-900\">{userData.totalIds}/10</dd>\n// //                   </dl>\n// //                 </div>\n// //               </div>\n// //             </div>\n// //           </div>\n\n// //           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n// //             <div className=\"p-5\">\n// //               <div className=\"flex items-center\">\n// //                 <div className=\"flex-shrink-0\">\n// //                   <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\">\n// //                     <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n// //                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n// //                     </svg>\n// //                   </div>\n// //                 </div>\n// //                 <div className=\"ml-5 w-0 flex-1\">\n// //                   <dl>\n// //                     <dt className=\"text-sm font-medium text-gray-500 truncate\">Can Create More</dt>\n// //                     <dd className=\"text-lg font-medium text-gray-900\">\n// //                       {userData.canCreateMore ? 'Yes' : 'No'}\n// //                     </dd>\n// //                   </dl>\n// //                 </div>\n// //               </div>\n// //             </div>\n// //           </div>\n\n// //           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n// //             <div className=\"p-5\">\n// //               <div className=\"flex items-center\">\n// //                 <div className=\"flex-shrink-0\">\n// //                   <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\">\n// //                     <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n// //                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n// //                     </svg>\n// //                   </div>\n// //                 </div>\n// //                 <div className=\"ml-5 w-0 flex-1\">\n// //                   <dl>\n// //                     <dt className=\"text-sm font-medium text-gray-500 truncate\">Last Login</dt>\n// //                     <dd className=\"text-sm font-medium text-gray-900\">\n// //                       {formatDate(new Date())}\n// //                     </dd>\n// //                   </dl>\n// //                 </div>\n// //               </div>\n// //             </div>\n// //           </div>\n// //         </div>\n\n// //         {/* Create New ID Button */}\n// //         {userData.canCreateMore && (\n// //           <div className=\"mb-6\">\n// //             <button\n// //               onClick={() => setShowCreateForm(!showCreateForm)}\n// //               className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n// //             >\n// //               {showCreateForm ? 'Cancel' : 'Create New ID'}\n// //             </button>\n// //           </div>\n// //         )}\n\n// //         {/* Create New ID Form */}\n// //         {showCreateForm && userData.canCreateMore && (\n// //           <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\n// //             <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New ID</h3>\n// //             <Formik\n// //               initialValues={{ name: '' }}\n// //               validationSchema={validationSchema}\n// //               onSubmit={handleCreateNewId}\n// //             >\n// //               {({ isSubmitting }) => (\n// //                 <Form className=\"space-y-4\">\n// //                   <div>\n// //                     <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n// //                       Name for new ID\n// //                     </label>\n// //                     <Field\n// //                       id=\"name\"\n// //                       name=\"name\"\n// //                       type=\"text\"\n// //                       className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                       placeholder=\"Enter name for new ID\"\n// //                     />\n// //                     <ErrorMessage\n// //                       name=\"name\"\n// //                       component=\"div\"\n// //                       className=\"mt-1 text-sm text-red-600\"\n// //                     />\n// //                   </div>\n\n// //                   {error && (\n// //                     <div className=\"rounded-md bg-red-50 p-4\">\n// //                       <div className=\"flex\">\n// //                         <div className=\"ml-3\">\n// //                           <h3 className=\"text-sm font-medium text-red-800\">\n// //                             {error}\n// //                           </h3>\n// //                         </div>\n// //                       </div>\n// //                     </div>\n// //                   )}\n\n// //                   <div className=\"flex justify-end space-x-3\">\n// //                     <button\n// //                       type=\"button\"\n// //                       onClick={() => setShowCreateForm(false)}\n// //                       className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\"\n// //                     >\n// //                       Cancel\n// //                     </button>\n// //                     <button\n// //                       type=\"submit\"\n// //                       disabled={isSubmitting || isLoading}\n// //                       className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\"\n// //                     >\n// //                       {isLoading ? 'Creating...' : 'Create ID'}\n// //                     </button>\n// //                   </div>\n// //                 </Form>\n// //               )}\n// //             </Formik>\n// //           </div>\n// //         )}\n\n// //         {/* IDs List */}\n// //         <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n// //           <div className=\"px-4 py-5 sm:px-6\">\n// //             <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n// //               Your User IDs\n// //             </h3>\n// //             <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n// //               All user IDs associated with your mobile number\n// //             </p>\n// //           </div>\n// //           <ul className=\"divide-y divide-gray-200\">\n// //             {ids.map((userId, index) => (\n// //               <li key={userId} className=\"px-4 py-4 sm:px-6 cursor-pointer hover:bg-indigo-50\">\n// //                 <div className=\"flex items-center justify-between\">\n// //                   <div className=\"flex items-center\">\n// //                     <div className=\"flex-shrink-0\">\n// //                       <div className=\"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n// //                         <span className=\"text-indigo-600 font-medium text-sm\">\n// //                           {index + 1}\n// //                         </span>\n// //                       </div>\n// //                     </div>\n// //                     <div className=\"ml-4\">\n// //                       <div className=\"text-sm font-medium text-gray-900\">\n// //                         {userId}\n// //                       </div>\n// //                     </div>\n// //                   </div>\n// //                   <button\n// //                     className=\"ml-4 px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\"\n// //                     onClick={(e) => {\n// //                       e.stopPropagation();\n// //                       if (onUserIdSelect) onUserIdSelect(userId); // optional\n// //                     }}\n// //                   >\n// //                     Enter\n// //                   </button>\n// //                 </div>\n// //               </li>\n// //             ))}\n// //           </ul>\n// //         </div>\n\n// //         {/* Empty State */}\n// //         {ids.length === 0 && (\n// //           <div className=\"text-center py-12\">\n// //             <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n// //               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n// //             </svg>\n// //             <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No User IDs yet</h3>\n// //             <p className=\"mt-1 text-sm text-gray-500\">\n// //               Get started by creating your first user ID.\n// //             </p>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default UserDashboard;\n\n\n// // import React, { useState } from 'react';\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // import * as Yup from 'yup';\n// // import { authAPI } from '../../services/api';\n// // import { useNavigate } from 'react-router-dom';\n\n// // const UserDashboard = ({ userData, onLogout, onDataUpdate }) => {\n// //   const [isLoading, setIsLoading] = useState(false);\n// //   const [error, setError] = useState('');\n// //   const [showCreateForm, setShowCreateForm] = useState(false);\n\n// //   const navigate = useNavigate();\n\n// //   const validationSchema = Yup.object({\n// //     name: Yup.string()\n// //       .min(2, 'Name must be at least 2 characters')\n// //       .max(50, 'Name cannot exceed 50 characters')\n// //       .required('Name is required'),\n// //   });\n\n// //   const handleCreateNewId = async (values, { setSubmitting, resetForm }) => {\n// //     setIsLoading(true);\n// //     setError('');\n\n// //     try {\n// //       const response = await authAPI.signup(userData.mobileNumber, values.name);\n\n// //       if (response.success) {\n// //         onDataUpdate(response.data);\n// //         setShowCreateForm(false);\n// //         resetForm();\n// //       } else {\n// //         setError(response.message || 'Failed to create new ID');\n// //       }\n// //     } catch (err) {\n// //       setError(err.message || 'Failed to create new ID. Please try again.');\n// //     } finally {\n// //       setIsLoading(false);\n// //       setSubmitting(false);\n// //     }\n// //   };\n\n// //   // ✅ New Enter handler\n// //   const handleEnter = (selectedUserId) => {\n// //     if (!selectedUserId) {\n// //       alert(\"Please select a user ID first\");\n// //       return;\n// //     }\n\n// //     // Replace with actual token from backend if available\n// //     const token = \"dummy-token\";\n\n// //     localStorage.setItem(\"token\", token);\n// //     localStorage.setItem(\n// //       \"authData\",\n// //       JSON.stringify({\n// //         userId: selectedUserId,\n// //         token: token\n// //       })\n// //     );\n\n// //     console.log(\"Saved auth data:\", {\n// //       userId: selectedUserId,\n// //       token\n// //     });\n\n// //     navigate(\"/wallet\");\n// //   };\n\n// //   const formatDate = (dateString) => {\n// //     return new Date(dateString).toLocaleDateString('en-US', {\n// //       year: 'numeric',\n// //       month: 'short',\n// //       day: 'numeric',\n// //       hour: '2-digit',\n// //       minute: '2-digit'\n// //     });\n// //   };\n\n// //   const ids = userData?.allUserIds || [];\n\n// //   return (\n// //     <div className=\"min-h-screen bg-gray-50\">\n// //       {/* Header */}\n// //       <div className=\"bg-white shadow\">\n// //         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n// //           <div className=\"flex justify-between items-center py-6\">\n// //             <div>\n// //               <h1 className=\"text-3xl font-bold text-gray-900\">Your Dashboard</h1>\n// //               <p className=\"mt-1 text-sm text-gray-500\">\n// //                 Mobile: {userData?.parentMobile || userData?.mobileNumber || ''} • {ids.length} User ID{ids.length !== 1 ? 's' : ''} created\n// //               </p>\n// //             </div>\n// //             <button\n// //               onClick={onLogout}\n// //               className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n// //             >\n// //               Logout\n// //             </button>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       {/* Main Content */}\n// //       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n// //         {/* Stats */}\n// //         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n// //           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n// //             <div className=\"p-5 flex items-center\">\n// //               <div className=\"flex-shrink-0\">\n// //                 <div className=\"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\">\n// //                   <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n// //                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n// //                   </svg>\n// //                 </div>\n// //               </div>\n// //               <div className=\"ml-5\">\n// //                 <dt className=\"text-sm font-medium text-gray-500 truncate\">Total IDs</dt>\n// //                 <dd className=\"text-lg font-medium text-gray-900\">{userData.totalIds}/10</dd>\n// //               </div>\n// //             </div>\n// //           </div>\n\n// //           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n// //             <div className=\"p-5 flex items-center\">\n// //               <div className=\"flex-shrink-0\">\n// //                 <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\">\n// //                   <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n// //                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n// //                   </svg>\n// //                 </div>\n// //               </div>\n// //               <div className=\"ml-5\">\n// //                 <dt className=\"text-sm font-medium text-gray-500 truncate\">Can Create More</dt>\n// //                 <dd className=\"text-lg font-medium text-gray-900\">{userData.canCreateMore ? 'Yes' : 'No'}</dd>\n// //               </div>\n// //             </div>\n// //           </div>\n\n// //           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n// //             <div className=\"p-5 flex items-center\">\n// //               <div className=\"flex-shrink-0\">\n// //                 <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\">\n// //                   <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n// //                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n// //                   </svg>\n// //                 </div>\n// //               </div>\n// //               <div className=\"ml-5\">\n// //                 <dt className=\"text-sm font-medium text-gray-500 truncate\">Last Login</dt>\n// //                 <dd className=\"text-sm font-medium text-gray-900\">{formatDate(new Date())}</dd>\n// //               </div>\n// //             </div>\n// //           </div>\n// //         </div>\n\n// //         {/* Create New ID Button */}\n// //         {userData.canCreateMore && (\n// //           <div className=\"mb-6\">\n// //             <button\n// //               onClick={() => setShowCreateForm(!showCreateForm)}\n// //               className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n// //             >\n// //               {showCreateForm ? 'Cancel' : 'Create New ID'}\n// //             </button>\n// //           </div>\n// //         )}\n\n// //         {/* Create New ID Form */}\n// //         {showCreateForm && userData.canCreateMore && (\n// //           <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\n// //             <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New ID</h3>\n// //             <Formik\n// //               initialValues={{ name: '' }}\n// //               validationSchema={validationSchema}\n// //               onSubmit={handleCreateNewId}\n// //             >\n// //               {({ isSubmitting }) => (\n// //                 <Form className=\"space-y-4\">\n// //                   <div>\n// //                     <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n// //                       Name for new ID\n// //                     </label>\n// //                     <Field\n// //                       id=\"name\"\n// //                       name=\"name\"\n// //                       type=\"text\"\n// //                       className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                       placeholder=\"Enter name for new ID\"\n// //                     />\n// //                     <ErrorMessage\n// //                       name=\"name\"\n// //                       component=\"div\"\n// //                       className=\"mt-1 text-sm text-red-600\"\n// //                     />\n// //                   </div>\n\n// //                   {error && (\n// //                     <div className=\"rounded-md bg-red-50 p-4\">\n// //                       <div className=\"ml-3 text-sm font-medium text-red-800\">{error}</div>\n// //                     </div>\n// //                   )}\n\n// //                   <div className=\"flex justify-end space-x-3\">\n// //                     <button\n// //                       type=\"button\"\n// //                       onClick={() => setShowCreateForm(false)}\n// //                       className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\"\n// //                     >\n// //                       Cancel\n// //                     </button>\n// //                     <button\n// //                       type=\"submit\"\n// //                       disabled={isSubmitting || isLoading}\n// //                       className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\"\n// //                     >\n// //                       {isLoading ? 'Creating...' : 'Create ID'}\n// //                     </button>\n// //                   </div>\n// //                 </Form>\n// //               )}\n// //             </Formik>\n// //           </div>\n// //         )}\n\n// //         {/* IDs List */}\n// //         <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n// //           <div className=\"px-4 py-5 sm:px-6\">\n// //             <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Your User IDs</h3>\n// //             <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n// //               All user IDs associated with your mobile number\n// //             </p>\n// //           </div>\n// //           <ul className=\"divide-y divide-gray-200\">\n// //             {ids.map((userId, index) => (\n// //               <li key={userId} className=\"px-4 py-4 sm:px-6 hover:bg-indigo-50 flex justify-between items-center\">\n// //                 <div className=\"flex items-center\">\n// //                   <div className=\"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n// //                     <span className=\"text-indigo-600 font-medium text-sm\">{index + 1}</span>\n// //                   </div>\n// //                   <div className=\"ml-4 text-sm font-medium text-gray-900\">{userId}</div>\n// //                 </div>\n// //                 <button\n// //                   className=\"px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\"\n// //                   onClick={() => handleEnter(userId)}\n// //                 >\n// //                   Enter\n// //                 </button>\n// //               </li>\n// //             ))}\n// //           </ul>\n// //         </div>\n\n// //         {ids.length === 0 && (\n// //           <div className=\"text-center py-12\">\n// //             <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n// //               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n// //             </svg>\n// //             <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No User IDs yet</h3>\n// //             <p className=\"mt-1 text-sm text-gray-500\">Get started by creating your first user ID.</p>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default UserDashboard;\n\n\n\n\n// import React, { useState } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { authAPI } from '../../services/api';\n// import { useNavigate } from 'react-router-dom'; // ✅ Import useNavigate\n\n// const UserDashboard = ({ userData, onLogout, onDataUpdate, onUserIdSelect }) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   const navigate = useNavigate(); // ✅ Initialize navigate\n\n//   const validationSchema = Yup.object({\n//     name: Yup.string()\n//       .min(2, 'Name must be at least 2 characters')\n//       .max(50, 'Name cannot exceed 50 characters')\n//       .required('Name is required'),\n//   });\n\n//   const handleCreateNewId = async (values, { setSubmitting, resetForm }) => {\n//     setIsLoading(true);\n//     setError('');\n\n//     try {\n//       const response = await authAPI.signup(userData.mobileNumber, values.name);\n      \n//       if (response.success) {\n//         onDataUpdate(response.data);\n//         setShowCreateForm(false);\n//         resetForm();\n//       } else {\n//         setError(response.message || 'Failed to create new ID');\n//       }\n//     } catch (err) {\n//       setError(err.message || 'Failed to create new ID. Please try again.');\n//     } finally {\n//       setIsLoading(false);\n//       setSubmitting(false);\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleDateString('en-US', {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: '2-digit',\n//       minute: '2-digit'\n//     });\n//   };\n\n//   const ids = userData?.allUserIds || [];\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-50\">\n//       {/* Header */}\n//       <div className=\"bg-white shadow\">\n//         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n//           <div className=\"flex justify-between items-center py-6\">\n//             <div>\n//               <h1 className=\"text-3xl font-bold text-gray-900\">Your Dashboard</h1>\n//               <p className=\"mt-1 text-sm text-gray-500\">\n//                 Mobile: {userData?.parentMobile || userData?.mobileNumber || ''} • {ids.length} User ID{ids.length !== 1 ? 's' : ''} created\n//               </p>\n//             </div>\n//             <button\n//               onClick={onLogout}\n//               className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n//             >\n//               Logout\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Main Content */}\n//       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n//         {/* Stats */}\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5 flex items-center\">\n//               <div className=\"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\">\n//                 <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                   <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n//                 </svg>\n//               </div>\n//               <div className=\"ml-5 flex-1\">\n//                 <dl>\n//                   <dt className=\"text-sm font-medium text-gray-500 truncate\">Total IDs</dt>\n//                   <dd className=\"text-lg font-medium text-gray-900\">{userData.totalIds}/10</dd>\n//                 </dl>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5 flex items-center\">\n//               <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\">\n//                 <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                   <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n//                 </svg>\n//               </div>\n//               <div className=\"ml-5 flex-1\">\n//                 <dl>\n//                   <dt className=\"text-sm font-medium text-gray-500 truncate\">Can Create More</dt>\n//                   <dd className=\"text-lg font-medium text-gray-900\">\n//                     {userData.canCreateMore ? 'Yes' : 'No'}\n//                   </dd>\n//                 </dl>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5 flex items-center\">\n//               <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\">\n//                 <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                   <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n//                 </svg>\n//               </div>\n//               <div className=\"ml-5 flex-1\">\n//                 <dl>\n//                   <dt className=\"text-sm font-medium text-gray-500 truncate\">Last Login</dt>\n//                   <dd className=\"text-sm font-medium text-gray-900\">\n//                     {formatDate(new Date())}\n//                   </dd>\n//                 </dl>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Create New ID Button */}\n//         {userData.canCreateMore && (\n//           <div className=\"mb-6\">\n//             <button\n//               onClick={() => setShowCreateForm(!showCreateForm)}\n//               className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n//             >\n//               {showCreateForm ? 'Cancel' : 'Create New ID'}\n//             </button>\n//           </div>\n//         )}\n\n//         {/* Create New ID Form */}\n//         {showCreateForm && userData.canCreateMore && (\n//           <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\n//             <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New ID</h3>\n//             <Formik\n//               initialValues={{ name: '' }}\n//               validationSchema={validationSchema}\n//               onSubmit={handleCreateNewId}\n//             >\n//               {({ isSubmitting }) => (\n//                 <Form className=\"space-y-4\">\n//                   <div>\n//                     <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n//                       Name for new ID\n//                     </label>\n//                     <Field\n//                       id=\"name\"\n//                       name=\"name\"\n//                       type=\"text\"\n//                       className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                       placeholder=\"Enter name for new ID\"\n//                     />\n//                     <ErrorMessage\n//                       name=\"name\"\n//                       component=\"div\"\n//                       className=\"mt-1 text-sm text-red-600\"\n//                     />\n//                   </div>\n\n//                   {error && (\n//                     <div className=\"rounded-md bg-red-50 p-4\">\n//                       <div className=\"flex\">\n//                         <div className=\"ml-3\">\n//                           <h3 className=\"text-sm font-medium text-red-800\">\n//                             {error}\n//                           </h3>\n//                         </div>\n//                       </div>\n//                     </div>\n//                   )}\n\n//                   <div className=\"flex justify-end space-x-3\">\n//                     <button\n//                       type=\"button\"\n//                       onClick={() => setShowCreateForm(false)}\n//                       className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\"\n//                     >\n//                       Cancel\n//                     </button>\n//                     <button\n//                       type=\"submit\"\n//                       disabled={isSubmitting || isLoading}\n//                       className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\"\n//                     >\n//                       {isLoading ? 'Creating...' : 'Create ID'}\n//                     </button>\n//                   </div>\n//                 </Form>\n//               )}\n//             </Formik>\n//           </div>\n//         )}\n\n//         {/* IDs List */}\n//         <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n//           <div className=\"px-4 py-5 sm:px-6\">\n//             <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n//               Your User IDs\n//             </h3>\n//             <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n//               All user IDs associated with your mobile number\n//             </p>\n//           </div>\n//           <ul className=\"divide-y divide-gray-200\">\n//             {ids.map((userId, index) => (\n//               <li key={userId} className=\"px-4 py-4 sm:px-6 cursor-pointer hover:bg-indigo-50\">\n//                 <div className=\"flex items-center justify-between\">\n//                   <div className=\"flex items-center\">\n//                     <div className=\"flex-shrink-0\">\n//                       <div className=\"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n//                         <span className=\"text-indigo-600 font-medium text-sm\">\n//                           {index + 1}\n//                         </span>\n//                       </div>\n//                     </div>\n//                     <div className=\"ml-4\">\n//                       <div className=\"text-sm font-medium text-gray-900\">\n//                         {userId}\n//                       </div>\n//                     </div>\n//                   </div>\n//                   <button\n//                     className=\"ml-4 px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\"\n//                     onClick={(e) => {\n//                       e.stopPropagation();\n\n//                       // ✅ Save token & userId to localStorage\n//                       const token = userData?.token || \"dummy-token\"; // Replace with actual token if available\n//                       localStorage.setItem(\"token\", token);\n//                       localStorage.setItem(\"authData\", JSON.stringify({\n//                         userId,\n//                         token\n//                       }));\n\n//                       // Optional: call your onUserIdSelect function\n//                       if (onUserIdSelect) onUserIdSelect(userId);\n\n//                       // ✅ Navigate to home or wallet\n//                       navigate(\"/\"); // or navigate(\"/wallet\")\n//                     }}\n//                   >\n//                     Enter\n//                   </button>\n//                 </div>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n\n//         {/* Empty State */}\n//         {ids.length === 0 && (\n//           <div className=\"text-center py-12\">\n//             <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n//               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n//             </svg>\n//             <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No User IDs yet</h3>\n//             <p className=\"mt-1 text-sm text-gray-500\">\n//               Get started by creating your first user ID.\n//             </p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UserDashboard;\n\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { authAPI } from \"../../services/api\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst UserDashboard = ({ userData, onLogout, onDataUpdate, onUserIdSelect }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const navigate = useNavigate();\n\n  const validationSchema = Yup.object({\n    name: Yup.string()\n      .min(2, \"Name must be at least 2 characters\")\n      .max(50, \"Name cannot exceed 50 characters\")\n      .required(\"Name is required\"),\n  });\n\n  // Store token & userId in localStorage and navigate\n  const enterWithUserId = (userId) => {\n    try {\n      const existingToken =\n        localStorage.getItem(\"token\") ||\n        userData?.token ||\n        userData?.accessToken ||\n        userData?.authToken ||\n        \"dummy-token\"; // fallback token\n\n      localStorage.setItem(\"token\", existingToken);\n      localStorage.setItem(\n        \"authData\",\n        JSON.stringify({ userId, token: existingToken })\n      );\n\n      if (onUserIdSelect) onUserIdSelect(userId);\n\n      navigate(\"/wallet\"); // Change if your wallet route differs\n    } catch (e) {\n      console.error(\"Failed to save auth data:\", e);\n      alert(\"Error saving login details. Please try again.\");\n    }\n  };\n\n  const handleCreateNewId = async (values, { setSubmitting, resetForm }) => {\n    setIsLoading(true);\n    setError(\"\");\n\n    try {\n      const response = await authAPI.signup(\n        userData.mobileNumber,\n        values.name\n      );\n\n      if (response.success) {\n        onDataUpdate(response.data);\n        setShowCreateForm(false);\n        resetForm();\n      } else {\n        setError(response.message || \"Failed to create new ID\");\n      }\n    } catch (err) {\n      setError(err.message || \"Failed to create new ID. Please try again.\");\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n  };\n\n  const ids = userData?.allUserIds || [];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-6\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">\n                Your Dashboard\n              </h1>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Mobile:{\" \"}\n                {userData?.parentMobile || userData?.mobileNumber || \"\"} •{\" \"}\n                {ids.length} User ID{ids.length !== 1 ? \"s\" : \"\"} created\n              </p>\n            </div>\n            <button\n              onClick={onLogout}\n              className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n          <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div className=\"p-5 flex items-center\">\n              <div className=\"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\">\n                <svg\n                  className=\"w-5 h-5 text-white\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                  />\n                </svg>\n              </div>\n              <div className=\"ml-5\">\n                <p className=\"text-sm font-medium text-gray-500 truncate\">\n                  Total IDs\n                </p>\n                <p className=\"text-lg font-medium text-gray-900\">\n                  {userData.totalIds}/10\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div className=\"p-5 flex items-center\">\n              <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\">\n                <svg\n                  className=\"w-5 h-5 text-white\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                  />\n                </svg>\n              </div>\n              <div className=\"ml-5\">\n                <p className=\"text-sm font-medium text-gray-500 truncate\">\n                  Can Create More\n                </p>\n                <p className=\"text-lg font-medium text-gray-900\">\n                  {userData.canCreateMore ? \"Yes\" : \"No\"}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div className=\"p-5 flex items-center\">\n              <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\">\n                <svg\n                  className=\"w-5 h-5 text-white\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                  />\n                </svg>\n              </div>\n              <div className=\"ml-5\">\n                <p className=\"text-sm font-medium text-gray-500 truncate\">\n                  Last Login\n                </p>\n                <p className=\"text-sm font-medium text-gray-900\">\n                  {formatDate(new Date())}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Create ID Button */}\n        {userData.canCreateMore && (\n          <div className=\"mb-6\">\n            <button\n              onClick={() => setShowCreateForm(!showCreateForm)}\n              className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n            >\n              {showCreateForm ? \"Cancel\" : \"Create New ID\"}\n            </button>\n          </div>\n        )}\n\n        {/* Create ID Form */}\n        {showCreateForm && userData.canCreateMore && (\n          <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n              Create New ID\n            </h3>\n            <Formik\n              initialValues={{ name: \"\" }}\n              validationSchema={validationSchema}\n              onSubmit={handleCreateNewId}\n            >\n              {({ isSubmitting }) => (\n                <Form className=\"space-y-4\">\n                  <div>\n                    <label\n                      htmlFor=\"name\"\n                      className=\"block text-sm font-medium text-gray-700\"\n                    >\n                      Name for new ID\n                    </label>\n                    <Field\n                      id=\"name\"\n                      name=\"name\"\n                      type=\"text\"\n                      className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                      placeholder=\"Enter name\"\n                    />\n                    <ErrorMessage\n                      name=\"name\"\n                      component=\"div\"\n                      className=\"mt-1 text-sm text-red-600\"\n                    />\n                  </div>\n\n                  {error && (\n                    <div className=\"rounded-md bg-red-50 p-4\">\n                      <h3 className=\"text-sm font-medium text-red-800\">\n                        {error}\n                      </h3>\n                    </div>\n                  )}\n\n                  <div className=\"flex justify-end space-x-3\">\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowCreateForm(false)}\n                      className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      disabled={isSubmitting || isLoading}\n                      className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\"\n                    >\n                      {isLoading ? \"Creating...\" : \"Create ID\"}\n                    </button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        )}\n\n        {/* User IDs List */}\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n          <div className=\"px-4 py-5 sm:px-6\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n              Your User IDs\n            </h3>\n            <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n              All user IDs associated with your mobile number\n            </p>\n          </div>\n          <ul className=\"divide-y divide-gray-200\">\n            {ids.map((userId, index) => (\n              <li\n                key={userId}\n                className=\"px-4 py-4 sm:px-6 hover:bg-indigo-50\"\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n                        <span className=\"text-indigo-600 font-medium text-sm\">\n                          {index + 1}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"ml-4\">\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {userId}\n                      </div>\n                    </div>\n                  </div>\n                  <button\n                    className=\"ml-4 px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\"\n                    onClick={() => enterWithUserId(userId)}\n                  >\n                    Enter\n                  </button>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* Empty State */}\n        {ids.length === 0 && (\n          <div className=\"text-center py-12\">\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\n              No User IDs yet\n            </h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Get started by creating your first user ID.\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,YAAY;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC9E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAMsB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,gBAAgB,GAAGlB,GAAG,CAACmB,MAAM,CAAC;IAClCC,IAAI,EAAEpB,GAAG,CAACqB,MAAM,CAAC,CAAC,CACfC,GAAG,CAAC,CAAC,EAAE,oCAAoC,CAAC,CAC5CC,GAAG,CAAC,EAAE,EAAE,kCAAkC,CAAC,CAC3CC,QAAQ,CAAC,kBAAkB;EAChC,CAAC,CAAC;;EAEF;EACA,MAAMC,eAAe,GAAIC,MAAM,IAAK;IAClC,IAAI;MACF,MAAMC,aAAa,GACjBC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAC7BvB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEwB,KAAK,MACfxB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEyB,WAAW,MACrBzB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE0B,SAAS,KACnB,aAAa,CAAC,CAAC;;MAEjBJ,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEN,aAAa,CAAC;MAC5CC,YAAY,CAACK,OAAO,CAClB,UAAU,EACVC,IAAI,CAACC,SAAS,CAAC;QAAET,MAAM;QAAEI,KAAK,EAAEH;MAAc,CAAC,CACjD,CAAC;MAED,IAAIlB,cAAc,EAAEA,cAAc,CAACiB,MAAM,CAAC;MAE1CT,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOmB,CAAC,EAAE;MACVC,OAAO,CAACxB,KAAK,CAAC,2BAA2B,EAAEuB,CAAC,CAAC;MAC7CE,KAAK,CAAC,+CAA+C,CAAC;IACxD;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,MAAM,EAAE;IAAEC,aAAa;IAAEC;EAAU,CAAC,KAAK;IACxE9B,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAM6B,QAAQ,GAAG,MAAM1C,OAAO,CAAC2C,MAAM,CACnCtC,QAAQ,CAACuC,YAAY,EACrBL,MAAM,CAACpB,IACT,CAAC;MAED,IAAIuB,QAAQ,CAACG,OAAO,EAAE;QACpBtC,YAAY,CAACmC,QAAQ,CAACI,IAAI,CAAC;QAC3B/B,iBAAiB,CAAC,KAAK,CAAC;QACxB0B,SAAS,CAAC,CAAC;MACb,CAAC,MAAM;QACL5B,QAAQ,CAAC6B,QAAQ,CAACK,OAAO,IAAI,yBAAyB,CAAC;MACzD;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZnC,QAAQ,CAACmC,GAAG,CAACD,OAAO,IAAI,4CAA4C,CAAC;IACvE,CAAC,SAAS;MACRpC,YAAY,CAAC,KAAK,CAAC;MACnB6B,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMS,UAAU,GAAIC,UAAU,IAAK;IACjC,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;MACtDC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,GAAG,GAAG,CAAArD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEsD,UAAU,KAAI,EAAE;EAEtC,oBACExD,OAAA;IAAKyD,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBAEtC1D,OAAA;MAAKyD,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9B1D,OAAA;QAAKyD,SAAS,EAAC,wCAAwC;QAAAC,QAAA,eACrD1D,OAAA;UAAKyD,SAAS,EAAC,wCAAwC;UAAAC,QAAA,gBACrD1D,OAAA;YAAA0D,QAAA,gBACE1D,OAAA;cAAIyD,SAAS,EAAC,kCAAkC;cAAAC,QAAA,EAAC;YAEjD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACL9D,OAAA;cAAGyD,SAAS,EAAC,4BAA4B;cAAAC,QAAA,GAAC,SACjC,EAAC,GAAG,EACV,CAAAxD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE6D,YAAY,MAAI7D,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEuC,YAAY,KAAI,EAAE,EAAC,SAAE,EAAC,GAAG,EAC7Dc,GAAG,CAACS,MAAM,EAAC,UAAQ,EAACT,GAAG,CAACS,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAC,UACnD;YAAA;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACN9D,OAAA;YACEiE,OAAO,EAAE9D,QAAS;YAClBsD,SAAS,EAAC,iFAAiF;YAAAC,QAAA,EAC5F;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN9D,OAAA;MAAKyD,SAAS,EAAC,6CAA6C;MAAAC,QAAA,gBAE1D1D,OAAA;QAAKyD,SAAS,EAAC,4CAA4C;QAAAC,QAAA,gBACzD1D,OAAA;UAAKyD,SAAS,EAAC,4CAA4C;UAAAC,QAAA,eACzD1D,OAAA;YAAKyD,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBACpC1D,OAAA;cAAKyD,SAAS,EAAC,mEAAmE;cAAAC,QAAA,eAChF1D,OAAA;gBACEyD,SAAS,EAAC,oBAAoB;gBAC9BS,IAAI,EAAC,MAAM;gBACXC,MAAM,EAAC,cAAc;gBACrBC,OAAO,EAAC,WAAW;gBAAAV,QAAA,eAEnB1D,OAAA;kBACEqE,aAAa,EAAC,OAAO;kBACrBC,cAAc,EAAC,OAAO;kBACtBC,WAAW,EAAE,CAAE;kBACfC,CAAC,EAAC;gBAAqE;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACN9D,OAAA;cAAKyD,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnB1D,OAAA;gBAAGyD,SAAS,EAAC,4CAA4C;gBAAAC,QAAA,EAAC;cAE1D;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACJ9D,OAAA;gBAAGyD,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,GAC7CxD,QAAQ,CAACuE,QAAQ,EAAC,KACrB;cAAA;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN9D,OAAA;UAAKyD,SAAS,EAAC,4CAA4C;UAAAC,QAAA,eACzD1D,OAAA;YAAKyD,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBACpC1D,OAAA;cAAKyD,SAAS,EAAC,kEAAkE;cAAAC,QAAA,eAC/E1D,OAAA;gBACEyD,SAAS,EAAC,oBAAoB;gBAC9BS,IAAI,EAAC,MAAM;gBACXC,MAAM,EAAC,cAAc;gBACrBC,OAAO,EAAC,WAAW;gBAAAV,QAAA,eAEnB1D,OAAA;kBACEqE,aAAa,EAAC,OAAO;kBACrBC,cAAc,EAAC,OAAO;kBACtBC,WAAW,EAAE,CAAE;kBACfC,CAAC,EAAC;gBAA4B;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/B;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACN9D,OAAA;cAAKyD,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnB1D,OAAA;gBAAGyD,SAAS,EAAC,4CAA4C;gBAAAC,QAAA,EAAC;cAE1D;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACJ9D,OAAA;gBAAGyD,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,EAC7CxD,QAAQ,CAACwE,aAAa,GAAG,KAAK,GAAG;cAAI;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN9D,OAAA;UAAKyD,SAAS,EAAC,4CAA4C;UAAAC,QAAA,eACzD1D,OAAA;YAAKyD,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBACpC1D,OAAA;cAAKyD,SAAS,EAAC,iEAAiE;cAAAC,QAAA,eAC9E1D,OAAA;gBACEyD,SAAS,EAAC,oBAAoB;gBAC9BS,IAAI,EAAC,MAAM;gBACXC,MAAM,EAAC,cAAc;gBACrBC,OAAO,EAAC,WAAW;gBAAAV,QAAA,eAEnB1D,OAAA;kBACEqE,aAAa,EAAC,OAAO;kBACrBC,cAAc,EAAC,OAAO;kBACtBC,WAAW,EAAE,CAAE;kBACfC,CAAC,EAAC;gBAAwF;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3F;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACN9D,OAAA;cAAKyD,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnB1D,OAAA;gBAAGyD,SAAS,EAAC,4CAA4C;gBAAAC,QAAA,EAAC;cAE1D;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACJ9D,OAAA;gBAAGyD,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,EAC7CZ,UAAU,CAAC,IAAIE,IAAI,CAAC,CAAC;cAAC;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGL5D,QAAQ,CAACwE,aAAa,iBACrB1E,OAAA;QAAKyD,SAAS,EAAC,MAAM;QAAAC,QAAA,eACnB1D,OAAA;UACEiE,OAAO,EAAEA,CAAA,KAAMrD,iBAAiB,CAAC,CAACD,cAAc,CAAE;UAClD8C,SAAS,EAAC,uFAAuF;UAAAC,QAAA,EAEhG/C,cAAc,GAAG,QAAQ,GAAG;QAAe;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN,EAGAnD,cAAc,IAAIT,QAAQ,CAACwE,aAAa,iBACvC1E,OAAA;QAAKyD,SAAS,EAAC,qCAAqC;QAAAC,QAAA,gBAClD1D,OAAA;UAAIyD,SAAS,EAAC,wCAAwC;UAAAC,QAAA,EAAC;QAEvD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL9D,OAAA,CAACR,MAAM;UACLmF,aAAa,EAAE;YAAE3D,IAAI,EAAE;UAAG,CAAE;UAC5BF,gBAAgB,EAAEA,gBAAiB;UACnC8D,QAAQ,EAAEzC,iBAAkB;UAAAuB,QAAA,EAE3BA,CAAC;YAAEmB;UAAa,CAAC,kBAChB7E,OAAA,CAACP,IAAI;YAACgE,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACzB1D,OAAA;cAAA0D,QAAA,gBACE1D,OAAA;gBACE8E,OAAO,EAAC,MAAM;gBACdrB,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,EACpD;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACR9D,OAAA,CAACN,KAAK;gBACJqF,EAAE,EAAC,MAAM;gBACT/D,IAAI,EAAC,MAAM;gBACXgE,IAAI,EAAC,MAAM;gBACXvB,SAAS,EAAC,iHAAiH;gBAC3HwB,WAAW,EAAC;cAAY;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC,eACF9D,OAAA,CAACL,YAAY;gBACXqB,IAAI,EAAC,MAAM;gBACXkE,SAAS,EAAC,KAAK;gBACfzB,SAAS,EAAC;cAA2B;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,EAELrD,KAAK,iBACJT,OAAA;cAAKyD,SAAS,EAAC,0BAA0B;cAAAC,QAAA,eACvC1D,OAAA;gBAAIyD,SAAS,EAAC,kCAAkC;gBAAAC,QAAA,EAC7CjD;cAAK;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CACN,eAED9D,OAAA;cAAKyD,SAAS,EAAC,4BAA4B;cAAAC,QAAA,gBACzC1D,OAAA;gBACEgF,IAAI,EAAC,QAAQ;gBACbf,OAAO,EAAEA,CAAA,KAAMrD,iBAAiB,CAAC,KAAK,CAAE;gBACxC6C,SAAS,EAAC,sFAAsF;gBAAAC,QAAA,EACjG;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT9D,OAAA;gBACEgF,IAAI,EAAC,QAAQ;gBACbG,QAAQ,EAAEN,YAAY,IAAItE,SAAU;gBACpCkD,SAAS,EAAC,2GAA2G;gBAAAC,QAAA,EAEpHnD,SAAS,GAAG,aAAa,GAAG;cAAW;gBAAAoD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QACP;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN,eAGD9D,OAAA;QAAKyD,SAAS,EAAC,+CAA+C;QAAAC,QAAA,gBAC5D1D,OAAA;UAAKyD,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC1D,OAAA;YAAIyD,SAAS,EAAC,6CAA6C;YAAAC,QAAA,EAAC;UAE5D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACL9D,OAAA;YAAGyD,SAAS,EAAC,sCAAsC;YAAAC,QAAA,EAAC;UAEpD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN9D,OAAA;UAAIyD,SAAS,EAAC,0BAA0B;UAAAC,QAAA,EACrCH,GAAG,CAAC6B,GAAG,CAAC,CAAC9D,MAAM,EAAE+D,KAAK,kBACrBrF,OAAA;YAEEyD,SAAS,EAAC,sCAAsC;YAAAC,QAAA,eAEhD1D,OAAA;cAAKyD,SAAS,EAAC,mCAAmC;cAAAC,QAAA,gBAChD1D,OAAA;gBAAKyD,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBAChC1D,OAAA;kBAAKyD,SAAS,EAAC,eAAe;kBAAAC,QAAA,eAC5B1D,OAAA;oBAAKyD,SAAS,EAAC,uEAAuE;oBAAAC,QAAA,eACpF1D,OAAA;sBAAMyD,SAAS,EAAC,qCAAqC;sBAAAC,QAAA,EAClD2B,KAAK,GAAG;oBAAC;sBAAA1B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACN;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACN9D,OAAA;kBAAKyD,SAAS,EAAC,MAAM;kBAAAC,QAAA,eACnB1D,OAAA;oBAAKyD,SAAS,EAAC,mCAAmC;oBAAAC,QAAA,EAC/CpC;kBAAM;oBAAAqC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACN9D,OAAA;gBACEyD,SAAS,EAAC,6EAA6E;gBACvFQ,OAAO,EAAEA,CAAA,KAAM5C,eAAe,CAACC,MAAM,CAAE;gBAAAoC,QAAA,EACxC;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN;UAAC,GAxBDxC,MAAM;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAyBT,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,EAGLP,GAAG,CAACS,MAAM,KAAK,CAAC,iBACfhE,OAAA;QAAKyD,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChC1D,OAAA;UAAIyD,SAAS,EAAC,wCAAwC;UAAAC,QAAA,EAAC;QAEvD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL9D,OAAA;UAAGyD,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAC;QAE1C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxD,EAAA,CAnUIL,aAAa;EAAA,QAIAH,WAAW;AAAA;AAAAwF,EAAA,GAJxBrF,aAAa;AAqUnB,eAAeA,aAAa;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}