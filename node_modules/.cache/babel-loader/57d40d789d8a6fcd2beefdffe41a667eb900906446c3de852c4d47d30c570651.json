{"ast":null,"code":"// // // // // // // // src/services/userWalletApi.js\n// // // // // // // import axios from \"axios\";\n\n// // // // // // // const API_URL = \"http://localhost:5001/api/wallet\";\n// // // // // // // const TOKEN_KEY = \"userToken\";\n\n// // // // // // // const userWalletAPI = axios.create({ baseURL: API_URL });\n\n// // // // // // // userWalletAPI.interceptors.request.use((config) => {\n// // // // // // //   const token = localStorage.getItem(TOKEN_KEY);\n// // // // // // //   if (token) config.headers.Authorization = `Bearer ${token}`;\n// // // // // // //   return config;\n// // // // // // // });\n\n// // // // // // // export default {\n// // // // // // //   getWallet: async (userId) => {\n// // // // // // //     const res = await userWalletAPI.get(`/user/${userId}`);\n// // // // // // //     return res.data;\n// // // // // // //   },\n// // // // // // //   getWithdrawals: async (userId) => {\n// // // // // // //     const res = await userWalletAPI.get(`/withdrawals/${userId}`);\n// // // // // // //     return res.data;\n// // // // // // //   },\n// // // // // // //   requestWithdrawal: async (userId, amount, bankDetails) => {\n// // // // // // //     const res = await userWalletAPI.post(`/withdraw`, {\n// // // // // // //       userId,\n// // // // // // //       amount,\n// // // // // // //       ...bankDetails,\n// // // // // // //     });\n// // // // // // //     return res.data;\n// // // // // // //   },\n// // // // // // // };\n\n// // // // // // // src/services/userWalletApi.js\n// // // // // // import axios from \"axios\";\n\n// // // // // // const API_URL = \"http://localhost:5001/api/wallet\";\n// // // // // // const TOKEN_KEY = \"authToken\";\n\n// // // // // // // axios instance\n// // // // // // const userWalletAPI = axios.create({ baseURL: API_URL });\n\n// // // // // // // har request ke header me token inject karega\n// // // // // // userWalletAPI.interceptors.request.use((config) => {\n// // // // // //   const token = localStorage.getItem(TOKEN_KEY);\n// // // // // //   if (token) config.headers.Authorization = `Bearer ${token}`;\n// // // // // //   return config;\n// // // // // // });\n\n// // // // // // export default {\n// // // // // //   // GET wallet data\n// // // // // //   getWallet: async () => {\n// // // // // //     const userId =\n// // // // // //       localStorage.getItem(\"selectedUserId\") ||\n// // // // // //       JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId;\n\n// // // // // //     const res = await userWalletAPI.get(`/user/${userId}`);\n// // // // // //     return res.data;\n// // // // // //   },\n\n// // // // // //   // GET withdrawals\n// // // // // //   getWithdrawals: async () => {\n// // // // // //     const userId =\n// // // // // //       localStorage.getItem(\"selectedUserId\") ||\n// // // // // //       JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId;\n\n// // // // // //     const res = await userWalletAPI.get(`/withdrawals/${userId}`);\n// // // // // //     return res.data;\n// // // // // //   },\n\n// // // // // //   // POST withdrawal request\n// // // // // //   requestWithdrawal: async (amount, bankDetails) => {\n// // // // // //     const userId =\n// // // // // //       localStorage.getItem(\"selectedUserId\") ||\n// // // // // //       JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId;\n\n// // // // // //     const res = await userWalletAPI.post(`/withdraw`, {\n// // // // // //       userId,\n// // // // // //       amount,\n// // // // // //       ...bankDetails,\n// // // // // //     });\n// // // // // //     return res.data;\n// // // // // //   },\n// // // // // // };\n\n// // // // // // src/services/userWalletApi.js\n// // // // // import axios from \"axios\";\n\n// // // // // const API_URL = \"http://localhost:5001/api/wallet\";\n\n// // // // // // axios instance\n// // // // // const userWalletAPI = axios.create({ baseURL: API_URL });\n\n// // // // // // helper to get token from multiple possible keys\n// // // // // const getToken = () => {\n// // // // //   const keys = [\"authToken\", \"token\", \"userToken\"];\n// // // // //   for (let key of keys) {\n// // // // //     const val = localStorage.getItem(key);\n// // // // //     if (val) return val;\n// // // // //   }\n// // // // //   return null;\n// // // // // };\n\n// // // // // // har request ke header me token inject karega\n// // // // // userWalletAPI.interceptors.request.use((config) => {\n// // // // //   const token = getToken();\n// // // // //   if (token) config.headers.Authorization = `Bearer ${token}`;\n// // // // //   return config;\n// // // // // });\n\n// // // // // // helper to get current userId (selected or active)\n// // // // // const getUserId = () => {\n// // // // //   return (\n// // // // //     localStorage.getItem(\"selectedUserId\") ||\n// // // // //     JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId\n// // // // //   );\n// // // // // };\n\n// // // // // export default {\n// // // // //   // GET wallet data\n// // // // //   getWallet: async () => {\n// // // // //     const userId = getUserId();\n// // // // //     const res = await userWalletAPI.get(`/user/${userId}`);\n// // // // //     return res.data;\n// // // // //   },\n\n// // // // //   // GET withdrawals\n// // // // //   getWithdrawals: async () => {\n// // // // //     const userId = getUserId();\n// // // // //     const res = await userWalletAPI.get(`/withdrawals/${userId}`);\n// // // // //     return res.data;\n// // // // //   },\n\n// // // // //   // POST withdrawal request\n// // // // //   requestWithdrawal: async (amount, bankDetails) => {\n// // // // //     const userId = getUserId();\n// // // // //     const res = await userWalletAPI.post(`/withdraw`, {\n// // // // //       userId,\n// // // // //       amount,\n// // // // //       ...bankDetails,\n// // // // //     });\n// // // // //     return res.data;\n// // // // //   },\n// // // // // };\n\n// // // // import axios from \"axios\";\n\n// // // // const API = axios.create({\n// // // //   baseURL: \"http://localhost:5001/api/wallet\",\n// // // // });\n\n// // // // // 🟢 Add token to every request\n// // // // API.interceptors.request.use(\n// // // //   (config) => {\n// // // //     const token = localStorage.getItem(\"authToken\"); // ✅ same key as LoginForm\n// // // //     if (token) {\n// // // //       config.headers.Authorization = `Bearer ${token}`;\n// // // //       console.log(\"👉 Attached token:\", token); // debug\n// // // //     } else {\n// // // //       console.warn(\"⚠️ No token found in localStorage!\");\n// // // //     }\n// // // //     return config;\n// // // //   },\n// // // //   (error) => Promise.reject(error)\n// // // // );\n\n// // // // // ✅ Wallet APIs\n// // // // export const getUserWallet = (userId) => API.get(`/user/${userId}`);\n// // // // export const getUserWithdrawals = (userId) => API.get(`/withdrawals/${userId}`);\n// // // // export const requestWithdrawal = (userId, amount) =>\n// // // //   API.post(`/withdraw/${userId}`, { amount });\n\n// // // // export default API;\n\n// // // import axios from \"axios\";\n\n// // // const API = axios.create({\n// // //   baseURL: \"http://localhost:5001/api/wallet\",\n// // // });\n\n// // // // 🟢 Add token to every request\n// // // API.interceptors.request.use(\n// // //   (config) => {\n// // //     const token = localStorage.getItem(\"authToken\"); \n// // //     if (token) {\n// // //       config.headers.Authorization = `Bearer ${token}`;\n// // //     }\n// // //     return config;\n// // //   },\n// // //   (error) => Promise.reject(error)\n// // // );\n\n// // // // ✅ Wallet APIs\n// // // export const getWallet = (userId) => API.get(`/user/${userId}`);\n// // // export const getWithdrawals = (userId) => API.get(`/withdrawals/${userId}`);\n// // // export const requestWithdrawal = (userId, formData) =>\n// // //   // API.post(`/withdraw/${userId}`, formData);\n// // //  API.post(`/withdraw`, { userId, ...formData });\n// // // export default {\n// // //   getWallet,\n// // //   getWithdrawals,\n// // //   requestWithdrawal,\n// // // };\n\n// // import axios from \"axios\";\n\n// // const API = axios.create({\n// //   baseURL: \"http://localhost:5001/api/wallet\",\n// // });\n\n// // // 🟢 Add token to every request\n// // API.interceptors.request.use(\n// //   (config) => {\n// //     const token = localStorage.getItem(\"token\");  // 🔥 yahan \"authToken\" ki jagah \"token\"\n// //     if (token) {\n// //       config.headers.Authorization = `Bearer ${token}`;\n// //     }\n// //     return config;\n// //   },\n// //   (error) => Promise.reject(error)\n// // );\n\n// // // ✅ Wallet APIs\n// // export const getWallet = (userId) => API.get(`/user/${userId}`);\n// // export const getWithdrawals = (userId) => API.get(`/withdrawals/${userId}`);\n// // export const requestWithdrawal = (userId, formData) =>\n// //   API.post(`/withdraw/${userId}`, formData);\n\n// // export default {\n// //   getWallet,\n// //   getWithdrawals,\n// //   requestWithdrawal,\n// // };\n\n// import axios from \"axios\";\n\n// const API = axios.create({\n//   baseURL: \"http://localhost:5001/api/wallet\", // ✅ backend ke sath exact match\n// });\n\n// // 🟢 Attach token automatically\n// API.interceptors.request.use(\n//   (config) => {\n//     const token = localStorage.getItem(\"token\"); // ✅ Sirf \"token\" use ho\n//     if (token) {\n//       config.headers.Authorization = `Bearer ${token}`;\n//     } else {\n//       console.warn(\"⚠️ No token found in localStorage!\");\n//     }\n//     return config;\n//   },\n//   (error) => Promise.reject(error)\n// );\n\n// // ✅ Wallet APIs\n\n// // Get wallet details\n// export const getWallet = async (userId) => {\n//   try {\n//     const res = await API.get(`/user/${userId}`);\n//     return res.data;\n//   } catch (err) {\n//     console.error(\"❌ getWallet error:\", err.response?.data || err.message);\n//     throw err;\n//   }\n// };\n\n// // Get withdrawal history\n// export const getWithdrawals = async (userId) => {\n//   try {\n//     const res = await API.get(`/withdrawals/${userId}`);\n//     return res.data;\n//   } catch (err) {\n//     console.error(\"❌ getWithdrawals error:\", err.response?.data || err.message);\n//     throw err;\n//   }\n// };\n\n// // Submit withdrawal request (⚠️ userId body me bhejna hoga)\n// export const requestWithdrawal = async (formData) => {\n//   try {\n//     const res = await API.post(`/withdraw`, formData); // ✅ backend ko sirf body me userId chahiye\n//     return res.data;\n//   } catch (err) {\n//     console.error(\"❌ requestWithdrawal error:\", err.response?.data || err.message);\n//     throw err;\n//   }\n// };\n\n// export default {\n//   getWallet,\n//   getWithdrawals,\n//   requestWithdrawal,\n// };\n\nimport axios from \"axios\";\nconst API_URL = \"http://localhost:5001/api/wallet\";\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    console.warn(\"⚠️ No token found in localStorage!\");\n    return {};\n  }\n  return {\n    Authorization: `Bearer ${token}`\n  };\n};\nconst userWalletAPI = {\n  getWallet: async userId => {\n    try {\n      const res = await axios.get(`${API_URL}/user/${userId}`, {\n        headers: getAuthHeaders()\n      });\n      return res;\n    } catch (error) {\n      var _error$response;\n      console.error(\"❌ getWallet error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error;\n    }\n  },\n  getWithdrawals: async userId => {\n    try {\n      const res = await axios.get(`${API_URL}/withdrawals/${userId}`, {\n        headers: getAuthHeaders()\n      });\n      return res;\n    } catch (error) {\n      var _error$response2;\n      console.error(\"❌ getWithdrawals error:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      throw error;\n    }\n  },\n  requestWithdrawal: async (userId, data) => {\n    try {\n      const res = await axios.post(`${API_URL}/withdraw/${userId}`, data, {\n        headers: getAuthHeaders()\n      });\n      return res;\n    } catch (error) {\n      var _error$response3;\n      console.error(\"❌ requestWithdrawal error:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      throw error;\n    }\n  }\n};\nexport default userWalletAPI;","map":{"version":3,"names":["axios","API_URL","getAuthHeaders","token","localStorage","getItem","console","warn","Authorization","userWalletAPI","getWallet","userId","res","get","headers","error","_error$response","response","data","message","getWithdrawals","_error$response2","requestWithdrawal","post","_error$response3"],"sources":["C:/Users/moazz/Downloads/Ecommerce-MLM-Chain-main/Ecommerce-MLM-Chain-main/frontend/frontend/src/services/userWalletApi.js"],"sourcesContent":["// // // // // // // // src/services/userWalletApi.js\r\n// // // // // // // import axios from \"axios\";\r\n\r\n// // // // // // // const API_URL = \"http://localhost:5001/api/wallet\";\r\n// // // // // // // const TOKEN_KEY = \"userToken\";\r\n\r\n// // // // // // // const userWalletAPI = axios.create({ baseURL: API_URL });\r\n\r\n// // // // // // // userWalletAPI.interceptors.request.use((config) => {\r\n// // // // // // //   const token = localStorage.getItem(TOKEN_KEY);\r\n// // // // // // //   if (token) config.headers.Authorization = `Bearer ${token}`;\r\n// // // // // // //   return config;\r\n// // // // // // // });\r\n\r\n// // // // // // // export default {\r\n// // // // // // //   getWallet: async (userId) => {\r\n// // // // // // //     const res = await userWalletAPI.get(`/user/${userId}`);\r\n// // // // // // //     return res.data;\r\n// // // // // // //   },\r\n// // // // // // //   getWithdrawals: async (userId) => {\r\n// // // // // // //     const res = await userWalletAPI.get(`/withdrawals/${userId}`);\r\n// // // // // // //     return res.data;\r\n// // // // // // //   },\r\n// // // // // // //   requestWithdrawal: async (userId, amount, bankDetails) => {\r\n// // // // // // //     const res = await userWalletAPI.post(`/withdraw`, {\r\n// // // // // // //       userId,\r\n// // // // // // //       amount,\r\n// // // // // // //       ...bankDetails,\r\n// // // // // // //     });\r\n// // // // // // //     return res.data;\r\n// // // // // // //   },\r\n// // // // // // // };\r\n\r\n\r\n\r\n// // // // // // // src/services/userWalletApi.js\r\n// // // // // // import axios from \"axios\";\r\n\r\n// // // // // // const API_URL = \"http://localhost:5001/api/wallet\";\r\n// // // // // // const TOKEN_KEY = \"authToken\";\r\n\r\n// // // // // // // axios instance\r\n// // // // // // const userWalletAPI = axios.create({ baseURL: API_URL });\r\n\r\n// // // // // // // har request ke header me token inject karega\r\n// // // // // // userWalletAPI.interceptors.request.use((config) => {\r\n// // // // // //   const token = localStorage.getItem(TOKEN_KEY);\r\n// // // // // //   if (token) config.headers.Authorization = `Bearer ${token}`;\r\n// // // // // //   return config;\r\n// // // // // // });\r\n\r\n// // // // // // export default {\r\n// // // // // //   // GET wallet data\r\n// // // // // //   getWallet: async () => {\r\n// // // // // //     const userId =\r\n// // // // // //       localStorage.getItem(\"selectedUserId\") ||\r\n// // // // // //       JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId;\r\n\r\n// // // // // //     const res = await userWalletAPI.get(`/user/${userId}`);\r\n// // // // // //     return res.data;\r\n// // // // // //   },\r\n\r\n// // // // // //   // GET withdrawals\r\n// // // // // //   getWithdrawals: async () => {\r\n// // // // // //     const userId =\r\n// // // // // //       localStorage.getItem(\"selectedUserId\") ||\r\n// // // // // //       JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId;\r\n\r\n// // // // // //     const res = await userWalletAPI.get(`/withdrawals/${userId}`);\r\n// // // // // //     return res.data;\r\n// // // // // //   },\r\n\r\n// // // // // //   // POST withdrawal request\r\n// // // // // //   requestWithdrawal: async (amount, bankDetails) => {\r\n// // // // // //     const userId =\r\n// // // // // //       localStorage.getItem(\"selectedUserId\") ||\r\n// // // // // //       JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId;\r\n\r\n// // // // // //     const res = await userWalletAPI.post(`/withdraw`, {\r\n// // // // // //       userId,\r\n// // // // // //       amount,\r\n// // // // // //       ...bankDetails,\r\n// // // // // //     });\r\n// // // // // //     return res.data;\r\n// // // // // //   },\r\n// // // // // // };\r\n\r\n\r\n\r\n// // // // // // src/services/userWalletApi.js\r\n// // // // // import axios from \"axios\";\r\n\r\n// // // // // const API_URL = \"http://localhost:5001/api/wallet\";\r\n\r\n// // // // // // axios instance\r\n// // // // // const userWalletAPI = axios.create({ baseURL: API_URL });\r\n\r\n// // // // // // helper to get token from multiple possible keys\r\n// // // // // const getToken = () => {\r\n// // // // //   const keys = [\"authToken\", \"token\", \"userToken\"];\r\n// // // // //   for (let key of keys) {\r\n// // // // //     const val = localStorage.getItem(key);\r\n// // // // //     if (val) return val;\r\n// // // // //   }\r\n// // // // //   return null;\r\n// // // // // };\r\n\r\n// // // // // // har request ke header me token inject karega\r\n// // // // // userWalletAPI.interceptors.request.use((config) => {\r\n// // // // //   const token = getToken();\r\n// // // // //   if (token) config.headers.Authorization = `Bearer ${token}`;\r\n// // // // //   return config;\r\n// // // // // });\r\n\r\n// // // // // // helper to get current userId (selected or active)\r\n// // // // // const getUserId = () => {\r\n// // // // //   return (\r\n// // // // //     localStorage.getItem(\"selectedUserId\") ||\r\n// // // // //     JSON.parse(localStorage.getItem(\"activeUser\") || \"{}\").userId\r\n// // // // //   );\r\n// // // // // };\r\n\r\n// // // // // export default {\r\n// // // // //   // GET wallet data\r\n// // // // //   getWallet: async () => {\r\n// // // // //     const userId = getUserId();\r\n// // // // //     const res = await userWalletAPI.get(`/user/${userId}`);\r\n// // // // //     return res.data;\r\n// // // // //   },\r\n\r\n// // // // //   // GET withdrawals\r\n// // // // //   getWithdrawals: async () => {\r\n// // // // //     const userId = getUserId();\r\n// // // // //     const res = await userWalletAPI.get(`/withdrawals/${userId}`);\r\n// // // // //     return res.data;\r\n// // // // //   },\r\n\r\n// // // // //   // POST withdrawal request\r\n// // // // //   requestWithdrawal: async (amount, bankDetails) => {\r\n// // // // //     const userId = getUserId();\r\n// // // // //     const res = await userWalletAPI.post(`/withdraw`, {\r\n// // // // //       userId,\r\n// // // // //       amount,\r\n// // // // //       ...bankDetails,\r\n// // // // //     });\r\n// // // // //     return res.data;\r\n// // // // //   },\r\n// // // // // };\r\n\r\n\r\n\r\n// // // // import axios from \"axios\";\r\n\r\n// // // // const API = axios.create({\r\n// // // //   baseURL: \"http://localhost:5001/api/wallet\",\r\n// // // // });\r\n\r\n// // // // // 🟢 Add token to every request\r\n// // // // API.interceptors.request.use(\r\n// // // //   (config) => {\r\n// // // //     const token = localStorage.getItem(\"authToken\"); // ✅ same key as LoginForm\r\n// // // //     if (token) {\r\n// // // //       config.headers.Authorization = `Bearer ${token}`;\r\n// // // //       console.log(\"👉 Attached token:\", token); // debug\r\n// // // //     } else {\r\n// // // //       console.warn(\"⚠️ No token found in localStorage!\");\r\n// // // //     }\r\n// // // //     return config;\r\n// // // //   },\r\n// // // //   (error) => Promise.reject(error)\r\n// // // // );\r\n\r\n// // // // // ✅ Wallet APIs\r\n// // // // export const getUserWallet = (userId) => API.get(`/user/${userId}`);\r\n// // // // export const getUserWithdrawals = (userId) => API.get(`/withdrawals/${userId}`);\r\n// // // // export const requestWithdrawal = (userId, amount) =>\r\n// // // //   API.post(`/withdraw/${userId}`, { amount });\r\n\r\n// // // // export default API;\r\n\r\n\r\n\r\n// // // import axios from \"axios\";\r\n\r\n// // // const API = axios.create({\r\n// // //   baseURL: \"http://localhost:5001/api/wallet\",\r\n// // // });\r\n\r\n// // // // 🟢 Add token to every request\r\n// // // API.interceptors.request.use(\r\n// // //   (config) => {\r\n// // //     const token = localStorage.getItem(\"authToken\"); \r\n// // //     if (token) {\r\n// // //       config.headers.Authorization = `Bearer ${token}`;\r\n// // //     }\r\n// // //     return config;\r\n// // //   },\r\n// // //   (error) => Promise.reject(error)\r\n// // // );\r\n\r\n// // // // ✅ Wallet APIs\r\n// // // export const getWallet = (userId) => API.get(`/user/${userId}`);\r\n// // // export const getWithdrawals = (userId) => API.get(`/withdrawals/${userId}`);\r\n// // // export const requestWithdrawal = (userId, formData) =>\r\n// // //   // API.post(`/withdraw/${userId}`, formData);\r\n// // //  API.post(`/withdraw`, { userId, ...formData });\r\n// // // export default {\r\n// // //   getWallet,\r\n// // //   getWithdrawals,\r\n// // //   requestWithdrawal,\r\n// // // };\r\n\r\n\r\n// // import axios from \"axios\";\r\n\r\n// // const API = axios.create({\r\n// //   baseURL: \"http://localhost:5001/api/wallet\",\r\n// // });\r\n\r\n// // // 🟢 Add token to every request\r\n// // API.interceptors.request.use(\r\n// //   (config) => {\r\n// //     const token = localStorage.getItem(\"token\");  // 🔥 yahan \"authToken\" ki jagah \"token\"\r\n// //     if (token) {\r\n// //       config.headers.Authorization = `Bearer ${token}`;\r\n// //     }\r\n// //     return config;\r\n// //   },\r\n// //   (error) => Promise.reject(error)\r\n// // );\r\n\r\n// // // ✅ Wallet APIs\r\n// // export const getWallet = (userId) => API.get(`/user/${userId}`);\r\n// // export const getWithdrawals = (userId) => API.get(`/withdrawals/${userId}`);\r\n// // export const requestWithdrawal = (userId, formData) =>\r\n// //   API.post(`/withdraw/${userId}`, formData);\r\n\r\n// // export default {\r\n// //   getWallet,\r\n// //   getWithdrawals,\r\n// //   requestWithdrawal,\r\n// // };\r\n\r\n\r\n// import axios from \"axios\";\r\n\r\n// const API = axios.create({\r\n//   baseURL: \"http://localhost:5001/api/wallet\", // ✅ backend ke sath exact match\r\n// });\r\n\r\n// // 🟢 Attach token automatically\r\n// API.interceptors.request.use(\r\n//   (config) => {\r\n//     const token = localStorage.getItem(\"token\"); // ✅ Sirf \"token\" use ho\r\n//     if (token) {\r\n//       config.headers.Authorization = `Bearer ${token}`;\r\n//     } else {\r\n//       console.warn(\"⚠️ No token found in localStorage!\");\r\n//     }\r\n//     return config;\r\n//   },\r\n//   (error) => Promise.reject(error)\r\n// );\r\n\r\n// // ✅ Wallet APIs\r\n\r\n// // Get wallet details\r\n// export const getWallet = async (userId) => {\r\n//   try {\r\n//     const res = await API.get(`/user/${userId}`);\r\n//     return res.data;\r\n//   } catch (err) {\r\n//     console.error(\"❌ getWallet error:\", err.response?.data || err.message);\r\n//     throw err;\r\n//   }\r\n// };\r\n\r\n// // Get withdrawal history\r\n// export const getWithdrawals = async (userId) => {\r\n//   try {\r\n//     const res = await API.get(`/withdrawals/${userId}`);\r\n//     return res.data;\r\n//   } catch (err) {\r\n//     console.error(\"❌ getWithdrawals error:\", err.response?.data || err.message);\r\n//     throw err;\r\n//   }\r\n// };\r\n\r\n// // Submit withdrawal request (⚠️ userId body me bhejna hoga)\r\n// export const requestWithdrawal = async (formData) => {\r\n//   try {\r\n//     const res = await API.post(`/withdraw`, formData); // ✅ backend ko sirf body me userId chahiye\r\n//     return res.data;\r\n//   } catch (err) {\r\n//     console.error(\"❌ requestWithdrawal error:\", err.response?.data || err.message);\r\n//     throw err;\r\n//   }\r\n// };\r\n\r\n// export default {\r\n//   getWallet,\r\n//   getWithdrawals,\r\n//   requestWithdrawal,\r\n// };\r\n\r\n\r\n\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5001/api/wallet\";\r\n\r\nconst getAuthHeaders = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    console.warn(\"⚠️ No token found in localStorage!\");\r\n    return {};\r\n  }\r\n  return { Authorization: `Bearer ${token}` };\r\n};\r\n\r\nconst userWalletAPI = {\r\n  getWallet: async (userId) => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/user/${userId}`, {\r\n        headers: getAuthHeaders(),\r\n      });\r\n      return res;\r\n    } catch (error) {\r\n      console.error(\"❌ getWallet error:\", error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getWithdrawals: async (userId) => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/withdrawals/${userId}`, {\r\n        headers: getAuthHeaders(),\r\n      });\r\n      return res;\r\n    } catch (error) {\r\n      console.error(\"❌ getWithdrawals error:\", error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  requestWithdrawal: async (userId, data) => {\r\n    try {\r\n      const res = await axios.post(`${API_URL}/withdraw/${userId}`, data, {\r\n        headers: getAuthHeaders(),\r\n      });\r\n      return res;\r\n    } catch (error) {\r\n      console.error(\"❌ requestWithdrawal error:\", error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default userWalletAPI;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;AAElD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACVG,OAAO,CAACC,IAAI,CAAC,oCAAoC,CAAC;IAClD,OAAO,CAAC,CAAC;EACX;EACA,OAAO;IAAEC,aAAa,EAAE,UAAUL,KAAK;EAAG,CAAC;AAC7C,CAAC;AAED,MAAMM,aAAa,GAAG;EACpBC,SAAS,EAAE,MAAOC,MAAM,IAAK;IAC3B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGZ,OAAO,SAASU,MAAM,EAAE,EAAE;QACvDG,OAAO,EAAEZ,cAAc,CAAC;MAC1B,CAAC,CAAC;MACF,OAAOU,GAAG;IACZ,CAAC,CAAC,OAAOG,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdV,OAAO,CAACS,KAAK,CAAC,oBAAoB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACE,QAAQ,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,IAAI,KAAIH,KAAK,CAACI,OAAO,CAAC;MAC1E,MAAMJ,KAAK;IACb;EACF,CAAC;EAEDK,cAAc,EAAE,MAAOT,MAAM,IAAK;IAChC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGZ,OAAO,gBAAgBU,MAAM,EAAE,EAAE;QAC9DG,OAAO,EAAEZ,cAAc,CAAC;MAC1B,CAAC,CAAC;MACF,OAAOU,GAAG;IACZ,CAAC,CAAC,OAAOG,KAAK,EAAE;MAAA,IAAAM,gBAAA;MACdf,OAAO,CAACS,KAAK,CAAC,yBAAyB,EAAE,EAAAM,gBAAA,GAAAN,KAAK,CAACE,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBH,IAAI,KAAIH,KAAK,CAACI,OAAO,CAAC;MAC/E,MAAMJ,KAAK;IACb;EACF,CAAC;EAEDO,iBAAiB,EAAE,MAAAA,CAAOX,MAAM,EAAEO,IAAI,KAAK;IACzC,IAAI;MACF,MAAMN,GAAG,GAAG,MAAMZ,KAAK,CAACuB,IAAI,CAAC,GAAGtB,OAAO,aAAaU,MAAM,EAAE,EAAEO,IAAI,EAAE;QAClEJ,OAAO,EAAEZ,cAAc,CAAC;MAC1B,CAAC,CAAC;MACF,OAAOU,GAAG;IACZ,CAAC,CAAC,OAAOG,KAAK,EAAE;MAAA,IAAAS,gBAAA;MACdlB,OAAO,CAACS,KAAK,CAAC,4BAA4B,EAAE,EAAAS,gBAAA,GAAAT,KAAK,CAACE,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBN,IAAI,KAAIH,KAAK,CAACI,OAAO,CAAC;MAClF,MAAMJ,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeN,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}