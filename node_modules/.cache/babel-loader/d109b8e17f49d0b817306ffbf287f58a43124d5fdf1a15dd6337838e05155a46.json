{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moazz\\\\ecommerce-mlm-platform\\\\frontend\\\\src\\\\components\\\\ecommerce\\\\CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { createContext, useContext, useState, useEffect } from 'react';\n\n// const CartContext = createContext();\n\n// export function CartProvider({ userId, children }) {\n//   const storageKey = userId ? `cart_${userId}` : 'cart_guest';\n//   const [cart, setCart] = useState([]);\n\n//   useEffect(() => {\n//     const stored = localStorage.getItem(storageKey);\n//     if (stored) setCart(JSON.parse(stored));\n//     else setCart([]);\n//     // eslint-disable-next-line\n//   }, [userId]);\n\n//   useEffect(() => {\n//     localStorage.setItem(storageKey, JSON.stringify(cart));\n//     // eslint-disable-next-line\n//   }, [cart, userId]);\n\n//   const addToCart = (product, quantity = 1) => {\n//     setCart(prev => {\n//       const idx = prev.findIndex(item => item.id === product.id);\n//       if (idx !== -1) {\n//         // Already in cart, increase quantity\n//         const updated = [...prev];\n//         updated[idx].quantity += quantity;\n//         return updated;\n//       }\n//       return [...prev, { ...product, quantity }];\n//     });\n//   };\n\n//   const removeFromCart = (productId) => {\n//     setCart(prev => prev.filter(item => item.id !== productId));\n//   };\n\n//   const updateQuantity = (productId, quantity) => {\n//     setCart(prev => prev.map(item => item.id === productId ? { ...item, quantity: Math.max(1, quantity) } : item));\n//   };\n\n//   const clearCart = () => setCart([]);\n\n//   return (\n//     <CartContext.Provider value={{ cart, addToCart, removeFromCart, updateQuantity, clearCart }}>\n//       {children}\n//     </CartContext.Provider>\n//   );\n// }\n\n// export function useCart() {\n//   return useContext(CartContext);\n// }   \n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport function CartProvider({\n  userId = 'guest',\n  children\n}) {\n  _s();\n  // Added default userId\n  const storageKey = `cart_${userId}`;\n  const [cart, setCart] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // Added loading state\n\n  // Load cart from localStorage\n  useEffect(() => {\n    try {\n      const stored = localStorage.getItem(storageKey);\n      if (stored) {\n        const parsed = JSON.parse(stored);\n        // Validate cart structure\n        if (Array.isArray(parsed)) {\n          setCart(parsed);\n        } else {\n          console.warn('Invalid cart data in localStorage, resetting');\n          localStorage.removeItem(storageKey);\n        }\n      }\n    } catch (error) {\n      console.error('Error loading cart from localStorage:', error);\n      localStorage.removeItem(storageKey);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userId, storageKey]);\n\n  // Save cart to localStorage\n  useEffect(() => {\n    if (!isLoading) {\n      // Only save after initial load\n      try {\n        localStorage.setItem(storageKey, JSON.stringify(cart));\n      } catch (error) {\n        console.error('Error saving cart to localStorage:', error);\n      }\n    }\n  }, [cart, userId, storageKey, isLoading]);\n  const addToCart = (product, quantity = 1) => {\n    if (!product || !product.id) return;\n    setCart(prev => {\n      const idx = prev.findIndex(item => item.id === product.id);\n      if (idx !== -1) {\n        const updated = [...prev];\n        updated[idx].quantity += quantity;\n        return updated;\n      }\n      const newCart = [...prev, {\n        id: product.id,\n        name: product.name,\n        price: product.price,\n        image: product.image,\n        quantity,\n        price: Number(product.price) || 0 // Ensure price is a number\n      }];\n      return newCart;\n    });\n  };\n  const removeFromCart = productId => {\n    setCart(prev => prev.filter(item => item.id !== productId));\n  };\n  const updateQuantity = (productId, quantity) => {\n    const qty = Math.max(1, Number(quantity) || 1);\n    setCart(prev => prev.map(item => item.id === productId ? {\n      ...item,\n      quantity: qty\n    } : item));\n  };\n  const clearCart = () => setCart([]);\n\n  // Added cart totals for easier access\n  const cartTotal = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  const itemCount = cart.reduce((sum, item) => sum + item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      cartTotal,\n      itemCount,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"fZkNGYu6LaKLsjbXC27gsgysXaE=\");\n_c = CartProvider;\nexport function useCart() {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","userId","children","_s","storageKey","cart","setCart","isLoading","setIsLoading","stored","localStorage","getItem","parsed","JSON","parse","Array","isArray","console","warn","removeItem","error","setItem","stringify","addToCart","product","quantity","id","prev","idx","findIndex","item","updated","newCart","name","price","image","Number","removeFromCart","productId","filter","updateQuantity","qty","Math","max","map","clearCart","cartTotal","reduce","sum","itemCount","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/moazz/ecommerce-mlm-platform/frontend/src/components/ecommerce/CartContext.jsx"],"sourcesContent":["// import React, { createContext, useContext, useState, useEffect } from 'react';\n\n// const CartContext = createContext();\n\n// export function CartProvider({ userId, children }) {\n//   const storageKey = userId ? `cart_${userId}` : 'cart_guest';\n//   const [cart, setCart] = useState([]);\n\n//   useEffect(() => {\n//     const stored = localStorage.getItem(storageKey);\n//     if (stored) setCart(JSON.parse(stored));\n//     else setCart([]);\n//     // eslint-disable-next-line\n//   }, [userId]);\n\n//   useEffect(() => {\n//     localStorage.setItem(storageKey, JSON.stringify(cart));\n//     // eslint-disable-next-line\n//   }, [cart, userId]);\n\n//   const addToCart = (product, quantity = 1) => {\n//     setCart(prev => {\n//       const idx = prev.findIndex(item => item.id === product.id);\n//       if (idx !== -1) {\n//         // Already in cart, increase quantity\n//         const updated = [...prev];\n//         updated[idx].quantity += quantity;\n//         return updated;\n//       }\n//       return [...prev, { ...product, quantity }];\n//     });\n//   };\n\n//   const removeFromCart = (productId) => {\n//     setCart(prev => prev.filter(item => item.id !== productId));\n//   };\n\n//   const updateQuantity = (productId, quantity) => {\n//     setCart(prev => prev.map(item => item.id === productId ? { ...item, quantity: Math.max(1, quantity) } : item));\n//   };\n\n//   const clearCart = () => setCart([]);\n\n//   return (\n//     <CartContext.Provider value={{ cart, addToCart, removeFromCart, updateQuantity, clearCart }}>\n//       {children}\n//     </CartContext.Provider>\n//   );\n// }\n\n// export function useCart() {\n//   return useContext(CartContext);\n// }   \n\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst CartContext = createContext();\n\nexport function CartProvider({ userId = 'guest', children }) { // Added default userId\n  const storageKey = `cart_${userId}`;\n  const [cart, setCart] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // Added loading state\n\n  // Load cart from localStorage\n  useEffect(() => {\n    try {\n      const stored = localStorage.getItem(storageKey);\n      if (stored) {\n        const parsed = JSON.parse(stored);\n        // Validate cart structure\n        if (Array.isArray(parsed)) {\n          setCart(parsed);\n        } else {\n          console.warn('Invalid cart data in localStorage, resetting');\n          localStorage.removeItem(storageKey);\n        }\n      }\n    } catch (error) {\n      console.error('Error loading cart from localStorage:', error);\n      localStorage.removeItem(storageKey);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userId, storageKey]);\n\n  // Save cart to localStorage\n  useEffect(() => {\n    if (!isLoading) { // Only save after initial load\n      try {\n        localStorage.setItem(storageKey, JSON.stringify(cart));\n      } catch (error) {\n        console.error('Error saving cart to localStorage:', error);\n      }\n    }\n  }, [cart, userId, storageKey, isLoading]);\n\n  const addToCart = (product, quantity = 1) => {\n    \n    if (!product || !product.id) return;\n    setCart(prev => {\n      const idx = prev.findIndex(item => item.id === product.id);\n      if (idx !== -1) {\n        const updated = [...prev];\n        updated[idx].quantity += quantity;\n        return updated;\n      }\n      const newCart = [...prev, { \n        id:product.id,\n        name:product.name,\n        price:product.price,\n        image:product.image,\n        quantity,\n        price: Number(product.price) || 0 // Ensure price is a number\n      }];\n      return newCart;\n    });\n  };\n\n  const removeFromCart = (productId) => {\n    setCart(prev => prev.filter(item => item.id !== productId));\n  };\n\n  const updateQuantity = (productId, quantity) => {\n    const qty = Math.max(1, Number(quantity) || 1);\n    setCart(prev => prev.map(item => \n      item.id === productId ? { ...item, quantity: qty } : item\n    ));\n  };\n\n  const clearCart = () => setCart([]);\n\n  // Added cart totals for easier access\n  const cartTotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);\n  const itemCount = cart.reduce((sum, item) => sum + item.quantity, 0);\n\n  return (\n    <CartContext.Provider value={{ \n      cart, \n      addToCart, \n      removeFromCart, \n      updateQuantity, \n      clearCart,\n      cartTotal,\n      itemCount,\n      isLoading\n    }}>\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart() {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}