{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moazz\\\\Downloads\\\\Ecommerce-MLM-Chain-main\\\\Ecommerce-MLM-Chain-main\\\\frontend\\\\frontend\\\\src\\\\components\\\\auth\\\\SignupForm.js\",\n  _s = $RefreshSig$();\n// // // // import React, { useState } from 'react';\n// // // // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // // // import * as Yup from 'yup';\n\n// // // // import { authAPI } from '../../services/api';\n// // // // import { API_URL } from '../../config';\n\n// // // // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\n// // // //   const [isLoading, setIsLoading] = useState(false);\n// // // //   const [error, setError] = useState('');\n// // // //   const [userIds, setUserIds] = useState([]);\n// // // //   const [showDashboard, setShowDashboard] = useState(false);\n// // // //   const [step, setStep] = useState(1); // 1: form, 2: otp\n// // // //   const [mobileForOtp, setMobileForOtp] = useState('');\n// // // //   const [otp, setOtp] = useState('');\n// // // //   const [otpError, setOtpError] = useState('');\n// // // //   const [otpMessage, setOtpMessage] = useState('');\n// // // //   const [isOtpLoading, setIsOtpLoading] = useState(false);\n\n// // // //   const validationSchema = Yup.object({\n// // // //     name: Yup.string().min(2, 'Name must be at least 2 characters').max(50, 'Name cannot exceed 50 characters').required('Name is required'),\n// // // //     email: Yup.string().email('Please enter a valid email address').nullable(),\n// // // //     mobileNumber: Yup.string().matches(/^[0-9]{10,15}$/, 'Please enter a valid mobile number').required('Mobile number is required'),\n// // // //     password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n// // // //     confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm password is required'),\n// // // //   });\n\n// // // //   const sendOtp = async (mobile) => {\n// // // //     setIsOtpLoading(true);\n// // // //     setOtpError('');\n// // // //     setOtpMessage('');\n// // // //     try {\n// // // //       // Using fetch with API_URL from config\n// // // //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/send-otp`, {\n// // // //         method: 'POST',\n// // // //         headers: {\n// // // //           'Content-Type': 'application/json',\n// // // //         },\n// // // //         body: JSON.stringify({ mobile }),\n// // // //       });\n// // // //       const data = await response.json();\n// // // //       if (!response.ok) {\n// // // //         throw new Error(data.error || 'Failed to send OTP');\n// // // //       }\n// // // //       setOtpMessage('OTP sent to your mobile number.');\n// // // //     } catch (err) {\n// // // //       setOtpError(err.message || 'Failed to send OTP');\n// // // //     } finally {\n// // // //       setIsOtpLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   const handleSubmit = async (values, { setSubmitting }) => {\n// // // //     setError('');\n// // // //     setUserIds([]);\n// // // //     setShowDashboard(false);\n// // // //     setMobileForOtp(values.mobileNumber);\n// // // //     setStep(2);\n// // // //     await sendOtp(values.mobileNumber);\n// // // //     setSubmitting(false);\n// // // //   };\n\n// // // //   const handleVerifyOtp = async () => {\n// // // //     setIsOtpLoading(true);\n// // // //     setOtpError('');\n// // // //     setOtpMessage('');\n// // // //     try {\n// // // //       // Using fetch with API_URL from config for OTP verification\n// // // //       const verifyResponse = await fetch(`${API_URL.replace('/api', '')}/auth/verify-otp`, {\n// // // //         method: 'POST',\n// // // //         headers: {\n// // // //           'Content-Type': 'application/json',\n// // // //         },\n// // // //         body: JSON.stringify({ mobile: mobileForOtp, otp }),\n// // // //       });\n\n// // // //       const verifyData = await verifyResponse.json();\n// // // //       if (!verifyResponse.ok) {\n// // // //         throw new Error(verifyData.error || 'OTP verification failed');\n// // // //       }\n\n// // // //       // Now create the account using authAPI\n// // // //       setIsLoading(true);\n// // // //       try {\n// // // //         const signupData = {\n// // // //           mobileNumber: mobileForOtp,\n// // // //           // You may want to store the rest of the form data in a ref or state for this step\n// // // //           // For demo, just pass mobileNumber\n// // // //         };\n\n// // // //         const response = await authAPI.signup(signupData);\n\n// // // //         if (response.success) {\n// // // //           setUserIds(response.data?.allUserIds || []);\n// // // //           setShowDashboard(true);\n// // // //           onSignupSuccess && onSignupSuccess(response.data);\n// // // //         } else {\n// // // //           setError(response.message || 'Signup failed');\n// // // //           setStep(1);\n// // // //         }\n// // // //       } catch (signupErr) {\n// // // //         setError(signupErr.message || 'Signup failed');\n// // // //         setStep(1);\n// // // //       }\n// // // //     } catch (err) {\n// // // //       setOtpError(err.message || 'OTP verification failed');\n// // // //     } finally {\n// // // //       setIsOtpLoading(false);\n// // // //       setIsLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   if (showDashboard && userIds.length > 0) {\n// // // //     return (\n// // // //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // // //         <div className=\"max-w-md w-full space-y-8\">\n// // // //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\n// // // //           <ul className=\"mt-4 mb-6\">\n// // // //             {userIds.map((id) => (\n// // // //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\n// // // //             ))}\n// // // //           </ul>\n// // // //           <button onClick={() => setShowDashboard(false)} className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\">Create another user</button>\n// // // //         </div>\n// // // //       </div>\n// // // //     );\n// // // //   }\n\n// // // //   if (step === 2) {\n// // // //     return (\n// // // //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // // //         <div className=\"max-w-md w-full space-y-8\">\n// // // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n// // // //           <p className=\"text-center text-sm text-gray-600\">Enter the OTP sent to your mobile number {mobileForOtp}</p>\n// // // //           <div className=\"space-y-4\">\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={otp}\n// // // //               onChange={e => setOtp(e.target.value)}\n// // // //               placeholder=\"Enter OTP\"\n// // // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n// // // //             />\n// // // //             <button\n// // // //               onClick={handleVerifyOtp}\n// // // //               disabled={isOtpLoading || !otp}\n// // // //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\n// // // //             >\n// // // //               {isOtpLoading ? 'Verifying...' : 'Verify OTP'}\n// // // //             </button>\n// // // //             <button\n// // // //               onClick={() => sendOtp(mobileForOtp)}\n// // // //               disabled={isOtpLoading}\n// // // //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md\"\n// // // //             >\n// // // //               Resend OTP\n// // // //             </button>\n// // // //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\n// // // //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\n// // // //             <button onClick={() => setStep(1)} className=\"w-full py-2 px-4 text-indigo-600\">Back to Signup</button>\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n// // // //     );\n// // // //   }\n\n// // // //   return (\n// // // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // // //       <div className=\"max-w-md w-full space-y-8\">\n// // // //         <div>\n// // // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Create your account</h2>\n// // // //           <p className=\"mt-2 text-center text-sm text-gray-600\">Enter your details to create a user ID under your mobile</p>\n// // // //         </div>\n// // // //         <Formik\n// // // //           initialValues={{ name: '', email: '', mobileNumber: '', password: '', confirmPassword: '' }}\n// // // //           validationSchema={validationSchema}\n// // // //           onSubmit={handleSubmit}\n// // // //         >\n// // // //           {({ isSubmitting }) => (\n// // // //             <Form className=\"mt-8 space-y-6\">\n// // // //               <div className=\"space-y-4\">\n// // // //                 <div>\n// // // //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Name</label>\n// // // //                   <Field id=\"name\" name=\"name\" type=\"text\" autoComplete=\"name\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your name\" />\n// // // //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n// // // //                 <div>\n// // // //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email (optional)</label>\n// // // //                   <Field id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your email (optional)\" />\n// // // //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n// // // //                 <div>\n// // // //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">Mobile Number</label>\n// // // //                   <Field id=\"mobileNumber\" name=\"mobileNumber\" type=\"tel\" autoComplete=\"tel\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your mobile number\" />\n// // // //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n// // // //                 <div>\n// // // //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\n// // // //                   <Field id=\"password\" name=\"password\" type=\"password\" autoComplete=\"new-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your password\" />\n// // // //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n// // // //                 <div>\n// // // //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">Confirm Password</label>\n// // // //                   <Field id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" autoComplete=\"new-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Confirm your password\" />\n// // // //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n// // // //               </div>\n// // // //               {error && (\n// // // //                 <div className=\"rounded-md bg-red-50 p-4\">\n// // // //                   <div className=\"flex\">\n// // // //                     <div className=\"ml-3\">\n// // // //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\n// // // //                     </div>\n// // // //                   </div>\n// // // //                 </div>\n// // // //               )}\n// // // //               <div>\n// // // //                 <button type=\"submit\" disabled={isSubmitting || isLoading} className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\">\n// // // //                   {isLoading ? 'Creating account...' : 'Create account'}\n// // // //                 </button>\n// // // //               </div>\n// // // //               <div className=\"text-center\">\n// // // //                 <button type=\"button\" onClick={onSwitchToLogin} className=\"font-medium text-indigo-600 hover:text-indigo-500\">Already have an account? Sign in</button>\n// // // //               </div>\n// // // //             </Form>\n// // // //           )}\n// // // //         </Formik>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default SignupForm;\n\n// // // import React, { useState, useEffect } from 'react';\n// // // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // // import * as Yup from 'yup';\n// // // import { authAPI } from '../../services/api';\n\n// // // import { \n// // //   auth, \n// // //   RecaptchaVerifier, \n// // //   signInWithPhoneNumber \n// // // } from '../../firebase';\n\n// // // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\n// // //   const [isLoading, setIsLoading] = useState(false);\n// // //   const [error, setError] = useState('');\n// // //   const [userIds, setUserIds] = useState([]);\n// // //   const [showDashboard, setShowDashboard] = useState(false);\n// // //   const [step, setStep] = useState(1); // 1: form, 2: otp\n// // //   const [mobileForOtp, setMobileForOtp] = useState('');\n// // //   const [otp, setOtp] = useState('');\n// // //   const [otpError, setOtpError] = useState('');\n// // //   const [otpMessage, setOtpMessage] = useState('');\n// // //   const [isOtpLoading, setIsOtpLoading] = useState(false);\n// // //   const [formData, setFormData] = useState(null);\n\n// // //   const validationSchema = Yup.object({\n// // //     name: Yup.string()\n// // //       .min(2, 'Name must be at least 2 characters')\n// // //       .max(50, 'Name cannot exceed 50 characters')\n// // //       .required('Name is required'),\n// // //     email: Yup.string()\n// // //       .email('Please enter a valid email address')\n// // //       .nullable(),\n// // //     mobileNumber: Yup.string()\n// // //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n// // //       .required('Mobile number is required'),\n// // //     password: Yup.string()\n// // //       .min(6, 'Password must be at least 6 characters')\n// // //       .required('Password is required'),\n// // //     confirmPassword: Yup.string()\n// // //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n// // //       .required('Confirm password is required'),\n// // //   });\n\n// // //   // Initialize reCAPTCHA\n// // //   useEffect(() => {\n// // //     window.recaptchaVerifier = new RecaptchaVerifier(\n// // //       'recaptcha-container',\n// // //       {\n// // //         size: 'invisible',\n// // //         callback: () => {\n// // //           // This will be called when reCAPTCHA is solved\n// // //         },\n// // //       },\n// // //       auth\n// // //     );\n\n// // //     return () => {\n// // //       if (window.recaptchaVerifier) {\n// // //         window.recaptchaVerifier.clear();\n// // //       }\n// // //     };\n// // //   }, []);\n\n// // //   const sendOtp = async (mobile) => {\n// // //     setIsOtpLoading(true);\n// // //     setOtpError('');\n// // //     setOtpMessage('');\n\n// // //     try {\n// // //       const phoneNumber = `+91${mobile}`; // Adjust country code as needed\n// // //       const confirmationResult = await auth().signInWithPhoneNumber(\n// // //         phoneNumber,\n// // //         window.recaptchaVerifier\n// // //       );\n\n// // //       window.confirmationResult = confirmationResult;\n// // //       setOtpMessage('OTP sent to your mobile number.');\n// // //     } catch (err) {\n// // //       console.error('OTP Error:', err);\n// // //       setOtpError(err.message || 'Failed to send OTP. Please try again.');\n// // //     } finally {\n// // //       setIsOtpLoading(false);\n// // //     }\n// // //   };\n\n// // //   const handleSubmit = async (values, { setSubmitting }) => {\n// // //     setError('');\n// // //     setFormData(values);\n// // //     setMobileForOtp(values.mobileNumber);\n// // //     await sendOtp(values.mobileNumber);\n// // //     setStep(2);\n// // //     setSubmitting(false);\n// // //   };\n\n// // //   const handleVerifyOtp = async () => {\n// // //     setIsOtpLoading(true);\n// // //     setOtpError('');\n// // //     setOtpMessage('');\n\n// // //     try {\n// // //       // Verify OTP with Firebase\n// // //       await window.confirmationResult.confirm(otp);\n\n// // //       // OTP verified - proceed with account creation\n// // //       setIsLoading(true);\n// // //       try {\n// // //         const response = await authAPI.signup({\n// // //           name: formData.name,\n// // //           email: formData.email,\n// // //           mobileNumber: formData.mobileNumber,\n// // //           password: formData.password,\n// // //         });\n\n// // //         if (response.success) {\n// // //           setUserIds(response.data?.allUserIds || []);\n// // //           setShowDashboard(true);\n// // //           onSignupSuccess && onSignupSuccess(response.data);\n// // //         } else {\n// // //           setError(response.message || 'Signup failed');\n// // //           setStep(1);\n// // //         }\n// // //       } catch (signupErr) {\n// // //         setError(signupErr.message || 'Signup failed. Please try again.');\n// // //         setStep(1);\n// // //       }\n// // //     } catch (err) {\n// // //       setOtpError(err.message || 'Invalid OTP. Please try again.');\n// // //     } finally {\n// // //       setIsOtpLoading(false);\n// // //       setIsLoading(false);\n// // //     }\n// // //   };\n\n// // //   if (showDashboard && userIds.length > 0) {\n// // //     return (\n// // //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // //         <div className=\"max-w-md w-full space-y-8\">\n// // //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\n// // //           <ul className=\"mt-4 mb-6\">\n// // //             {userIds.map((id) => (\n// // //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\n// // //             ))}\n// // //           </ul>\n// // //           <button \n// // //             onClick={() => setShowDashboard(false)} \n// // //             className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n// // //           >\n// // //             Create another user\n// // //           </button>\n// // //         </div>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   if (step === 2) {\n// // //     return (\n// // //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // //         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// // //         <div className=\"max-w-md w-full space-y-8\">\n// // //           <div>\n// // //             <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n// // //             <p className=\"text-center text-sm text-gray-600\">\n// // //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n// // //             </p>\n// // //           </div>\n\n// // //           <div className=\"space-y-4\">\n// // //             <div>\n// // //               <input\n// // //                 type=\"text\"\n// // //                 value={otp}\n// // //                 onChange={(e) => setOtp(e.target.value)}\n// // //                 placeholder=\"Enter OTP\"\n// // //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n// // //                 maxLength=\"6\"\n// // //               />\n// // //             </div>\n\n// // //             <button\n// // //               onClick={handleVerifyOtp}\n// // //               disabled={isOtpLoading || otp.length !== 6}\n// // //               className={`w-full py-2 px-4 rounded-md text-white ${isOtpLoading || otp.length !== 6 ? 'bg-indigo-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'} transition-colors`}\n// // //             >\n// // //               {isOtpLoading ? (\n// // //                 <span className=\"flex items-center justify-center\">\n// // //                   <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// // //                     <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// // //                     <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// // //                   </svg>\n// // //                   Verifying...\n// // //                 </span>\n// // //               ) : 'Verify OTP'}\n// // //             </button>\n\n// // //             <button\n// // //               onClick={() => sendOtp(mobileForOtp)}\n// // //               disabled={isOtpLoading}\n// // //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors disabled:opacity-50\"\n// // //             >\n// // //               Resend OTP\n// // //             </button>\n\n// // //             {otpMessage && (\n// // //               <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n// // //                 {otpMessage}\n// // //               </div>\n// // //             )}\n\n// // //             {otpError && (\n// // //               <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n// // //                 {otpError}\n// // //               </div>\n// // //             )}\n\n// // //             <button \n// // //               onClick={() => setStep(1)}\n// // //               className=\"w-full py-2 px-4 text-indigo-600 hover:text-indigo-800 transition-colors\"\n// // //             >\n// // //               Back to Signup\n// // //             </button>\n// // //           </div>\n// // //         </div>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   return (\n// // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// // //       <div className=\"max-w-md w-full space-y-8\">\n// // //         <div>\n// // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n// // //             Create your account\n// // //           </h2>\n// // //           <p className=\"mt-2 text-center text-sm text-gray-600\">\n// // //             Enter your details to create a user ID under your mobile\n// // //           </p>\n// // //         </div>\n\n// // //         <Formik\n// // //           initialValues={{\n// // //             name: '',\n// // //             email: '',\n// // //             mobileNumber: '',\n// // //             password: '',\n// // //             confirmPassword: ''\n// // //           }}\n// // //           validationSchema={validationSchema}\n// // //           onSubmit={handleSubmit}\n// // //         >\n// // //           {({ isSubmitting, isValid, dirty }) => (\n// // //             <Form className=\"mt-8 space-y-6\">\n// // //               <div className=\"space-y-4\">\n// // //                 <div>\n// // //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Full Name\n// // //                   </label>\n// // //                   <Field \n// // //                     id=\"name\" \n// // //                     name=\"name\" \n// // //                     type=\"text\" \n// // //                     autoComplete=\"name\" \n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                     placeholder=\"Enter your full name\"\n// // //                   />\n// // //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n\n// // //                 <div>\n// // //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Email (optional)\n// // //                   </label>\n// // //                   <Field \n// // //                     id=\"email\" \n// // //                     name=\"email\" \n// // //                     type=\"email\" \n// // //                     autoComplete=\"email\" \n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                     placeholder=\"Enter your email\"\n// // //                   />\n// // //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n\n// // //                 <div>\n// // //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Mobile Number\n// // //                   </label>\n// // //                   <div className=\"mt-1 flex rounded-md shadow-sm\">\n// // //                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 sm:text-sm\">\n// // //                       +91\n// // //                     </span>\n// // //                     <Field \n// // //                       id=\"mobileNumber\" \n// // //                       name=\"mobileNumber\" \n// // //                       type=\"tel\" \n// // //                       autoComplete=\"tel\" \n// // //                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                       placeholder=\"Enter your 10-digit mobile number\"\n// // //                       maxLength=\"10\"\n// // //                     />\n// // //                   </div>\n// // //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n\n// // //                 <div>\n// // //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Password\n// // //                   </label>\n// // //                   <Field \n// // //                     id=\"password\" \n// // //                     name=\"password\" \n// // //                     type=\"password\" \n// // //                     autoComplete=\"new-password\" \n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                     placeholder=\"Enter your password\"\n// // //                   />\n// // //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n\n// // //                 <div>\n// // //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Confirm Password\n// // //                   </label>\n// // //                   <Field \n// // //                     id=\"confirmPassword\" \n// // //                     name=\"confirmPassword\" \n// // //                     type=\"password\" \n// // //                     autoComplete=\"new-password\" \n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                     placeholder=\"Confirm your password\"\n// // //                   />\n// // //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n// // //               </div>\n\n// // //               {error && (\n// // //                 <div className=\"rounded-md bg-red-50 p-4\">\n// // //                   <div className=\"flex\">\n// // //                     <div className=\"ml-3\">\n// // //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\n// // //                     </div>\n// // //                   </div>\n// // //                 </div>\n// // //               )}\n\n// // //               <div>\n// // //                 <button\n// // //                   type=\"submit\"\n// // //                   disabled={isSubmitting || isLoading || !isValid || !dirty}\n// // //                   className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${isSubmitting || isLoading || !isValid || !dirty ? 'bg-indigo-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors`}\n// // //                 >\n// // //                   {isLoading ? (\n// // //                     <span className=\"flex items-center justify-center\">\n// // //                       <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// // //                         <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// // //                         <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// // //                       </svg>\n// // //                       Processing...\n// // //                     </span>\n// // //                   ) : 'Send OTP'}\n// // //                 </button>\n// // //               </div>\n\n// // //               <div className=\"text-center\">\n// // //                 <button\n// // //                   type=\"button\"\n// // //                   onClick={onSwitchToLogin}\n// // //                   className=\"font-medium text-indigo-600 hover:text-indigo-500 transition-colors\"\n// // //                 >\n// // //                   Already have an account? Sign in\n// // //                 </button>\n// // //               </div>\n// // //             </Form>\n// // //           )}\n// // //         </Formik>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default SignupForm;\n\n// // import React, { useState, useEffect, useRef } from 'react';\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // import * as Yup from 'yup';\n// // import { authAPI } from '../../services/api';\n// // import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\n\n// // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\n// //   // State management\n// //   const [step, setStep] = useState(1); // 1: form, 2: otp\n// //   const [loading, setLoading] = useState({\n// //     form: false,\n// //     otp: false,\n// //     resend: false\n// //   });\n// //   const [error, setError] = useState('');\n// //   const [message, setMessage] = useState('');\n// //   const [formData, setFormData] = useState(null);\n// //   const [mobileForOtp, setMobileForOtp] = useState('');\n// //   const [otp, setOtp] = useState('');\n// //   const recaptchaVerifier = useRef(null);\n\n// //   // Form validation schema\n// //   const validationSchema = Yup.object({\n// //     name: Yup.string()\n// //       .min(2, 'Name must be at least 2 characters')\n// //       .max(50, 'Name cannot exceed 50 characters')\n// //       .required('Name is required'),\n// //     email: Yup.string()\n// //       .email('Please enter a valid email address')\n// //       .nullable(),\n// //     mobileNumber: Yup.string()\n// //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n// //       .required('Mobile number is required'),\n// //     password: Yup.string()\n// //       .min(8, 'Password must be at least 8 characters')\n// //       .matches(\n// //         /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n// //         'Password must contain at least one uppercase, one lowercase, one number and one special character'\n// //       )\n// //       .required('Password is required'),\n// //     confirmPassword: Yup.string()\n// //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n// //       .required('Confirm password is required'),\n// //   });\n\n// //   // Initialize reCAPTCHA\n// //   useEffect(() => {\n// //     recaptchaVerifier.current = new RecaptchaVerifier(\n// //       'recaptcha-container',\n// //       {\n// //         size: 'invisible',\n// //         callback: () => {\n// //           // This will be called when reCAPTCHA is solved\n// //         },\n// //       },\n// //       auth\n// //     );\n\n// //     return () => {\n// //       if (recaptchaVerifier.current) {\n// //         recaptchaVerifier.current.clear();\n// //       }\n// //     };\n// //   }, []);\n\n// //   const sendOtp = async (mobile) => {\n// //     setLoading(prev => ({ ...prev, form: true }));\n// //     setError('');\n// //     setMessage('');\n\n// //     try {\n// //       const phoneNumber = `+91${mobile}`;\n// //       const confirmationResult = await signInWithPhoneNumber(\n// //         auth,\n// //         phoneNumber,\n// //         recaptchaVerifier.current\n// //       );\n\n// //       window.confirmationResult = confirmationResult;\n// //       setMessage('OTP sent to your mobile number.');\n// //       setMobileForOtp(mobile);\n// //       setStep(2);\n// //     } catch (err) {\n// //       console.error('OTP Error:', err);\n// //       setError(err.message || 'Failed to send OTP. Please try again.');\n// //       // Reset recaptcha on error\n// //       recaptchaVerifier.current.clear();\n// //       recaptchaVerifier.current = new RecaptchaVerifier(\n// //         'recaptcha-container',\n// //         {\n// //           size: 'invisible',\n// //           callback: () => {},\n// //         },\n// //         auth\n// //       );\n// //     } finally {\n// //       setLoading(prev => ({ ...prev, form: false }));\n// //     }\n// //   };\n\n// //   const resendOtp = async () => {\n// //     setLoading(prev => ({ ...prev, resend: true }));\n// //     setError('');\n\n// //     try {\n// //       await sendOtp(mobileForOtp);\n// //       setMessage('New OTP sent to your mobile number.');\n// //     } catch (err) {\n// //       setError(err.message || 'Failed to resend OTP. Please try again.');\n// //     } finally {\n// //       setLoading(prev => ({ ...prev, resend: false }));\n// //     }\n// //   };\n\n// //   const verifyOtp = async () => {\n// //     setLoading(prev => ({ ...prev, otp: true }));\n// //     setError('');\n\n// //     try {\n// //       // Verify OTP with Firebase\n// //       await window.confirmationResult.confirm(otp);\n\n// //       // OTP verified - proceed with account creation\n// //       try {\n// //         const response = await authAPI.signup({\n// //           name: formData.name,\n// //           email: formData.email,\n// //           mobileNumber: formData.mobileNumber,\n// //           password: formData.password,\n// //         });\n\n// //         if (response.success) {\n// //           onSignupSuccess?.(response.data);\n// //         } else {\n// //           throw new Error(response.message || 'Signup failed');\n// //         }\n// //       } catch (signupErr) {\n// //         throw new Error(signupErr.message || 'Signup failed. Please try again.');\n// //       }\n// //     } catch (err) {\n// //       setError(err.message || 'Invalid OTP. Please try again.');\n// //     } finally {\n// //       setLoading(prev => ({ ...prev, otp: false }));\n// //     }\n// //   };\n\n// //   const handleFormSubmit = async (values, { setSubmitting }) => {\n// //     setFormData(values);\n// //     await sendOtp(values.mobileNumber);\n// //     setSubmitting(false);\n// //   };\n\n// //   // OTP Verification Step\n// //   if (step === 2) {\n// //     return (\n// //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// //         <div className=\"max-w-md w-full space-y-8\">\n// //           <div className=\"text-center\">\n// //             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n// //             <p className=\"mt-2 text-sm text-gray-600\">\n// //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n// //             </p>\n// //           </div>\n\n// //           <div className=\"space-y-4\">\n// //             <div>\n// //               <input\n// //                 type=\"text\"\n// //                 value={otp}\n// //                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n// //                 placeholder=\"Enter 6-digit OTP\"\n// //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\n// //                 inputMode=\"numeric\"\n// //                 autoFocus\n// //               />\n// //             </div>\n\n// //             <button\n// //               onClick={verifyOtp}\n// //               disabled={loading.otp || otp.length !== 6}\n// //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n// //             >\n// //               {loading.otp ? (\n// //                 <>\n// //                   <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// //                     <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// //                     <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// //                   </svg>\n// //                   Verifying...\n// //                 </>\n// //               ) : 'Verify OTP'}\n// //             </button>\n\n// //             <button\n// //               onClick={resendOtp}\n// //               disabled={loading.resend}\n// //               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\n// //             >\n// //               {loading.resend ? 'Resending OTP...' : 'Resend OTP'}\n// //             </button>\n\n// //             {message && (\n// //               <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n// //                 {message}\n// //               </div>\n// //             )}\n\n// //             {error && (\n// //               <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n// //                 {error}\n// //               </div>\n// //             )}\n\n// //             <button \n// //               onClick={() => {\n// //                 setStep(1);\n// //                 setError('');\n// //                 setMessage('');\n// //               }}\n// //               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\n// //             >\n// //               ← Back to Signup\n// //             </button>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     );\n// //   }\n\n// //   // Initial Signup Form\n// //   return (\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// //       <div className=\"max-w-md w-full space-y-8\">\n// //         <div className=\"text-center\">\n// //           <h2 className=\"text-3xl font-extrabold text-gray-900\">\n// //             Create your account\n// //           </h2>\n// //           <p className=\"mt-2 text-sm text-gray-600\">\n// //             Enter your details to get started\n// //           </p>\n// //         </div>\n\n// //         <Formik\n// //           initialValues={{\n// //             name: '',\n// //             email: '',\n// //             mobileNumber: '',\n// //             password: '',\n// //             confirmPassword: ''\n// //           }}\n// //           validationSchema={validationSchema}\n// //           onSubmit={handleFormSubmit}\n// //         >\n// //           {({ isSubmitting, isValid, dirty }) => (\n// //             <Form className=\"mt-8 space-y-6\">\n// //               <div className=\"space-y-4\">\n// //                 <div>\n// //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Full Name\n// //                   </label>\n// //                   <Field \n// //                     id=\"name\" \n// //                     name=\"name\" \n// //                     type=\"text\" \n// //                     autoComplete=\"name\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"Your full name\"\n// //                   />\n// //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n\n// //                 <div>\n// //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Email (optional)\n// //                   </label>\n// //                   <Field \n// //                     id=\"email\" \n// //                     name=\"email\" \n// //                     type=\"email\" \n// //                     autoComplete=\"email\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"your.email@example.com\"\n// //                   />\n// //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n\n// //                 <div>\n// //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Mobile Number\n// //                   </label>\n// //                   <div className=\"mt-1 flex rounded-md shadow-sm\">\n// //                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n// //                       +91\n// //                     </span>\n// //                     <Field \n// //                       id=\"mobileNumber\" \n// //                       name=\"mobileNumber\" \n// //                       type=\"tel\" \n// //                       autoComplete=\"tel\" \n// //                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                       placeholder=\"9876543210\"\n// //                       maxLength=\"10\"\n// //                     />\n// //                   </div>\n// //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n\n// //                 <div>\n// //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Password\n// //                   </label>\n// //                   <Field \n// //                     id=\"password\" \n// //                     name=\"password\" \n// //                     type=\"password\" \n// //                     autoComplete=\"new-password\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"At least 8 characters\"\n// //                   />\n// //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n\n// //                 <div>\n// //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Confirm Password\n// //                   </label>\n// //                   <Field \n// //                     id=\"confirmPassword\" \n// //                     name=\"confirmPassword\" \n// //                     type=\"password\" \n// //                     autoComplete=\"new-password\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"Confirm your password\"\n// //                   />\n// //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n// //               </div>\n\n// //               {error && (\n// //                 <div className=\"rounded-md bg-red-50 p-3\">\n// //                   <p className=\"text-sm text-red-700\">{error}</p>\n// //                 </div>\n// //               )}\n\n// //               <div>\n// //                 <button\n// //                   type=\"submit\"\n// //                   disabled={loading.form || !isValid || !dirty}\n// //                   className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n// //                 >\n// //                   {loading.form ? (\n// //                     <>\n// //                       <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// //                         <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// //                         <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// //                       </svg>\n// //                       Sending OTP...\n// //                     </>\n// //                   ) : 'Send OTP'}\n// //                 </button>\n// //               </div>\n\n// //               <div className=\"text-center text-sm\">\n// //                 <p className=\"text-gray-600\">\n// //                   Already have an account?{' '}\n// //                   <button\n// //                     type=\"button\"\n// //                     onClick={onSwitchToLogin}\n// //                     className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n// //                   >\n// //                     Sign in\n// //                   </button>\n// //                 </p>\n// //               </div>\n// //             </Form>\n// //           )}\n// //         </Formik>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default SignupForm;\n\n// import React, { useState, useEffect } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\n\n// const SignupForm = () => {\n//   const [step, setStep] = useState(1); // 1: form, 2: otp\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [mobileForOtp, setMobileForOtp] = useState('');\n//   const [otp, setOtp] = useState('');\n//   const navigate = useNavigate();\n\n//   const validationSchema = Yup.object({\n//     name: Yup.string()\n//       .min(2, 'Name must be at least 2 characters')\n//       .max(50, 'Name cannot exceed 50 characters')\n//       .required('Name is required'),\n//     email: Yup.string()\n//       .email('Please enter a valid email address')\n//       .nullable(),\n//     mobileNumber: Yup.string()\n//       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n//       .required('Mobile number is required'),\n//     password: Yup.string()\n//       .min(8, 'Password must be at least 8 characters')\n//       .matches(\n//         /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n//         'Password must contain at least one uppercase, one lowercase, one number and one special character'\n//       )\n//       .required('Password is required'),\n//     confirmPassword: Yup.string()\n//       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n//       .required('Confirm password is required'),\n//   });\n\n//   useEffect(() => {\n//     window.recaptchaVerifier = new RecaptchaVerifier(\n//       'recaptcha-container',\n//       { size: 'invisible' },\n//       auth\n//     );\n\n//     return () => {\n//       if (window.recaptchaVerifier) {\n//         window.recaptchaVerifier.clear();\n//       }\n//     };\n//   }, []);\n\n//   const sendOtp = async (mobile) => {\n//     setLoading(true);\n//     setError('');\n//     setMessage('');\n\n//     try {\n//       const phoneNumber = `+91${mobile}`;\n//       const confirmationResult = await signInWithPhoneNumber(\n//         auth,\n//         phoneNumber,\n//         window.recaptchaVerifier\n//       );\n\n//       window.confirmationResult = confirmationResult;\n//       setMessage('OTP sent to your mobile number.');\n//       setMobileForOtp(mobile);\n//       setStep(2);\n//     } catch (err) {\n//       setError(err.message || 'Failed to send OTP. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const verifyOtp = async () => {\n//     setLoading(true);\n//     setError('');\n\n//     try {\n//       await window.confirmationResult.confirm(otp);\n//       setMessage('Account created successfully! Redirecting to login...');\n//       setTimeout(() => navigate('/login'), 2000);\n//     } catch (err) {\n//       setError(err.message || 'Invalid OTP. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleFormSubmit = async (values) => {\n//     await sendOtp(values.mobileNumber);\n//     // You would typically save formData to use after OTP verification\n//   };\n\n//   if (step === 2) {\n//     return (\n//       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n//         <div className=\"max-w-md w-full space-y-8\">\n//           <div className=\"text-center\">\n//             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n//             <p className=\"mt-2 text-sm text-gray-600\">\n//               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n//             </p>\n//           </div>\n\n//           {message && (\n//             <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n//               {message}\n//             </div>\n//           )}\n\n//           {error && (\n//             <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n//               {error}\n//             </div>\n//           )}\n\n//           <div className=\"space-y-4\">\n//             <div>\n//               <input\n//                 type=\"text\"\n//                 value={otp}\n//                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n//                 placeholder=\"Enter 6-digit OTP\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\n//                 inputMode=\"numeric\"\n//                 autoFocus\n//               />\n//             </div>\n\n//             <button\n//               onClick={verifyOtp}\n//               disabled={loading || otp.length !== 6}\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n//             >\n//               {loading ? 'Verifying...' : 'Verify OTP'}\n//             </button>\n\n//             <button\n//               onClick={() => sendOtp(mobileForOtp)}\n//               disabled={loading}\n//               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\n//             >\n//               Resend OTP\n//             </button>\n\n//             <button \n//               onClick={() => {\n//                 setStep(1);\n//                 setError('');\n//                 setMessage('');\n//               }}\n//               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\n//             >\n//               ← Back to Signup\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n//       <div className=\"max-w-md w-full space-y-8\">\n//         <div className=\"text-center\">\n//           <h2 className=\"text-3xl font-extrabold text-gray-900\">\n//             Create your account\n//           </h2>\n//           <p className=\"mt-2 text-sm text-gray-600\">\n//             Or{' '}\n//             <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n//               sign in to your account\n//             </Link>\n//           </p>\n//         </div>\n\n//         <Formik\n//           initialValues={{\n//             name: '',\n//             email: '',\n//             mobileNumber: '',\n//             password: '',\n//             confirmPassword: ''\n//           }}\n//           validationSchema={validationSchema}\n//           onSubmit={handleFormSubmit}\n//         >\n//           {({ isSubmitting, isValid, dirty }) => (\n//             <Form className=\"mt-8 space-y-6\">\n//               <div className=\"space-y-4\">\n//                 <div>\n//                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n//                     Full Name\n//                   </label>\n//                   <Field \n//                     id=\"name\" \n//                     name=\"name\" \n//                     type=\"text\" \n//                     autoComplete=\"name\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"Your full name\"\n//                   />\n//                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n\n//                 <div>\n//                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n//                     Email (optional)\n//                   </label>\n//                   <Field \n//                     id=\"email\" \n//                     name=\"email\" \n//                     type=\"email\" \n//                     autoComplete=\"email\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"your.email@example.com\"\n//                   />\n//                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n\n//                 <div>\n//                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\n//                     Mobile Number\n//                   </label>\n//                   <div className=\"mt-1 flex rounded-md shadow-sm\">\n//                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n//                       +91\n//                     </span>\n//                     <Field \n//                       id=\"mobileNumber\" \n//                       name=\"mobileNumber\" \n//                       type=\"tel\" \n//                       autoComplete=\"tel\" \n//                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                       placeholder=\"9876543210\"\n//                       maxLength=\"10\"\n//                     />\n//                   </div>\n//                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n\n//                 <div>\n//                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n//                     Password\n//                   </label>\n//                   <Field \n//                     id=\"password\" \n//                     name=\"password\" \n//                     type=\"password\" \n//                     autoComplete=\"new-password\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"At least 6 characters\"\n//                   />\n//                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n\n//                 <div>\n//                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n//                     Confirm Password\n//                   </label>\n//                   <Field \n//                     id=\"confirmPassword\" \n//                     name=\"confirmPassword\" \n//                     type=\"password\" \n//                     autoComplete=\"new-password\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"Confirm your password\"\n//                   />\n//                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n//               </div>\n\n//               {error && (\n//                 <div className=\"rounded-md bg-red-50 p-3\">\n//                   <p className=\"text-sm text-red-700\">{error}</p>\n//                 </div>\n//               )}\n\n//               <div>\n//                 <button\n//                   type=\"submit\"\n//                   disabled={loading || !isValid || !dirty}\n//                   className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n//                 >\n//                   {loading ? 'Sending OTP...' : 'Sign Up'}\n//                 </button>\n//               </div>\n//             </Form>\n//           )}\n//         </Formik>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SignupForm;\n\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\nimport { authAPI } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupForm = () => {\n  _s();\n  const [step, setStep] = useState(1); // 1: form, 2: otp, 3: success\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [mobileForOtp, setMobileForOtp] = useState('');\n  const [otp, setOtp] = useState('');\n  const [generatedUserId, setGeneratedUserId] = useState('');\n  const [formData, setFormData] = useState(null);\n  const navigate = useNavigate();\n  const validationSchema = Yup.object({\n    name: Yup.string().min(2, 'Name must be at least 2 characters').max(50, 'Name cannot exceed 50 characters').required('Name is required'),\n    email: Yup.string().email('Please enter a valid email address').nullable(),\n    mobileNumber: Yup.string().matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number').required('Mobile number is required'),\n    password: Yup.string().min(6, 'Password must be at least 6 characters').matches(/^(?=.*[a-zA-Z])(?=.*\\d).+$/, 'Password must contain at least one letter and one number').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm password is required')\n  });\n\n  // useEffect(() => {\n  //   window.recaptchaVerifier = new RecaptchaVerifier(\n  //     'recaptcha-container',\n  //     { size: 'invisible' },\n  //     auth\n  //   );\n\n  //   return () => {\n  //     if (window.recaptchaVerifier) {\n  //       window.recaptchaVerifier.clear();\n  //     }\n  //   };\n  // }, []);\n\n  // const sendOtp = async (mobile) => {\n  //   setLoading(true);\n  //   setError('');\n  //   setMessage('');\n\n  //   try {\n  //     const phoneNumber = `+91${mobile}`;\n  //     const confirmationResult = await signInWithPhoneNumber(\n  //       auth,\n  //       phoneNumber,\n  //       window.recaptchaVerifier\n  //     );\n\n  //     window.confirmationResult = confirmationResult;\n  //     setMessage('OTP sent to your mobile number.');\n  //     setMobileForOtp(mobile);\n  //     setStep(2);\n  //   } catch (err) {\n  //     setError(err.message || 'Failed to send OTP. Please try again.');\n  //   } finally {\n  //     setLoading(false);\n  //   }\n  // };\n\n  useEffect(() => {\n    if (!window.recaptchaVerifier) {\n      window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n        size: 'invisible'\n      }, auth);\n      window.recaptchaVerifier.render();\n    }\n  }, []);\n  const sendOtp = async mobile => {\n    setLoading(true);\n    setError('');\n    setMessage('');\n    try {\n      const phoneNumber = `+91${mobile}`;\n      const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, window.recaptchaVerifier);\n      window.confirmationResult = confirmationResult;\n      setMessage('OTP sent to your mobile number.');\n      setMobileForOtp(mobile);\n      setStep(2);\n    } catch (err) {\n      console.error(\"OTP Error:\", err);\n      if (err.code === \"auth/invalid-app-credential\") {\n        setError(\"Firebase config invalid है। कृपया .env values check करो।\");\n      } else if (err.code === \"auth/missing-phone-number\") {\n        setError(\"Phone number सही format में दो (+91XXXXXXXXXX).\");\n      } else {\n        setError(err.message || 'Failed to send OTP. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const generateUserId = async mobileNumber => {\n    try {\n      const response = await authAPI.generateUserId({\n        mobileNumber\n      });\n      if (response.success) {\n        return response.userId; // Format: user1, user2, ..., user100\n      }\n      throw new Error(response.message || 'Failed to generate user ID');\n    } catch (err) {\n      throw err;\n    }\n  };\n  const verifyOtp = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      await window.confirmationResult.confirm(otp);\n\n      // Generate user ID after OTP verification\n      const userId = await generateUserId(mobileForOtp);\n      setGeneratedUserId(userId);\n\n      // Complete signup with all form data\n      const response = await authAPI.completeSignup({\n        ...formData,\n        userId\n      });\n      if (response.success) {\n        setMessage('Account created successfully!');\n        setStep(3);\n      } else {\n        throw new Error(response.message || 'Signup failed');\n      }\n    } catch (err) {\n      setError(err.message || 'Invalid OTP. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFormSubmit = async values => {\n    setFormData(values); // Store form data for later use\n    await sendOtp(values.mobileNumber);\n  };\n\n  // Step 3: Success screen with generated user ID\n  if (step === 3) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md w-full space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl font-extrabold text-gray-900\",\n            children: \"Registration Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-lg\",\n            children: [\"Your User ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: generatedUserId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1489,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-gray-600\",\n            children: \"Please note this ID carefully as you'll need it to login.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1491,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/login'),\n            className: \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n            children: \"Proceed to Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1497,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1496,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1485,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1484,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Step 2: OTP Verification\n  if (step === 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recaptcha-container\",\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1513,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md w-full space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl font-extrabold text-gray-900\",\n            children: \"Verify OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-gray-600\",\n            children: [\"Enter the 6-digit OTP sent to +91 \", mobileForOtp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1517,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1515,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 bg-green-50 text-green-700 rounded-md text-sm\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1523,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 bg-red-50 text-red-700 rounded-md text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1529,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: otp,\n              onChange: e => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6)),\n              placeholder: \"Enter 6-digit OTP\",\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\",\n              inputMode: \"numeric\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1536,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1535,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: verifyOtp,\n            disabled: loading || otp.length !== 6,\n            className: \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\",\n            children: loading ? 'Verifying...' : 'Verify OTP'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1547,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendOtp(mobileForOtp),\n            disabled: loading,\n            className: \"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\",\n            children: \"Resend OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1555,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setStep(1);\n              setError('');\n              setMessage('');\n            },\n            className: \"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\",\n            children: \"\\u2190 Back to Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1563,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1534,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1514,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1512,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Step 1: Registration Form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1582,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-extrabold text-gray-900\",\n          children: \"Create your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-gray-600\",\n          children: [\"Or\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"font-medium text-indigo-600 hover:text-indigo-500\",\n            children: \"sign in to your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1590,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1588,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1584,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          name: '',\n          email: '',\n          mobileNumber: '',\n          password: '',\n          confirmPassword: ''\n        },\n        validationSchema: validationSchema,\n        onSubmit: handleFormSubmit,\n        children: ({\n          isSubmitting,\n          isValid,\n          dirty\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"mt-8 space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1611,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"name\",\n                name: \"name\",\n                type: \"text\",\n                autoComplete: \"name\",\n                className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n                placeholder: \"Your full name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1614,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"name\",\n                component: \"div\",\n                className: \"mt-1 text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1622,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1610,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Email (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1626,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"email\",\n                name: \"email\",\n                type: \"email\",\n                autoComplete: \"email\",\n                className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n                placeholder: \"your.email@example.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1629,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                component: \"div\",\n                className: \"mt-1 text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1637,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1625,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"mobileNumber\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Mobile Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1641,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 flex rounded-md shadow-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\",\n                  children: \"+91\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1645,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  id: \"mobileNumber\",\n                  name: \"mobileNumber\",\n                  type: \"tel\",\n                  autoComplete: \"tel\",\n                  className: \"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n                  placeholder: \"9876543210\",\n                  maxLength: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1648,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1644,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"mobileNumber\",\n                component: \"div\",\n                className: \"mt-1 text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1658,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1640,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1662,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"password\",\n                name: \"password\",\n                type: \"password\",\n                autoComplete: \"new-password\",\n                className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n                placeholder: \"At least 6 characters with letters and numbers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1665,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                component: \"div\",\n                className: \"mt-1 text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1673,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1661,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirmPassword\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1677,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"confirmPassword\",\n                name: \"confirmPassword\",\n                type: \"password\",\n                autoComplete: \"new-password\",\n                className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n                placeholder: \"Confirm your password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1680,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"confirmPassword\",\n                component: \"div\",\n                className: \"mt-1 text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1688,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1676,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1609,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rounded-md bg-red-50 p-3\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-red-700\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1694,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1693,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: loading || !isValid || !dirty,\n              className: \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\",\n              children: loading ? 'Sending OTP...' : 'Sign Up'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1699,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1698,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1608,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1596,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1583,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1581,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupForm, \"lu8TRVGCtUlnhZoe60F4Jl2HHo8=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","useEffect","Formik","Form","Field","ErrorMessage","Yup","Link","useNavigate","auth","RecaptchaVerifier","signInWithPhoneNumber","authAPI","jsxDEV","_jsxDEV","SignupForm","_s","step","setStep","loading","setLoading","error","setError","message","setMessage","mobileForOtp","setMobileForOtp","otp","setOtp","generatedUserId","setGeneratedUserId","formData","setFormData","navigate","validationSchema","object","name","string","min","max","required","email","nullable","mobileNumber","matches","password","confirmPassword","oneOf","ref","window","recaptchaVerifier","size","render","sendOtp","mobile","phoneNumber","confirmationResult","err","console","code","generateUserId","response","success","userId","Error","verifyOtp","confirm","completeSignup","handleFormSubmit","values","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","style","display","type","value","onChange","e","target","replace","slice","placeholder","inputMode","autoFocus","disabled","length","to","initialValues","onSubmit","isSubmitting","isValid","dirty","htmlFor","autoComplete","component","maxLength","_c","$RefreshReg$"],"sources":["C:/Users/moazz/Downloads/Ecommerce-MLM-Chain-main/Ecommerce-MLM-Chain-main/frontend/frontend/src/components/auth/SignupForm.js"],"sourcesContent":["// // // // import React, { useState } from 'react';\n// // // // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // // // import * as Yup from 'yup';\n\n// // // // import { authAPI } from '../../services/api';\n// // // // import { API_URL } from '../../config';\n\n// // // // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\n// // // //   const [isLoading, setIsLoading] = useState(false);\n// // // //   const [error, setError] = useState('');\n// // // //   const [userIds, setUserIds] = useState([]);\n// // // //   const [showDashboard, setShowDashboard] = useState(false);\n// // // //   const [step, setStep] = useState(1); // 1: form, 2: otp\n// // // //   const [mobileForOtp, setMobileForOtp] = useState('');\n// // // //   const [otp, setOtp] = useState('');\n// // // //   const [otpError, setOtpError] = useState('');\n// // // //   const [otpMessage, setOtpMessage] = useState('');\n// // // //   const [isOtpLoading, setIsOtpLoading] = useState(false);\n\n// // // //   const validationSchema = Yup.object({\n// // // //     name: Yup.string().min(2, 'Name must be at least 2 characters').max(50, 'Name cannot exceed 50 characters').required('Name is required'),\n// // // //     email: Yup.string().email('Please enter a valid email address').nullable(),\n// // // //     mobileNumber: Yup.string().matches(/^[0-9]{10,15}$/, 'Please enter a valid mobile number').required('Mobile number is required'),\n// // // //     password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n// // // //     confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm password is required'),\n// // // //   });\n\n// // // //   const sendOtp = async (mobile) => {\n// // // //     setIsOtpLoading(true);\n// // // //     setOtpError('');\n// // // //     setOtpMessage('');\n// // // //     try {\n// // // //       // Using fetch with API_URL from config\n// // // //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/send-otp`, {\n// // // //         method: 'POST',\n// // // //         headers: {\n// // // //           'Content-Type': 'application/json',\n// // // //         },\n// // // //         body: JSON.stringify({ mobile }),\n// // // //       });\n// // // //       const data = await response.json();\n// // // //       if (!response.ok) {\n// // // //         throw new Error(data.error || 'Failed to send OTP');\n// // // //       }\n// // // //       setOtpMessage('OTP sent to your mobile number.');\n// // // //     } catch (err) {\n// // // //       setOtpError(err.message || 'Failed to send OTP');\n// // // //     } finally {\n// // // //       setIsOtpLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   const handleSubmit = async (values, { setSubmitting }) => {\n// // // //     setError('');\n// // // //     setUserIds([]);\n// // // //     setShowDashboard(false);\n// // // //     setMobileForOtp(values.mobileNumber);\n// // // //     setStep(2);\n// // // //     await sendOtp(values.mobileNumber);\n// // // //     setSubmitting(false);\n// // // //   };\n\n// // // //   const handleVerifyOtp = async () => {\n// // // //     setIsOtpLoading(true);\n// // // //     setOtpError('');\n// // // //     setOtpMessage('');\n// // // //     try {\n// // // //       // Using fetch with API_URL from config for OTP verification\n// // // //       const verifyResponse = await fetch(`${API_URL.replace('/api', '')}/auth/verify-otp`, {\n// // // //         method: 'POST',\n// // // //         headers: {\n// // // //           'Content-Type': 'application/json',\n// // // //         },\n// // // //         body: JSON.stringify({ mobile: mobileForOtp, otp }),\n// // // //       });\n      \n// // // //       const verifyData = await verifyResponse.json();\n// // // //       if (!verifyResponse.ok) {\n// // // //         throw new Error(verifyData.error || 'OTP verification failed');\n// // // //       }\n      \n// // // //       // Now create the account using authAPI\n// // // //       setIsLoading(true);\n// // // //       try {\n// // // //         const signupData = {\n// // // //           mobileNumber: mobileForOtp,\n// // // //           // You may want to store the rest of the form data in a ref or state for this step\n// // // //           // For demo, just pass mobileNumber\n// // // //         };\n        \n// // // //         const response = await authAPI.signup(signupData);\n        \n// // // //         if (response.success) {\n// // // //           setUserIds(response.data?.allUserIds || []);\n// // // //           setShowDashboard(true);\n// // // //           onSignupSuccess && onSignupSuccess(response.data);\n// // // //         } else {\n// // // //           setError(response.message || 'Signup failed');\n// // // //           setStep(1);\n// // // //         }\n// // // //       } catch (signupErr) {\n// // // //         setError(signupErr.message || 'Signup failed');\n// // // //         setStep(1);\n// // // //       }\n// // // //     } catch (err) {\n// // // //       setOtpError(err.message || 'OTP verification failed');\n// // // //     } finally {\n// // // //       setIsOtpLoading(false);\n// // // //       setIsLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   if (showDashboard && userIds.length > 0) {\n// // // //     return (\n// // // //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // // //         <div className=\"max-w-md w-full space-y-8\">\n// // // //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\n// // // //           <ul className=\"mt-4 mb-6\">\n// // // //             {userIds.map((id) => (\n// // // //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\n// // // //             ))}\n// // // //           </ul>\n// // // //           <button onClick={() => setShowDashboard(false)} className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\">Create another user</button>\n// // // //         </div>\n// // // //       </div>\n// // // //     );\n// // // //   }\n\n// // // //   if (step === 2) {\n// // // //     return (\n// // // //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // // //         <div className=\"max-w-md w-full space-y-8\">\n// // // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n// // // //           <p className=\"text-center text-sm text-gray-600\">Enter the OTP sent to your mobile number {mobileForOtp}</p>\n// // // //           <div className=\"space-y-4\">\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={otp}\n// // // //               onChange={e => setOtp(e.target.value)}\n// // // //               placeholder=\"Enter OTP\"\n// // // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n// // // //             />\n// // // //             <button\n// // // //               onClick={handleVerifyOtp}\n// // // //               disabled={isOtpLoading || !otp}\n// // // //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\n// // // //             >\n// // // //               {isOtpLoading ? 'Verifying...' : 'Verify OTP'}\n// // // //             </button>\n// // // //             <button\n// // // //               onClick={() => sendOtp(mobileForOtp)}\n// // // //               disabled={isOtpLoading}\n// // // //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md\"\n// // // //             >\n// // // //               Resend OTP\n// // // //             </button>\n// // // //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\n// // // //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\n// // // //             <button onClick={() => setStep(1)} className=\"w-full py-2 px-4 text-indigo-600\">Back to Signup</button>\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n// // // //     );\n// // // //   }\n\n// // // //   return (\n// // // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // // //       <div className=\"max-w-md w-full space-y-8\">\n// // // //         <div>\n// // // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Create your account</h2>\n// // // //           <p className=\"mt-2 text-center text-sm text-gray-600\">Enter your details to create a user ID under your mobile</p>\n// // // //         </div>\n// // // //         <Formik\n// // // //           initialValues={{ name: '', email: '', mobileNumber: '', password: '', confirmPassword: '' }}\n// // // //           validationSchema={validationSchema}\n// // // //           onSubmit={handleSubmit}\n// // // //         >\n// // // //           {({ isSubmitting }) => (\n// // // //             <Form className=\"mt-8 space-y-6\">\n// // // //               <div className=\"space-y-4\">\n// // // //                 <div>\n// // // //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Name</label>\n// // // //                   <Field id=\"name\" name=\"name\" type=\"text\" autoComplete=\"name\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your name\" />\n// // // //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n// // // //                 <div>\n// // // //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email (optional)</label>\n// // // //                   <Field id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your email (optional)\" />\n// // // //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n// // // //                 <div>\n// // // //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">Mobile Number</label>\n// // // //                   <Field id=\"mobileNumber\" name=\"mobileNumber\" type=\"tel\" autoComplete=\"tel\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your mobile number\" />\n// // // //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n// // // //                 <div>\n// // // //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\n// // // //                   <Field id=\"password\" name=\"password\" type=\"password\" autoComplete=\"new-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your password\" />\n// // // //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n// // // //                 <div>\n// // // //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">Confirm Password</label>\n// // // //                   <Field id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" autoComplete=\"new-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Confirm your password\" />\n// // // //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n// // // //               </div>\n// // // //               {error && (\n// // // //                 <div className=\"rounded-md bg-red-50 p-4\">\n// // // //                   <div className=\"flex\">\n// // // //                     <div className=\"ml-3\">\n// // // //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\n// // // //                     </div>\n// // // //                   </div>\n// // // //                 </div>\n// // // //               )}\n// // // //               <div>\n// // // //                 <button type=\"submit\" disabled={isSubmitting || isLoading} className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\">\n// // // //                   {isLoading ? 'Creating account...' : 'Create account'}\n// // // //                 </button>\n// // // //               </div>\n// // // //               <div className=\"text-center\">\n// // // //                 <button type=\"button\" onClick={onSwitchToLogin} className=\"font-medium text-indigo-600 hover:text-indigo-500\">Already have an account? Sign in</button>\n// // // //               </div>\n// // // //             </Form>\n// // // //           )}\n// // // //         </Formik>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default SignupForm;\n\n\n\n\n// // // import React, { useState, useEffect } from 'react';\n// // // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // // import * as Yup from 'yup';\n// // // import { authAPI } from '../../services/api';\n\n\n// // // import { \n// // //   auth, \n// // //   RecaptchaVerifier, \n// // //   signInWithPhoneNumber \n// // // } from '../../firebase';\n\n// // // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\n// // //   const [isLoading, setIsLoading] = useState(false);\n// // //   const [error, setError] = useState('');\n// // //   const [userIds, setUserIds] = useState([]);\n// // //   const [showDashboard, setShowDashboard] = useState(false);\n// // //   const [step, setStep] = useState(1); // 1: form, 2: otp\n// // //   const [mobileForOtp, setMobileForOtp] = useState('');\n// // //   const [otp, setOtp] = useState('');\n// // //   const [otpError, setOtpError] = useState('');\n// // //   const [otpMessage, setOtpMessage] = useState('');\n// // //   const [isOtpLoading, setIsOtpLoading] = useState(false);\n// // //   const [formData, setFormData] = useState(null);\n\n// // //   const validationSchema = Yup.object({\n// // //     name: Yup.string()\n// // //       .min(2, 'Name must be at least 2 characters')\n// // //       .max(50, 'Name cannot exceed 50 characters')\n// // //       .required('Name is required'),\n// // //     email: Yup.string()\n// // //       .email('Please enter a valid email address')\n// // //       .nullable(),\n// // //     mobileNumber: Yup.string()\n// // //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n// // //       .required('Mobile number is required'),\n// // //     password: Yup.string()\n// // //       .min(6, 'Password must be at least 6 characters')\n// // //       .required('Password is required'),\n// // //     confirmPassword: Yup.string()\n// // //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n// // //       .required('Confirm password is required'),\n// // //   });\n\n// // //   // Initialize reCAPTCHA\n// // //   useEffect(() => {\n// // //     window.recaptchaVerifier = new RecaptchaVerifier(\n// // //       'recaptcha-container',\n// // //       {\n// // //         size: 'invisible',\n// // //         callback: () => {\n// // //           // This will be called when reCAPTCHA is solved\n// // //         },\n// // //       },\n// // //       auth\n// // //     );\n\n// // //     return () => {\n// // //       if (window.recaptchaVerifier) {\n// // //         window.recaptchaVerifier.clear();\n// // //       }\n// // //     };\n// // //   }, []);\n\n// // //   const sendOtp = async (mobile) => {\n// // //     setIsOtpLoading(true);\n// // //     setOtpError('');\n// // //     setOtpMessage('');\n    \n// // //     try {\n// // //       const phoneNumber = `+91${mobile}`; // Adjust country code as needed\n// // //       const confirmationResult = await auth().signInWithPhoneNumber(\n// // //         phoneNumber,\n// // //         window.recaptchaVerifier\n// // //       );\n      \n// // //       window.confirmationResult = confirmationResult;\n// // //       setOtpMessage('OTP sent to your mobile number.');\n// // //     } catch (err) {\n// // //       console.error('OTP Error:', err);\n// // //       setOtpError(err.message || 'Failed to send OTP. Please try again.');\n// // //     } finally {\n// // //       setIsOtpLoading(false);\n// // //     }\n// // //   };\n\n// // //   const handleSubmit = async (values, { setSubmitting }) => {\n// // //     setError('');\n// // //     setFormData(values);\n// // //     setMobileForOtp(values.mobileNumber);\n// // //     await sendOtp(values.mobileNumber);\n// // //     setStep(2);\n// // //     setSubmitting(false);\n// // //   };\n\n// // //   const handleVerifyOtp = async () => {\n// // //     setIsOtpLoading(true);\n// // //     setOtpError('');\n// // //     setOtpMessage('');\n    \n// // //     try {\n// // //       // Verify OTP with Firebase\n// // //       await window.confirmationResult.confirm(otp);\n      \n// // //       // OTP verified - proceed with account creation\n// // //       setIsLoading(true);\n// // //       try {\n// // //         const response = await authAPI.signup({\n// // //           name: formData.name,\n// // //           email: formData.email,\n// // //           mobileNumber: formData.mobileNumber,\n// // //           password: formData.password,\n// // //         });\n        \n// // //         if (response.success) {\n// // //           setUserIds(response.data?.allUserIds || []);\n// // //           setShowDashboard(true);\n// // //           onSignupSuccess && onSignupSuccess(response.data);\n// // //         } else {\n// // //           setError(response.message || 'Signup failed');\n// // //           setStep(1);\n// // //         }\n// // //       } catch (signupErr) {\n// // //         setError(signupErr.message || 'Signup failed. Please try again.');\n// // //         setStep(1);\n// // //       }\n// // //     } catch (err) {\n// // //       setOtpError(err.message || 'Invalid OTP. Please try again.');\n// // //     } finally {\n// // //       setIsOtpLoading(false);\n// // //       setIsLoading(false);\n// // //     }\n// // //   };\n\n// // //   if (showDashboard && userIds.length > 0) {\n// // //     return (\n// // //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // //         <div className=\"max-w-md w-full space-y-8\">\n// // //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\n// // //           <ul className=\"mt-4 mb-6\">\n// // //             {userIds.map((id) => (\n// // //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\n// // //             ))}\n// // //           </ul>\n// // //           <button \n// // //             onClick={() => setShowDashboard(false)} \n// // //             className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n// // //           >\n// // //             Create another user\n// // //           </button>\n// // //         </div>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   if (step === 2) {\n// // //     return (\n// // //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // //         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// // //         <div className=\"max-w-md w-full space-y-8\">\n// // //           <div>\n// // //             <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n// // //             <p className=\"text-center text-sm text-gray-600\">\n// // //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n// // //             </p>\n// // //           </div>\n          \n// // //           <div className=\"space-y-4\">\n// // //             <div>\n// // //               <input\n// // //                 type=\"text\"\n// // //                 value={otp}\n// // //                 onChange={(e) => setOtp(e.target.value)}\n// // //                 placeholder=\"Enter OTP\"\n// // //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n// // //                 maxLength=\"6\"\n// // //               />\n// // //             </div>\n            \n// // //             <button\n// // //               onClick={handleVerifyOtp}\n// // //               disabled={isOtpLoading || otp.length !== 6}\n// // //               className={`w-full py-2 px-4 rounded-md text-white ${isOtpLoading || otp.length !== 6 ? 'bg-indigo-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'} transition-colors`}\n// // //             >\n// // //               {isOtpLoading ? (\n// // //                 <span className=\"flex items-center justify-center\">\n// // //                   <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// // //                     <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// // //                     <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// // //                   </svg>\n// // //                   Verifying...\n// // //                 </span>\n// // //               ) : 'Verify OTP'}\n// // //             </button>\n            \n// // //             <button\n// // //               onClick={() => sendOtp(mobileForOtp)}\n// // //               disabled={isOtpLoading}\n// // //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors disabled:opacity-50\"\n// // //             >\n// // //               Resend OTP\n// // //             </button>\n            \n// // //             {otpMessage && (\n// // //               <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n// // //                 {otpMessage}\n// // //               </div>\n// // //             )}\n            \n// // //             {otpError && (\n// // //               <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n// // //                 {otpError}\n// // //               </div>\n// // //             )}\n            \n// // //             <button \n// // //               onClick={() => setStep(1)}\n// // //               className=\"w-full py-2 px-4 text-indigo-600 hover:text-indigo-800 transition-colors\"\n// // //             >\n// // //               Back to Signup\n// // //             </button>\n// // //           </div>\n// // //         </div>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   return (\n// // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// // //       <div className=\"max-w-md w-full space-y-8\">\n// // //         <div>\n// // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n// // //             Create your account\n// // //           </h2>\n// // //           <p className=\"mt-2 text-center text-sm text-gray-600\">\n// // //             Enter your details to create a user ID under your mobile\n// // //           </p>\n// // //         </div>\n        \n// // //         <Formik\n// // //           initialValues={{\n// // //             name: '',\n// // //             email: '',\n// // //             mobileNumber: '',\n// // //             password: '',\n// // //             confirmPassword: ''\n// // //           }}\n// // //           validationSchema={validationSchema}\n// // //           onSubmit={handleSubmit}\n// // //         >\n// // //           {({ isSubmitting, isValid, dirty }) => (\n// // //             <Form className=\"mt-8 space-y-6\">\n// // //               <div className=\"space-y-4\">\n// // //                 <div>\n// // //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Full Name\n// // //                   </label>\n// // //                   <Field \n// // //                     id=\"name\" \n// // //                     name=\"name\" \n// // //                     type=\"text\" \n// // //                     autoComplete=\"name\" \n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                     placeholder=\"Enter your full name\"\n// // //                   />\n// // //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n                \n// // //                 <div>\n// // //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Email (optional)\n// // //                   </label>\n// // //                   <Field \n// // //                     id=\"email\" \n// // //                     name=\"email\" \n// // //                     type=\"email\" \n// // //                     autoComplete=\"email\" \n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                     placeholder=\"Enter your email\"\n// // //                   />\n// // //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n                \n// // //                 <div>\n// // //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Mobile Number\n// // //                   </label>\n// // //                   <div className=\"mt-1 flex rounded-md shadow-sm\">\n// // //                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 sm:text-sm\">\n// // //                       +91\n// // //                     </span>\n// // //                     <Field \n// // //                       id=\"mobileNumber\" \n// // //                       name=\"mobileNumber\" \n// // //                       type=\"tel\" \n// // //                       autoComplete=\"tel\" \n// // //                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                       placeholder=\"Enter your 10-digit mobile number\"\n// // //                       maxLength=\"10\"\n// // //                     />\n// // //                   </div>\n// // //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n                \n// // //                 <div>\n// // //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Password\n// // //                   </label>\n// // //                   <Field \n// // //                     id=\"password\" \n// // //                     name=\"password\" \n// // //                     type=\"password\" \n// // //                     autoComplete=\"new-password\" \n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                     placeholder=\"Enter your password\"\n// // //                   />\n// // //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n                \n// // //                 <div>\n// // //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Confirm Password\n// // //                   </label>\n// // //                   <Field \n// // //                     id=\"confirmPassword\" \n// // //                     name=\"confirmPassword\" \n// // //                     type=\"password\" \n// // //                     autoComplete=\"new-password\" \n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                     placeholder=\"Confirm your password\"\n// // //                   />\n// // //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n// // //               </div>\n              \n// // //               {error && (\n// // //                 <div className=\"rounded-md bg-red-50 p-4\">\n// // //                   <div className=\"flex\">\n// // //                     <div className=\"ml-3\">\n// // //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\n// // //                     </div>\n// // //                   </div>\n// // //                 </div>\n// // //               )}\n              \n// // //               <div>\n// // //                 <button\n// // //                   type=\"submit\"\n// // //                   disabled={isSubmitting || isLoading || !isValid || !dirty}\n// // //                   className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${isSubmitting || isLoading || !isValid || !dirty ? 'bg-indigo-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors`}\n// // //                 >\n// // //                   {isLoading ? (\n// // //                     <span className=\"flex items-center justify-center\">\n// // //                       <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// // //                         <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// // //                         <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// // //                       </svg>\n// // //                       Processing...\n// // //                     </span>\n// // //                   ) : 'Send OTP'}\n// // //                 </button>\n// // //               </div>\n              \n// // //               <div className=\"text-center\">\n// // //                 <button\n// // //                   type=\"button\"\n// // //                   onClick={onSwitchToLogin}\n// // //                   className=\"font-medium text-indigo-600 hover:text-indigo-500 transition-colors\"\n// // //                 >\n// // //                   Already have an account? Sign in\n// // //                 </button>\n// // //               </div>\n// // //             </Form>\n// // //           )}\n// // //         </Formik>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default SignupForm;\n\n\n// // import React, { useState, useEffect, useRef } from 'react';\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // import * as Yup from 'yup';\n// // import { authAPI } from '../../services/api';\n// // import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\n\n// // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\n// //   // State management\n// //   const [step, setStep] = useState(1); // 1: form, 2: otp\n// //   const [loading, setLoading] = useState({\n// //     form: false,\n// //     otp: false,\n// //     resend: false\n// //   });\n// //   const [error, setError] = useState('');\n// //   const [message, setMessage] = useState('');\n// //   const [formData, setFormData] = useState(null);\n// //   const [mobileForOtp, setMobileForOtp] = useState('');\n// //   const [otp, setOtp] = useState('');\n// //   const recaptchaVerifier = useRef(null);\n\n// //   // Form validation schema\n// //   const validationSchema = Yup.object({\n// //     name: Yup.string()\n// //       .min(2, 'Name must be at least 2 characters')\n// //       .max(50, 'Name cannot exceed 50 characters')\n// //       .required('Name is required'),\n// //     email: Yup.string()\n// //       .email('Please enter a valid email address')\n// //       .nullable(),\n// //     mobileNumber: Yup.string()\n// //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n// //       .required('Mobile number is required'),\n// //     password: Yup.string()\n// //       .min(8, 'Password must be at least 8 characters')\n// //       .matches(\n// //         /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n// //         'Password must contain at least one uppercase, one lowercase, one number and one special character'\n// //       )\n// //       .required('Password is required'),\n// //     confirmPassword: Yup.string()\n// //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n// //       .required('Confirm password is required'),\n// //   });\n\n// //   // Initialize reCAPTCHA\n// //   useEffect(() => {\n// //     recaptchaVerifier.current = new RecaptchaVerifier(\n// //       'recaptcha-container',\n// //       {\n// //         size: 'invisible',\n// //         callback: () => {\n// //           // This will be called when reCAPTCHA is solved\n// //         },\n// //       },\n// //       auth\n// //     );\n\n// //     return () => {\n// //       if (recaptchaVerifier.current) {\n// //         recaptchaVerifier.current.clear();\n// //       }\n// //     };\n// //   }, []);\n\n// //   const sendOtp = async (mobile) => {\n// //     setLoading(prev => ({ ...prev, form: true }));\n// //     setError('');\n// //     setMessage('');\n    \n// //     try {\n// //       const phoneNumber = `+91${mobile}`;\n// //       const confirmationResult = await signInWithPhoneNumber(\n// //         auth,\n// //         phoneNumber,\n// //         recaptchaVerifier.current\n// //       );\n      \n// //       window.confirmationResult = confirmationResult;\n// //       setMessage('OTP sent to your mobile number.');\n// //       setMobileForOtp(mobile);\n// //       setStep(2);\n// //     } catch (err) {\n// //       console.error('OTP Error:', err);\n// //       setError(err.message || 'Failed to send OTP. Please try again.');\n// //       // Reset recaptcha on error\n// //       recaptchaVerifier.current.clear();\n// //       recaptchaVerifier.current = new RecaptchaVerifier(\n// //         'recaptcha-container',\n// //         {\n// //           size: 'invisible',\n// //           callback: () => {},\n// //         },\n// //         auth\n// //       );\n// //     } finally {\n// //       setLoading(prev => ({ ...prev, form: false }));\n// //     }\n// //   };\n\n// //   const resendOtp = async () => {\n// //     setLoading(prev => ({ ...prev, resend: true }));\n// //     setError('');\n    \n// //     try {\n// //       await sendOtp(mobileForOtp);\n// //       setMessage('New OTP sent to your mobile number.');\n// //     } catch (err) {\n// //       setError(err.message || 'Failed to resend OTP. Please try again.');\n// //     } finally {\n// //       setLoading(prev => ({ ...prev, resend: false }));\n// //     }\n// //   };\n\n// //   const verifyOtp = async () => {\n// //     setLoading(prev => ({ ...prev, otp: true }));\n// //     setError('');\n    \n// //     try {\n// //       // Verify OTP with Firebase\n// //       await window.confirmationResult.confirm(otp);\n      \n// //       // OTP verified - proceed with account creation\n// //       try {\n// //         const response = await authAPI.signup({\n// //           name: formData.name,\n// //           email: formData.email,\n// //           mobileNumber: formData.mobileNumber,\n// //           password: formData.password,\n// //         });\n        \n// //         if (response.success) {\n// //           onSignupSuccess?.(response.data);\n// //         } else {\n// //           throw new Error(response.message || 'Signup failed');\n// //         }\n// //       } catch (signupErr) {\n// //         throw new Error(signupErr.message || 'Signup failed. Please try again.');\n// //       }\n// //     } catch (err) {\n// //       setError(err.message || 'Invalid OTP. Please try again.');\n// //     } finally {\n// //       setLoading(prev => ({ ...prev, otp: false }));\n// //     }\n// //   };\n\n// //   const handleFormSubmit = async (values, { setSubmitting }) => {\n// //     setFormData(values);\n// //     await sendOtp(values.mobileNumber);\n// //     setSubmitting(false);\n// //   };\n\n// //   // OTP Verification Step\n// //   if (step === 2) {\n// //     return (\n// //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// //         <div className=\"max-w-md w-full space-y-8\">\n// //           <div className=\"text-center\">\n// //             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n// //             <p className=\"mt-2 text-sm text-gray-600\">\n// //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n// //             </p>\n// //           </div>\n          \n// //           <div className=\"space-y-4\">\n// //             <div>\n// //               <input\n// //                 type=\"text\"\n// //                 value={otp}\n// //                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n// //                 placeholder=\"Enter 6-digit OTP\"\n// //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\n// //                 inputMode=\"numeric\"\n// //                 autoFocus\n// //               />\n// //             </div>\n            \n// //             <button\n// //               onClick={verifyOtp}\n// //               disabled={loading.otp || otp.length !== 6}\n// //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n// //             >\n// //               {loading.otp ? (\n// //                 <>\n// //                   <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// //                     <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// //                     <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// //                   </svg>\n// //                   Verifying...\n// //                 </>\n// //               ) : 'Verify OTP'}\n// //             </button>\n            \n// //             <button\n// //               onClick={resendOtp}\n// //               disabled={loading.resend}\n// //               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\n// //             >\n// //               {loading.resend ? 'Resending OTP...' : 'Resend OTP'}\n// //             </button>\n            \n// //             {message && (\n// //               <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n// //                 {message}\n// //               </div>\n// //             )}\n            \n// //             {error && (\n// //               <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n// //                 {error}\n// //               </div>\n// //             )}\n            \n// //             <button \n// //               onClick={() => {\n// //                 setStep(1);\n// //                 setError('');\n// //                 setMessage('');\n// //               }}\n// //               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\n// //             >\n// //               ← Back to Signup\n// //             </button>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     );\n// //   }\n\n// //   // Initial Signup Form\n// //   return (\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// //       <div className=\"max-w-md w-full space-y-8\">\n// //         <div className=\"text-center\">\n// //           <h2 className=\"text-3xl font-extrabold text-gray-900\">\n// //             Create your account\n// //           </h2>\n// //           <p className=\"mt-2 text-sm text-gray-600\">\n// //             Enter your details to get started\n// //           </p>\n// //         </div>\n        \n// //         <Formik\n// //           initialValues={{\n// //             name: '',\n// //             email: '',\n// //             mobileNumber: '',\n// //             password: '',\n// //             confirmPassword: ''\n// //           }}\n// //           validationSchema={validationSchema}\n// //           onSubmit={handleFormSubmit}\n// //         >\n// //           {({ isSubmitting, isValid, dirty }) => (\n// //             <Form className=\"mt-8 space-y-6\">\n// //               <div className=\"space-y-4\">\n// //                 <div>\n// //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Full Name\n// //                   </label>\n// //                   <Field \n// //                     id=\"name\" \n// //                     name=\"name\" \n// //                     type=\"text\" \n// //                     autoComplete=\"name\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"Your full name\"\n// //                   />\n// //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n                \n// //                 <div>\n// //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Email (optional)\n// //                   </label>\n// //                   <Field \n// //                     id=\"email\" \n// //                     name=\"email\" \n// //                     type=\"email\" \n// //                     autoComplete=\"email\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"your.email@example.com\"\n// //                   />\n// //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n                \n// //                 <div>\n// //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Mobile Number\n// //                   </label>\n// //                   <div className=\"mt-1 flex rounded-md shadow-sm\">\n// //                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n// //                       +91\n// //                     </span>\n// //                     <Field \n// //                       id=\"mobileNumber\" \n// //                       name=\"mobileNumber\" \n// //                       type=\"tel\" \n// //                       autoComplete=\"tel\" \n// //                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                       placeholder=\"9876543210\"\n// //                       maxLength=\"10\"\n// //                     />\n// //                   </div>\n// //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n                \n// //                 <div>\n// //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Password\n// //                   </label>\n// //                   <Field \n// //                     id=\"password\" \n// //                     name=\"password\" \n// //                     type=\"password\" \n// //                     autoComplete=\"new-password\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"At least 8 characters\"\n// //                   />\n// //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n                \n// //                 <div>\n// //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Confirm Password\n// //                   </label>\n// //                   <Field \n// //                     id=\"confirmPassword\" \n// //                     name=\"confirmPassword\" \n// //                     type=\"password\" \n// //                     autoComplete=\"new-password\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"Confirm your password\"\n// //                   />\n// //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n// //               </div>\n              \n// //               {error && (\n// //                 <div className=\"rounded-md bg-red-50 p-3\">\n// //                   <p className=\"text-sm text-red-700\">{error}</p>\n// //                 </div>\n// //               )}\n              \n// //               <div>\n// //                 <button\n// //                   type=\"submit\"\n// //                   disabled={loading.form || !isValid || !dirty}\n// //                   className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n// //                 >\n// //                   {loading.form ? (\n// //                     <>\n// //                       <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// //                         <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// //                         <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// //                       </svg>\n// //                       Sending OTP...\n// //                     </>\n// //                   ) : 'Send OTP'}\n// //                 </button>\n// //               </div>\n              \n// //               <div className=\"text-center text-sm\">\n// //                 <p className=\"text-gray-600\">\n// //                   Already have an account?{' '}\n// //                   <button\n// //                     type=\"button\"\n// //                     onClick={onSwitchToLogin}\n// //                     className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n// //                   >\n// //                     Sign in\n// //                   </button>\n// //                 </p>\n// //               </div>\n// //             </Form>\n// //           )}\n// //         </Formik>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default SignupForm;\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\n\n// const SignupForm = () => {\n//   const [step, setStep] = useState(1); // 1: form, 2: otp\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [mobileForOtp, setMobileForOtp] = useState('');\n//   const [otp, setOtp] = useState('');\n//   const navigate = useNavigate();\n\n//   const validationSchema = Yup.object({\n//     name: Yup.string()\n//       .min(2, 'Name must be at least 2 characters')\n//       .max(50, 'Name cannot exceed 50 characters')\n//       .required('Name is required'),\n//     email: Yup.string()\n//       .email('Please enter a valid email address')\n//       .nullable(),\n//     mobileNumber: Yup.string()\n//       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n//       .required('Mobile number is required'),\n//     password: Yup.string()\n//       .min(8, 'Password must be at least 8 characters')\n//       .matches(\n//         /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n//         'Password must contain at least one uppercase, one lowercase, one number and one special character'\n//       )\n//       .required('Password is required'),\n//     confirmPassword: Yup.string()\n//       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n//       .required('Confirm password is required'),\n//   });\n\n//   useEffect(() => {\n//     window.recaptchaVerifier = new RecaptchaVerifier(\n//       'recaptcha-container',\n//       { size: 'invisible' },\n//       auth\n//     );\n\n//     return () => {\n//       if (window.recaptchaVerifier) {\n//         window.recaptchaVerifier.clear();\n//       }\n//     };\n//   }, []);\n\n//   const sendOtp = async (mobile) => {\n//     setLoading(true);\n//     setError('');\n//     setMessage('');\n    \n//     try {\n//       const phoneNumber = `+91${mobile}`;\n//       const confirmationResult = await signInWithPhoneNumber(\n//         auth,\n//         phoneNumber,\n//         window.recaptchaVerifier\n//       );\n      \n//       window.confirmationResult = confirmationResult;\n//       setMessage('OTP sent to your mobile number.');\n//       setMobileForOtp(mobile);\n//       setStep(2);\n//     } catch (err) {\n//       setError(err.message || 'Failed to send OTP. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const verifyOtp = async () => {\n//     setLoading(true);\n//     setError('');\n    \n//     try {\n//       await window.confirmationResult.confirm(otp);\n//       setMessage('Account created successfully! Redirecting to login...');\n//       setTimeout(() => navigate('/login'), 2000);\n//     } catch (err) {\n//       setError(err.message || 'Invalid OTP. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleFormSubmit = async (values) => {\n//     await sendOtp(values.mobileNumber);\n//     // You would typically save formData to use after OTP verification\n//   };\n\n//   if (step === 2) {\n//     return (\n//       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n//         <div className=\"max-w-md w-full space-y-8\">\n//           <div className=\"text-center\">\n//             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n//             <p className=\"mt-2 text-sm text-gray-600\">\n//               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n//             </p>\n//           </div>\n          \n//           {message && (\n//             <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n//               {message}\n//             </div>\n//           )}\n\n//           {error && (\n//             <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n//               {error}\n//             </div>\n//           )}\n\n//           <div className=\"space-y-4\">\n//             <div>\n//               <input\n//                 type=\"text\"\n//                 value={otp}\n//                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n//                 placeholder=\"Enter 6-digit OTP\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\n//                 inputMode=\"numeric\"\n//                 autoFocus\n//               />\n//             </div>\n            \n//             <button\n//               onClick={verifyOtp}\n//               disabled={loading || otp.length !== 6}\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n//             >\n//               {loading ? 'Verifying...' : 'Verify OTP'}\n//             </button>\n            \n//             <button\n//               onClick={() => sendOtp(mobileForOtp)}\n//               disabled={loading}\n//               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\n//             >\n//               Resend OTP\n//             </button>\n            \n//             <button \n//               onClick={() => {\n//                 setStep(1);\n//                 setError('');\n//                 setMessage('');\n//               }}\n//               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\n//             >\n//               ← Back to Signup\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n//       <div className=\"max-w-md w-full space-y-8\">\n//         <div className=\"text-center\">\n//           <h2 className=\"text-3xl font-extrabold text-gray-900\">\n//             Create your account\n//           </h2>\n//           <p className=\"mt-2 text-sm text-gray-600\">\n//             Or{' '}\n//             <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n//               sign in to your account\n//             </Link>\n//           </p>\n//         </div>\n        \n//         <Formik\n//           initialValues={{\n//             name: '',\n//             email: '',\n//             mobileNumber: '',\n//             password: '',\n//             confirmPassword: ''\n//           }}\n//           validationSchema={validationSchema}\n//           onSubmit={handleFormSubmit}\n//         >\n//           {({ isSubmitting, isValid, dirty }) => (\n//             <Form className=\"mt-8 space-y-6\">\n//               <div className=\"space-y-4\">\n//                 <div>\n//                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n//                     Full Name\n//                   </label>\n//                   <Field \n//                     id=\"name\" \n//                     name=\"name\" \n//                     type=\"text\" \n//                     autoComplete=\"name\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"Your full name\"\n//                   />\n//                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n                \n//                 <div>\n//                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n//                     Email (optional)\n//                   </label>\n//                   <Field \n//                     id=\"email\" \n//                     name=\"email\" \n//                     type=\"email\" \n//                     autoComplete=\"email\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"your.email@example.com\"\n//                   />\n//                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n                \n//                 <div>\n//                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\n//                     Mobile Number\n//                   </label>\n//                   <div className=\"mt-1 flex rounded-md shadow-sm\">\n//                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n//                       +91\n//                     </span>\n//                     <Field \n//                       id=\"mobileNumber\" \n//                       name=\"mobileNumber\" \n//                       type=\"tel\" \n//                       autoComplete=\"tel\" \n//                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                       placeholder=\"9876543210\"\n//                       maxLength=\"10\"\n//                     />\n//                   </div>\n//                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n                \n//                 <div>\n//                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n//                     Password\n//                   </label>\n//                   <Field \n//                     id=\"password\" \n//                     name=\"password\" \n//                     type=\"password\" \n//                     autoComplete=\"new-password\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"At least 6 characters\"\n//                   />\n//                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n                \n//                 <div>\n//                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n//                     Confirm Password\n//                   </label>\n//                   <Field \n//                     id=\"confirmPassword\" \n//                     name=\"confirmPassword\" \n//                     type=\"password\" \n//                     autoComplete=\"new-password\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"Confirm your password\"\n//                   />\n//                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n//               </div>\n              \n//               {error && (\n//                 <div className=\"rounded-md bg-red-50 p-3\">\n//                   <p className=\"text-sm text-red-700\">{error}</p>\n//                 </div>\n//               )}\n              \n//               <div>\n//                 <button\n//                   type=\"submit\"\n//                   disabled={loading || !isValid || !dirty}\n//                   className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n//                 >\n//                   {loading ? 'Sending OTP...' : 'Sign Up'}\n//                 </button>\n//               </div>\n//             </Form>\n//           )}\n//         </Formik>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SignupForm;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\nimport { authAPI } from '../../services/api';\n\nconst SignupForm = () => {\n  const [step, setStep] = useState(1); // 1: form, 2: otp, 3: success\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [mobileForOtp, setMobileForOtp] = useState('');\n  const [otp, setOtp] = useState('');\n  const [generatedUserId, setGeneratedUserId] = useState('');\n  const [formData, setFormData] = useState(null);\n  const navigate = useNavigate();\n\n  const validationSchema = Yup.object({\n    name: Yup.string()\n      .min(2, 'Name must be at least 2 characters')\n      .max(50, 'Name cannot exceed 50 characters')\n      .required('Name is required'),\n    email: Yup.string()\n      .email('Please enter a valid email address')\n      .nullable(),\n    mobileNumber: Yup.string()\n      .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n      .required('Mobile number is required'),\n    password: Yup.string()\n      .min(6, 'Password must be at least 6 characters')\n      .matches(\n        /^(?=.*[a-zA-Z])(?=.*\\d).+$/,\n        'Password must contain at least one letter and one number'\n      )\n      .required('Password is required'),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Confirm password is required'),\n  });\n\n  // useEffect(() => {\n  //   window.recaptchaVerifier = new RecaptchaVerifier(\n  //     'recaptcha-container',\n  //     { size: 'invisible' },\n  //     auth\n  //   );\n\n  //   return () => {\n  //     if (window.recaptchaVerifier) {\n  //       window.recaptchaVerifier.clear();\n  //     }\n  //   };\n  // }, []);\n\n  // const sendOtp = async (mobile) => {\n  //   setLoading(true);\n  //   setError('');\n  //   setMessage('');\n    \n  //   try {\n  //     const phoneNumber = `+91${mobile}`;\n  //     const confirmationResult = await signInWithPhoneNumber(\n  //       auth,\n  //       phoneNumber,\n  //       window.recaptchaVerifier\n  //     );\n      \n  //     window.confirmationResult = confirmationResult;\n  //     setMessage('OTP sent to your mobile number.');\n  //     setMobileForOtp(mobile);\n  //     setStep(2);\n  //   } catch (err) {\n  //     setError(err.message || 'Failed to send OTP. Please try again.');\n  //   } finally {\n  //     setLoading(false);\n  //   }\n  // };\n\n  useEffect(() => {\n  if (!window.recaptchaVerifier) {\n    window.recaptchaVerifier = new RecaptchaVerifier(\n      'recaptcha-container',\n      { size: 'invisible' },\n      auth\n    );\n    window.recaptchaVerifier.render();\n  }\n}, []);\n\nconst sendOtp = async (mobile) => {\n  setLoading(true);\n  setError('');\n  setMessage('');\n  \n  try {\n    const phoneNumber = `+91${mobile}`;\n    const confirmationResult = await signInWithPhoneNumber(\n      auth,\n      phoneNumber,\n      window.recaptchaVerifier\n    );\n    \n    window.confirmationResult = confirmationResult;\n    setMessage('OTP sent to your mobile number.');\n    setMobileForOtp(mobile);\n    setStep(2);\n  } catch (err) {\n    console.error(\"OTP Error:\", err);\n    if (err.code === \"auth/invalid-app-credential\") {\n      setError(\"Firebase config invalid है। कृपया .env values check करो।\");\n    } else if (err.code === \"auth/missing-phone-number\") {\n      setError(\"Phone number सही format में दो (+91XXXXXXXXXX).\");\n    } else {\n      setError(err.message || 'Failed to send OTP. Please try again.');\n    }\n  } finally {\n    setLoading(false);\n  }\n};\n\n\n  const generateUserId = async (mobileNumber) => {\n    try {\n      const response = await authAPI.generateUserId({ mobileNumber });\n      if (response.success) {\n        return response.userId; // Format: user1, user2, ..., user100\n      }\n      throw new Error(response.message || 'Failed to generate user ID');\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const verifyOtp = async () => {\n    setLoading(true);\n    setError('');\n    \n    try {\n      await window.confirmationResult.confirm(otp);\n      \n      // Generate user ID after OTP verification\n      const userId = await generateUserId(mobileForOtp);\n      setGeneratedUserId(userId);\n      \n      // Complete signup with all form data\n      const response = await authAPI.completeSignup({\n        ...formData,\n        userId\n      });\n      \n      if (response.success) {\n        setMessage('Account created successfully!');\n        setStep(3);\n      } else {\n        throw new Error(response.message || 'Signup failed');\n      }\n    } catch (err) {\n      setError(err.message || 'Invalid OTP. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFormSubmit = async (values) => {\n    setFormData(values); // Store form data for later use\n    await sendOtp(values.mobileNumber);\n  };\n\n  // Step 3: Success screen with generated user ID\n  if (step === 3) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <div className=\"text-center\">\n            <h2 className=\"text-3xl font-extrabold text-gray-900\">Registration Complete</h2>\n            <p className=\"mt-4 text-lg\">\n              Your User ID: <span className=\"font-bold\">{generatedUserId}</span>\n            </p>\n            <p className=\"mt-2 text-sm text-gray-600\">\n              Please note this ID carefully as you'll need it to login.\n            </p>\n          </div>\n          \n          <div className=\"mt-6\">\n            <button\n              onClick={() => navigate('/login')}\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Proceed to Login\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Step 2: OTP Verification\n  if (step === 2) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n        <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n        <div className=\"max-w-md w-full space-y-8\">\n          <div className=\"text-center\">\n            <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n            <p className=\"mt-2 text-sm text-gray-600\">\n              Enter the 6-digit OTP sent to +91 {mobileForOtp}\n            </p>\n          </div>\n          \n          {message && (\n            <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n              {message}\n            </div>\n          )}\n\n          {error && (\n            <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"space-y-4\">\n            <div>\n              <input\n                type=\"text\"\n                value={otp}\n                onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n                placeholder=\"Enter 6-digit OTP\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\n                inputMode=\"numeric\"\n                autoFocus\n              />\n            </div>\n            \n            <button\n              onClick={verifyOtp}\n              disabled={loading || otp.length !== 6}\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n            >\n              {loading ? 'Verifying...' : 'Verify OTP'}\n            </button>\n            \n            <button\n              onClick={() => sendOtp(mobileForOtp)}\n              disabled={loading}\n              className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\n            >\n              Resend OTP\n            </button>\n            \n            <button \n              onClick={() => {\n                setStep(1);\n                setError('');\n                setMessage('');\n              }}\n              className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\n            >\n              ← Back to Signup\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Step 1: Registration Form\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <h2 className=\"text-3xl font-extrabold text-gray-900\">\n            Create your account\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            Or{' '}\n            <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n              sign in to your account\n            </Link>\n          </p>\n        </div>\n        \n        <Formik\n          initialValues={{\n            name: '',\n            email: '',\n            mobileNumber: '',\n            password: '',\n            confirmPassword: ''\n          }}\n          validationSchema={validationSchema}\n          onSubmit={handleFormSubmit}\n        >\n          {({ isSubmitting, isValid, dirty }) => (\n            <Form className=\"mt-8 space-y-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n                    Full Name\n                  </label>\n                  <Field \n                    id=\"name\" \n                    name=\"name\" \n                    type=\"text\" \n                    autoComplete=\"name\" \n                    className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    placeholder=\"Your full name\"\n                  />\n                  <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                    Email (optional)\n                  </label>\n                  <Field \n                    id=\"email\" \n                    name=\"email\" \n                    type=\"email\" \n                    autoComplete=\"email\" \n                    className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    placeholder=\"your.email@example.com\"\n                  />\n                  <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\n                    Mobile Number\n                  </label>\n                  <div className=\"mt-1 flex rounded-md shadow-sm\">\n                    <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n                      +91\n                    </span>\n                    <Field \n                      id=\"mobileNumber\" \n                      name=\"mobileNumber\" \n                      type=\"tel\" \n                      autoComplete=\"tel\" \n                      className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                      placeholder=\"9876543210\"\n                      maxLength=\"10\"\n                    />\n                  </div>\n                  <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                    Password\n                  </label>\n                  <Field \n                    id=\"password\" \n                    name=\"password\" \n                    type=\"password\" \n                    autoComplete=\"new-password\" \n                    className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    placeholder=\"At least 6 characters with letters and numbers\"\n                  />\n                  <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                    Confirm Password\n                  </label>\n                  <Field \n                    id=\"confirmPassword\" \n                    name=\"confirmPassword\" \n                    type=\"password\" \n                    autoComplete=\"new-password\" \n                    className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    placeholder=\"Confirm your password\"\n                  />\n                  <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n                </div>\n              </div>\n              \n              {error && (\n                <div className=\"rounded-md bg-red-50 p-3\">\n                  <p className=\"text-sm text-red-700\">{error}</p>\n                </div>\n              )}\n              \n              <div>\n                <button\n                  type=\"submit\"\n                  disabled={loading || !isValid || !dirty}\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                >\n                  {loading ? 'Sending OTP...' : 'Sign Up'}\n                </button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupForm;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}