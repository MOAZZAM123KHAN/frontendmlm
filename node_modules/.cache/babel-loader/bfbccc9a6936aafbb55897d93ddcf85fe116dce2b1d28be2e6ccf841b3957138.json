{"ast":null,"code":"// import axios from 'axios';\n// import { API_URL } from '../config';\n\n// const API_BASE_URL = API_URL;\n\n// // Create axios instance with default config\n// const api = axios.create({\n//   baseURL: API_BASE_URL,\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n// });\n\n// // Request interceptor\n// api.interceptors.request.use(\n//   (config) => {\n//     const token = localStorage.getItem('authToken') || localStorage.getItem('token'); // âœ… support both\n//     if (token) {\n//       config.headers['Authorization'] = `Bearer ${token}`;\n//     }\n//     return config;\n//   },\n//   (error) => Promise.reject(error)\n// );\n\n// // Response interceptor\n// api.interceptors.response.use(\n//   (response) => response,\n//   (error) => {\n//     if (error.response?.status === 401) {\n//       console.error('Unauthorized - redirect to login');\n//     } else if (error.response?.status === 404) {\n//       console.error('Resource not found');\n//     } else if (error.response?.status === 500) {\n//       console.error('Server error');\n//     }\n//     return Promise.reject(error);\n//   }\n// );\n\n// // ================= AUTH API =================\n// export const authAPI = {\n//   login: async (data) => {\n//     try {\n//       const response = await api.post('/auth/login', data);\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Login failed' };\n//     }\n//   },\n//   signup: async (data) => {\n//     try {\n//       const response = await api.post('/auth/signup', data);\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Signup failed' };\n//     }\n//   },\n//   generateUserId: async (mobileNumber) => {\n//     try {\n//       const response = await api.post('/auth/generate-user-id', { mobileNumber });\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to generate user ID' };\n//     }\n//   },\n//   completeSignup: async (userData) => {\n//     try {\n//       const response = await api.post('/auth/complete-signup', userData);\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to complete signup' };\n//     }\n//   },\n//   getDashboard: async (parentMobile) => {\n//     try {\n//       const response = await api.get(`/auth/dashboard/${parentMobile}`);\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to get user data' };\n//     }\n//   },\n//   verifyOtp: async (mobileNumber, otp) => {\n//     try {\n//       const response = await api.post('/auth/verify-otp', { mobileNumber, otp });\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'OTP verification failed' };\n//     }\n//   },\n//   resendOtp: async (mobileNumber) => {\n//     try {\n//       const response = await api.post('/auth/resend-otp', { mobileNumber });\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to resend OTP' };\n//     }\n//   }\n// };\n\n// // ================= SYSTEM API =================\n// export const systemAPI = {\n//   healthCheck: async () => {\n//     try {\n//       const response = await api.get('/health');\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Health check failed' };\n//     }\n//   }\n// };\n\n// // ================= PRODUCT API =================\n// export const productAPI = {\n//   createProduct: async (data) => {\n//     try {\n//       const response = await api.post('/product', data);\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to create product' };\n//     }\n//   },\n//   assignProduct: async (id, assignedTo) => {\n//     try {\n//       const response = await api.patch(`/product/${id}/assign`, { assignedTo });\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to assign product' };\n//     }\n//   },\n//   getProducts: async (userId) => {\n//     try {\n//       const response = await api.get('/product', { params: userId ? { userId } : {} });\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to get products' };\n//     }\n//   }\n// };\n\n// // ================= ORDER API =================\n// export const orderAPI = {\n//   createOrder: async (data) => {\n//     try {\n//       const response = await api.post('/order', data);\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to create order' };\n//     }\n//   },\n//   updateOrderStatus: async (id, statusData) => {\n//     try {\n//       const response = await api.patch(`/order/${id}/status`, statusData);\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to update order status' };\n//     }\n//   },\n//   updatePaymentStatus: async (id, paymentStatus) => {\n//     try {\n//       const response = await api.patch(`/order/${id}/payment-status`, { paymentStatus });\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to update payment status' };\n//     }\n//   },\n//   getOrders: async (userId) => {\n//     try {\n//       const response = await api.get('/order', { params: userId ? { userId } : {} });\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to get orders' };\n//     }\n//   },\n//   getOrderById: async (orderId) => {\n//     try {\n//       const response = await api.get(`/order/${orderId}`);\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to get order details' };\n//     }\n//   }\n// };\n\n// // ================= WALLET API (from your first snippet) =================\n\n// // ================= WALLET API =================\n// export const walletAPI = {\n//   /**\n//    * Get user wallet\n//    */\n//   getUserWallet: async (userId) => {\n//     try {\n//       const response = await api.get(`/wallet/user/${userId}`);\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: \"Failed to fetch wallet\" };\n//     }\n//   },\n\n//   /**\n//    * Get withdrawal history for a user\n//    */\n//   getUserWithdrawalRequests: async (userId) => {\n//     try {\n//       const response = await api.get(`/wallet/withdrawal-requests/user/${userId}`);\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: \"Failed to fetch withdrawals\" };\n//     }\n//   },\n\n//   /**\n//    * Submit withdrawal request\n//    */\n//   requestWithdrawal: async (userId, amount, formData) => {\n//     try {\n//       const response = await api.post(`/wallet/withdrawal-requests`, {\n//         userId,\n//         amount,\n//         ...formData,\n//       });\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: \"Withdrawal request failed\" };\n//     }\n//   },\n// };\n\n// // ================= DOWNLINE API =================\n// export const downlineAPI = {\n//   assignDownline: async (userId, parentId, level) => {\n//     try {\n//       const response = await api.post('/downline/assign', { userId, parentId, level });\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to assign downline' };\n//     }\n//   },\n//   getDownline: async (userId) => {\n//     try {\n//       const response = await api.get('/downline', { params: { userId } });\n//       return response.data;\n//     } catch (error) {\n//       throw error.response?.data || { success: false, message: 'Failed to get downline' };\n//     }\n//   }\n// };\n\n// export default api;  \n\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// ================= Interceptors =================\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"authToken\") || localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  const status = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status;\n  if (status === 401) console.error(\"Unauthorized - redirect to login\");\n  if (status === 404) console.error(\"Resource not found\");\n  if (status === 500) console.error(\"Server error\");\n  return Promise.reject(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error);\n});\n\n// ================= AUTH API =================\nexport const authAPI = {\n  login: data => api.post(\"/auth/login\", data).then(res => res.data),\n  signup: data => api.post(\"/auth/signup\", data).then(res => res.data),\n  generateUserId: mobileNumber => api.post(\"/auth/generate-user-id\", {\n    mobileNumber\n  }).then(res => res.data),\n  completeSignup: userData => api.post(\"/auth/complete-signup\", userData).then(res => res.data),\n  getDashboard: parentMobile => api.get(`/auth/dashboard/${parentMobile}`).then(res => res.data),\n  verifyOtp: (mobileNumber, otp) => api.post(\"/auth/verify-otp\", {\n    mobileNumber,\n    otp\n  }).then(res => res.data),\n  resendOtp: mobileNumber => api.post(\"/auth/resend-otp\", {\n    mobileNumber\n  }).then(res => res.data)\n};\n\n// ================= SYSTEM API =================\nexport const systemAPI = {\n  healthCheck: () => api.get(\"/health\").then(res => res.data)\n};\n\n// ================= PRODUCT API =================\nexport const productAPI = {\n  createProduct: data => api.post(\"/products\", data).then(res => res.data),\n  assignProduct: (id, assignedTo) => api.patch(`/product/${id}/assign`, {\n    assignedTo\n  }).then(res => res.data),\n  getProducts: userId => api.get(\"/products\", {\n    params: userId ? {\n      userId\n    } : {}\n  }).then(res => res.data)\n};\n\n// ================= ORDER API =================\n// export const orderAPI = {\n//   createOrder: (data) => api.post(\"/order\", data).then((res) => res.data),\n//   updateOrderStatus: (id, statusData) =>\n//     api.patch(`/order/${id}/status`, statusData).then((res) => res.data),\n//   updatePaymentStatus: (id, paymentStatus) =>\n//     api.patch(`/order/${id}/payment-status`, { paymentStatus }).then((res) => res.data),\n//   getOrders: (userId) =>\n//     api.get(\"/order\", { params: userId ? { userId } : {} }).then((res) => res.data),\n//   getOrderById: (orderId) =>\n//     api.get(`/order/${orderId}`).then((res) => res.data),\n// };\n\nexport const orderAPI = {\n  createOrder: data => api.post(\"/orders\", data).then(res => res.data),\n  // works for normal user now\n  updateOrderStatus: (id, statusData) => api.patch(`/orders/${id}/status`, statusData).then(res => res.data),\n  updatePaymentStatus: (id, paymentStatus) => api.patch(`/orders/${id}/payment-status`, {\n    paymentStatus\n  }).then(res => res.data),\n  getOrders: userId => api.get(\"/orders\", {\n    params: userId ? {\n      userId\n    } : {}\n  }).then(res => res.data),\n  getOrderById: orderId => api.get(`/orders/${orderId}`).then(res => res.data)\n};\n\n// ================= WALLET API =================\nexport const walletAPI = {\n  getUserWallet: userId => api.get(`/wallet/user/${userId}`).then(res => res.data),\n  getUserWithdrawalRequests: userId => api.get(`/wallet/withdrawal-requests/user/${userId}`).then(res => res.data),\n  requestWithdrawal: (userId, amount, formData) => api.post(`/wallet/withdrawal-requests`, {\n    userId,\n    amount,\n    ...formData\n  }).then(res => res.data)\n};\n\n// ================= DOWNLINE API =================\nexport const downlineAPI = {\n  assignDownline: (userId, parentId, level) => api.post(\"/downline/assign\", {\n    userId,\n    parentId,\n    level\n  }).then(res => res.data),\n  getDownline: userId => api.get(\"/downline\", {\n    params: {\n      userId\n    }\n  }).then(res => res.data)\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","status","console","data","authAPI","login","post","then","res","signup","generateUserId","mobileNumber","completeSignup","userData","getDashboard","parentMobile","get","verifyOtp","otp","resendOtp","systemAPI","healthCheck","productAPI","createProduct","assignProduct","id","assignedTo","patch","getProducts","userId","params","orderAPI","createOrder","updateOrderStatus","statusData","updatePaymentStatus","paymentStatus","getOrders","getOrderById","orderId","walletAPI","getUserWallet","getUserWithdrawalRequests","requestWithdrawal","amount","formData","downlineAPI","assignDownline","parentId","level","getDownline"],"sources":["C:/Users/moazz/Desktop/frontend/frontend/frontend/src/services/api.js"],"sourcesContent":["// import axios from 'axios';\r\n// import { API_URL } from '../config';\r\n\r\n// const API_BASE_URL = API_URL;\r\n\r\n// // Create axios instance with default config\r\n// const api = axios.create({\r\n//   baseURL: API_BASE_URL,\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//   },\r\n// });\r\n\r\n// // Request interceptor\r\n// api.interceptors.request.use(\r\n//   (config) => {\r\n//     const token = localStorage.getItem('authToken') || localStorage.getItem('token'); // âœ… support both\r\n//     if (token) {\r\n//       config.headers['Authorization'] = `Bearer ${token}`;\r\n//     }\r\n//     return config;\r\n//   },\r\n//   (error) => Promise.reject(error)\r\n// );\r\n\r\n// // Response interceptor\r\n// api.interceptors.response.use(\r\n//   (response) => response,\r\n//   (error) => {\r\n//     if (error.response?.status === 401) {\r\n//       console.error('Unauthorized - redirect to login');\r\n//     } else if (error.response?.status === 404) {\r\n//       console.error('Resource not found');\r\n//     } else if (error.response?.status === 500) {\r\n//       console.error('Server error');\r\n//     }\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\n\r\n// // ================= AUTH API =================\r\n// export const authAPI = {\r\n//   login: async (data) => {\r\n//     try {\r\n//       const response = await api.post('/auth/login', data);\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Login failed' };\r\n//     }\r\n//   },\r\n//   signup: async (data) => {\r\n//     try {\r\n//       const response = await api.post('/auth/signup', data);\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Signup failed' };\r\n//     }\r\n//   },\r\n//   generateUserId: async (mobileNumber) => {\r\n//     try {\r\n//       const response = await api.post('/auth/generate-user-id', { mobileNumber });\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to generate user ID' };\r\n//     }\r\n//   },\r\n//   completeSignup: async (userData) => {\r\n//     try {\r\n//       const response = await api.post('/auth/complete-signup', userData);\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to complete signup' };\r\n//     }\r\n//   },\r\n//   getDashboard: async (parentMobile) => {\r\n//     try {\r\n//       const response = await api.get(`/auth/dashboard/${parentMobile}`);\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to get user data' };\r\n//     }\r\n//   },\r\n//   verifyOtp: async (mobileNumber, otp) => {\r\n//     try {\r\n//       const response = await api.post('/auth/verify-otp', { mobileNumber, otp });\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'OTP verification failed' };\r\n//     }\r\n//   },\r\n//   resendOtp: async (mobileNumber) => {\r\n//     try {\r\n//       const response = await api.post('/auth/resend-otp', { mobileNumber });\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to resend OTP' };\r\n//     }\r\n//   }\r\n// };\r\n\r\n// // ================= SYSTEM API =================\r\n// export const systemAPI = {\r\n//   healthCheck: async () => {\r\n//     try {\r\n//       const response = await api.get('/health');\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Health check failed' };\r\n//     }\r\n//   }\r\n// };\r\n\r\n// // ================= PRODUCT API =================\r\n// export const productAPI = {\r\n//   createProduct: async (data) => {\r\n//     try {\r\n//       const response = await api.post('/product', data);\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to create product' };\r\n//     }\r\n//   },\r\n//   assignProduct: async (id, assignedTo) => {\r\n//     try {\r\n//       const response = await api.patch(`/product/${id}/assign`, { assignedTo });\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to assign product' };\r\n//     }\r\n//   },\r\n//   getProducts: async (userId) => {\r\n//     try {\r\n//       const response = await api.get('/product', { params: userId ? { userId } : {} });\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to get products' };\r\n//     }\r\n//   }\r\n// };\r\n\r\n// // ================= ORDER API =================\r\n// export const orderAPI = {\r\n//   createOrder: async (data) => {\r\n//     try {\r\n//       const response = await api.post('/order', data);\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to create order' };\r\n//     }\r\n//   },\r\n//   updateOrderStatus: async (id, statusData) => {\r\n//     try {\r\n//       const response = await api.patch(`/order/${id}/status`, statusData);\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to update order status' };\r\n//     }\r\n//   },\r\n//   updatePaymentStatus: async (id, paymentStatus) => {\r\n//     try {\r\n//       const response = await api.patch(`/order/${id}/payment-status`, { paymentStatus });\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to update payment status' };\r\n//     }\r\n//   },\r\n//   getOrders: async (userId) => {\r\n//     try {\r\n//       const response = await api.get('/order', { params: userId ? { userId } : {} });\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to get orders' };\r\n//     }\r\n//   },\r\n//   getOrderById: async (orderId) => {\r\n//     try {\r\n//       const response = await api.get(`/order/${orderId}`);\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to get order details' };\r\n//     }\r\n//   }\r\n// };\r\n\r\n// // ================= WALLET API (from your first snippet) =================\r\n\r\n// // ================= WALLET API =================\r\n// export const walletAPI = {\r\n//   /**\r\n//    * Get user wallet\r\n//    */\r\n//   getUserWallet: async (userId) => {\r\n//     try {\r\n//       const response = await api.get(`/wallet/user/${userId}`);\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: \"Failed to fetch wallet\" };\r\n//     }\r\n//   },\r\n\r\n//   /**\r\n//    * Get withdrawal history for a user\r\n//    */\r\n//   getUserWithdrawalRequests: async (userId) => {\r\n//     try {\r\n//       const response = await api.get(`/wallet/withdrawal-requests/user/${userId}`);\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: \"Failed to fetch withdrawals\" };\r\n//     }\r\n//   },\r\n\r\n//   /**\r\n//    * Submit withdrawal request\r\n//    */\r\n//   requestWithdrawal: async (userId, amount, formData) => {\r\n//     try {\r\n//       const response = await api.post(`/wallet/withdrawal-requests`, {\r\n//         userId,\r\n//         amount,\r\n//         ...formData,\r\n//       });\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: \"Withdrawal request failed\" };\r\n//     }\r\n//   },\r\n// };\r\n\r\n\r\n// // ================= DOWNLINE API =================\r\n// export const downlineAPI = {\r\n//   assignDownline: async (userId, parentId, level) => {\r\n//     try {\r\n//       const response = await api.post('/downline/assign', { userId, parentId, level });\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to assign downline' };\r\n//     }\r\n//   },\r\n//   getDownline: async (userId) => {\r\n//     try {\r\n//       const response = await api.get('/downline', { params: { userId } });\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw error.response?.data || { success: false, message: 'Failed to get downline' };\r\n//     }\r\n//   }\r\n// };\r\n\r\n// export default api;  \r\n\r\n\r\n\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../config\";\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\n// ================= Interceptors =================\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"authToken\") || localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    const status = error.response?.status;\r\n    if (status === 401) console.error(\"Unauthorized - redirect to login\");\r\n    if (status === 404) console.error(\"Resource not found\");\r\n    if (status === 500) console.error(\"Server error\");\r\n    return Promise.reject(error.response?.data || error);\r\n  }\r\n);\r\n\r\n// ================= AUTH API =================\r\nexport const authAPI = {\r\n  login: (data) => api.post(\"/auth/login\", data).then((res) => res.data),\r\n  signup: (data) => api.post(\"/auth/signup\", data).then((res) => res.data),\r\n  generateUserId: (mobileNumber) =>\r\n    api.post(\"/auth/generate-user-id\", { mobileNumber }).then((res) => res.data),\r\n  completeSignup: (userData) =>\r\n    api.post(\"/auth/complete-signup\", userData).then((res) => res.data),\r\n  getDashboard: (parentMobile) =>\r\n    api.get(`/auth/dashboard/${parentMobile}`).then((res) => res.data),\r\n  verifyOtp: (mobileNumber, otp) =>\r\n    api.post(\"/auth/verify-otp\", { mobileNumber, otp }).then((res) => res.data),\r\n  resendOtp: (mobileNumber) =>\r\n    api.post(\"/auth/resend-otp\", { mobileNumber }).then((res) => res.data),\r\n};\r\n\r\n// ================= SYSTEM API =================\r\nexport const systemAPI = {\r\n  healthCheck: () => api.get(\"/health\").then((res) => res.data),\r\n};\r\n\r\n// ================= PRODUCT API =================\r\nexport const productAPI = {\r\n  createProduct: (data) => api.post(\"/products\", data).then((res) => res.data),\r\n  assignProduct: (id, assignedTo) =>\r\n    api.patch(`/product/${id}/assign`, { assignedTo }).then((res) => res.data),\r\n  getProducts: (userId) =>\r\n    api.get(\"/products\", { params: userId ? { userId } : {} }).then((res) => res.data),\r\n};\r\n\r\n// ================= ORDER API =================\r\n// export const orderAPI = {\r\n//   createOrder: (data) => api.post(\"/order\", data).then((res) => res.data),\r\n//   updateOrderStatus: (id, statusData) =>\r\n//     api.patch(`/order/${id}/status`, statusData).then((res) => res.data),\r\n//   updatePaymentStatus: (id, paymentStatus) =>\r\n//     api.patch(`/order/${id}/payment-status`, { paymentStatus }).then((res) => res.data),\r\n//   getOrders: (userId) =>\r\n//     api.get(\"/order\", { params: userId ? { userId } : {} }).then((res) => res.data),\r\n//   getOrderById: (orderId) =>\r\n//     api.get(`/order/${orderId}`).then((res) => res.data),\r\n// };\r\n\r\nexport const orderAPI = {\r\n  createOrder: (data) => api.post(\"/orders\", data).then(res => res.data), // works for normal user now\r\n  updateOrderStatus: (id, statusData) => api.patch(`/orders/${id}/status`, statusData).then(res => res.data),\r\n  updatePaymentStatus: (id, paymentStatus) => api.patch(`/orders/${id}/payment-status`, { paymentStatus }).then(res => res.data),\r\n  getOrders: (userId) => api.get(\"/orders\", { params: userId ? { userId } : {} }).then(res => res.data),\r\n  getOrderById: (orderId) => api.get(`/orders/${orderId}`).then(res => res.data)\r\n};\r\n\r\n\r\n// ================= WALLET API =================\r\nexport const walletAPI = {\r\n  getUserWallet: (userId) =>\r\n    api.get(`/wallet/user/${userId}`).then((res) => res.data),\r\n\r\n  getUserWithdrawalRequests: (userId) =>\r\n    api.get(`/wallet/withdrawal-requests/user/${userId}`).then((res) => res.data),\r\n\r\n  requestWithdrawal: (userId, amount, formData) =>\r\n    api.post(`/wallet/withdrawal-requests`, { userId, amount, ...formData })\r\n       .then((res) => res.data),\r\n};\r\n\r\n// ================= DOWNLINE API =================\r\nexport const downlineAPI = {\r\n  assignDownline: (userId, parentId, level) =>\r\n    api.post(\"/downline/assign\", { userId, parentId, level }).then((res) => res.data),\r\n\r\n  getDownline: (userId) =>\r\n    api.get(\"/downline\", { params: { userId } }).then((res) => res.data),\r\n};\r\n\r\nexport default api;\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}