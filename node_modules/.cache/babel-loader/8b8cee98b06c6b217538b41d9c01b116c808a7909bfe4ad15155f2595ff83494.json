{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moazz\\\\Desktop\\\\frontend\\\\src\\\\components\\\\auth\\\\SignupForm.js\",\n  _s = $RefreshSig$();\n// // // // // import React, { useState } from 'react';\n// // // // // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // // // // import * as Yup from 'yup';\n\n// // // // // import { authAPI } from '../../services/api';\n// // // // // import { API_URL } from '../../config';\n\n// // // // // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\n// // // // //   const [isLoading, setIsLoading] = useState(false);\n// // // // //   const [error, setError] = useState('');\n// // // // //   const [userIds, setUserIds] = useState([]);\n// // // // //   const [showDashboard, setShowDashboard] = useState(false);\n// // // // //   const [step, setStep] = useState(1); // 1: form, 2: otp\n// // // // //   const [mobileForOtp, setMobileForOtp] = useState('');\n// // // // //   const [otp, setOtp] = useState('');\n// // // // //   const [otpError, setOtpError] = useState('');\n// // // // //   const [otpMessage, setOtpMessage] = useState('');\n// // // // //   const [isOtpLoading, setIsOtpLoading] = useState(false);\n\n// // // // //   const validationSchema = Yup.object({\n// // // // //     name: Yup.string().min(2, 'Name must be at least 2 characters').max(50, 'Name cannot exceed 50 characters').required('Name is required'),\n// // // // //     email: Yup.string().email('Please enter a valid email address').nullable(),\n// // // // //     mobileNumber: Yup.string().matches(/^[0-9]{10,15}$/, 'Please enter a valid mobile number').required('Mobile number is required'),\n// // // // //     password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n// // // // //     confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm password is required'),\n// // // // //   });\n\n// // // // //   const sendOtp = async (mobile) => {\n// // // // //     setIsOtpLoading(true);\n// // // // //     setOtpError('');\n// // // // //     setOtpMessage('');\n// // // // //     try {\n// // // // //       // Using fetch with API_URL from config\n// // // // //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/send-otp`, {\n// // // // //         method: 'POST',\n// // // // //         headers: {\n// // // // //           'Content-Type': 'application/json',\n// // // // //         },\n// // // // //         body: JSON.stringify({ mobile }),\n// // // // //       });\n// // // // //       const data = await response.json();\n// // // // //       if (!response.ok) {\n// // // // //         throw new Error(data.error || 'Failed to send OTP');\n// // // // //       }\n// // // // //       setOtpMessage('OTP sent to your mobile number.');\n// // // // //     } catch (err) {\n// // // // //       setOtpError(err.message || 'Failed to send OTP');\n// // // // //     } finally {\n// // // // //       setIsOtpLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   const handleSubmit = async (values, { setSubmitting }) => {\n// // // // //     setError('');\n// // // // //     setUserIds([]);\n// // // // //     setShowDashboard(false);\n// // // // //     setMobileForOtp(values.mobileNumber);\n// // // // //     setStep(2);\n// // // // //     await sendOtp(values.mobileNumber);\n// // // // //     setSubmitting(false);\n// // // // //   };\n\n// // // // //   const handleVerifyOtp = async () => {\n// // // // //     setIsOtpLoading(true);\n// // // // //     setOtpError('');\n// // // // //     setOtpMessage('');\n// // // // //     try {\n// // // // //       // Using fetch with API_URL from config for OTP verification\n// // // // //       const verifyResponse = await fetch(`${API_URL.replace('/api', '')}/auth/verify-otp`, {\n// // // // //         method: 'POST',\n// // // // //         headers: {\n// // // // //           'Content-Type': 'application/json',\n// // // // //         },\n// // // // //         body: JSON.stringify({ mobile: mobileForOtp, otp }),\n// // // // //       });\n\n// // // // //       const verifyData = await verifyResponse.json();\n// // // // //       if (!verifyResponse.ok) {\n// // // // //         throw new Error(verifyData.error || 'OTP verification failed');\n// // // // //       }\n\n// // // // //       // Now create the account using authAPI\n// // // // //       setIsLoading(true);\n// // // // //       try {\n// // // // //         const signupData = {\n// // // // //           mobileNumber: mobileForOtp,\n// // // // //           // You may want to store the rest of the form data in a ref or state for this step\n// // // // //           // For demo, just pass mobileNumber\n// // // // //         };\n\n// // // // //         const response = await authAPI.signup(signupData);\n\n// // // // //         if (response.success) {\n// // // // //           setUserIds(response.data?.allUserIds || []);\n// // // // //           setShowDashboard(true);\n// // // // //           onSignupSuccess && onSignupSuccess(response.data);\n// // // // //         } else {\n// // // // //           setError(response.message || 'Signup failed');\n// // // // //           setStep(1);\n// // // // //         }\n// // // // //       } catch (signupErr) {\n// // // // //         setError(signupErr.message || 'Signup failed');\n// // // // //         setStep(1);\n// // // // //       }\n// // // // //     } catch (err) {\n// // // // //       setOtpError(err.message || 'OTP verification failed');\n// // // // //     } finally {\n// // // // //       setIsOtpLoading(false);\n// // // // //       setIsLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   if (showDashboard && userIds.length > 0) {\n// // // // //     return (\n// // // // //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // // // //         <div className=\"max-w-md w-full space-y-8\">\n// // // // //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\n// // // // //           <ul className=\"mt-4 mb-6\">\n// // // // //             {userIds.map((id) => (\n// // // // //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\n// // // // //             ))}\n// // // // //           </ul>\n// // // // //           <button onClick={() => setShowDashboard(false)} className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\">Create another user</button>\n// // // // //         </div>\n// // // // //       </div>\n// // // // //     );\n// // // // //   }\n\n// // // // //   if (step === 2) {\n// // // // //     return (\n// // // // //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // // // //         <div className=\"max-w-md w-full space-y-8\">\n// // // // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n// // // // //           <p className=\"text-center text-sm text-gray-600\">Enter the OTP sent to your mobile number {mobileForOtp}</p>\n// // // // //           <div className=\"space-y-4\">\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={otp}\n// // // // //               onChange={e => setOtp(e.target.value)}\n// // // // //               placeholder=\"Enter OTP\"\n// // // // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n// // // // //             />\n// // // // //             <button\n// // // // //               onClick={handleVerifyOtp}\n// // // // //               disabled={isOtpLoading || !otp}\n// // // // //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\n// // // // //             >\n// // // // //               {isOtpLoading ? 'Verifying...' : 'Verify OTP'}\n// // // // //             </button>\n// // // // //             <button\n// // // // //               onClick={() => sendOtp(mobileForOtp)}\n// // // // //               disabled={isOtpLoading}\n// // // // //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md\"\n// // // // //             >\n// // // // //               Resend OTP\n// // // // //             </button>\n// // // // //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\n// // // // //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\n// // // // //             <button onClick={() => setStep(1)} className=\"w-full py-2 px-4 text-indigo-600\">Back to Signup</button>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n// // // // //     );\n// // // // //   }\n\n// // // // //   return (\n// // // // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // // // //       <div className=\"max-w-md w-full space-y-8\">\n// // // // //         <div>\n// // // // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Create your account</h2>\n// // // // //           <p className=\"mt-2 text-center text-sm text-gray-600\">Enter your details to create a user ID under your mobile</p>\n// // // // //         </div>\n// // // // //         <Formik\n// // // // //           initialValues={{ name: '', email: '', mobileNumber: '', password: '', confirmPassword: '' }}\n// // // // //           validationSchema={validationSchema}\n// // // // //           onSubmit={handleSubmit}\n// // // // //         >\n// // // // //           {({ isSubmitting }) => (\n// // // // //             <Form className=\"mt-8 space-y-6\">\n// // // // //               <div className=\"space-y-4\">\n// // // // //                 <div>\n// // // // //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Name</label>\n// // // // //                   <Field id=\"name\" name=\"name\" type=\"text\" autoComplete=\"name\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your name\" />\n// // // // //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // // //                 </div>\n// // // // //                 <div>\n// // // // //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email (optional)</label>\n// // // // //                   <Field id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your email (optional)\" />\n// // // // //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // // //                 </div>\n// // // // //                 <div>\n// // // // //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">Mobile Number</label>\n// // // // //                   <Field id=\"mobileNumber\" name=\"mobileNumber\" type=\"tel\" autoComplete=\"tel\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your mobile number\" />\n// // // // //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // // //                 </div>\n// // // // //                 <div>\n// // // // //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\n// // // // //                   <Field id=\"password\" name=\"password\" type=\"password\" autoComplete=\"new-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your password\" />\n// // // // //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // // //                 </div>\n// // // // //                 <div>\n// // // // //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">Confirm Password</label>\n// // // // //                   <Field id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" autoComplete=\"new-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Confirm your password\" />\n// // // // //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // // //                 </div>\n// // // // //               </div>\n// // // // //               {error && (\n// // // // //                 <div className=\"rounded-md bg-red-50 p-4\">\n// // // // //                   <div className=\"flex\">\n// // // // //                     <div className=\"ml-3\">\n// // // // //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\n// // // // //                     </div>\n// // // // //                   </div>\n// // // // //                 </div>\n// // // // //               )}\n// // // // //               <div>\n// // // // //                 <button type=\"submit\" disabled={isSubmitting || isLoading} className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\">\n// // // // //                   {isLoading ? 'Creating account...' : 'Create account'}\n// // // // //                 </button>\n// // // // //               </div>\n// // // // //               <div className=\"text-center\">\n// // // // //                 <button type=\"button\" onClick={onSwitchToLogin} className=\"font-medium text-indigo-600 hover:text-indigo-500\">Already have an account? Sign in</button>\n// // // // //               </div>\n// // // // //             </Form>\n// // // // //           )}\n// // // // //         </Formik>\n// // // // //       </div>\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // export default SignupForm;\n\n// // // // import React, { useState, useEffect } from 'react';\n// // // // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // // // import * as Yup from 'yup';\n// // // // import { authAPI } from '../../services/api';\n\n// // // // import { \n// // // //   auth, \n// // // //   RecaptchaVerifier, \n// // // //   signInWithPhoneNumber \n// // // // } from '../../firebase';\n\n// // // // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\n// // // //   const [isLoading, setIsLoading] = useState(false);\n// // // //   const [error, setError] = useState('');\n// // // //   const [userIds, setUserIds] = useState([]);\n// // // //   const [showDashboard, setShowDashboard] = useState(false);\n// // // //   const [step, setStep] = useState(1); // 1: form, 2: otp\n// // // //   const [mobileForOtp, setMobileForOtp] = useState('');\n// // // //   const [otp, setOtp] = useState('');\n// // // //   const [otpError, setOtpError] = useState('');\n// // // //   const [otpMessage, setOtpMessage] = useState('');\n// // // //   const [isOtpLoading, setIsOtpLoading] = useState(false);\n// // // //   const [formData, setFormData] = useState(null);\n\n// // // //   const validationSchema = Yup.object({\n// // // //     name: Yup.string()\n// // // //       .min(2, 'Name must be at least 2 characters')\n// // // //       .max(50, 'Name cannot exceed 50 characters')\n// // // //       .required('Name is required'),\n// // // //     email: Yup.string()\n// // // //       .email('Please enter a valid email address')\n// // // //       .nullable(),\n// // // //     mobileNumber: Yup.string()\n// // // //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n// // // //       .required('Mobile number is required'),\n// // // //     password: Yup.string()\n// // // //       .min(6, 'Password must be at least 6 characters')\n// // // //       .required('Password is required'),\n// // // //     confirmPassword: Yup.string()\n// // // //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n// // // //       .required('Confirm password is required'),\n// // // //   });\n\n// // // //   // Initialize reCAPTCHA\n// // // //   useEffect(() => {\n// // // //     window.recaptchaVerifier = new RecaptchaVerifier(\n// // // //       'recaptcha-container',\n// // // //       {\n// // // //         size: 'invisible',\n// // // //         callback: () => {\n// // // //           // This will be called when reCAPTCHA is solved\n// // // //         },\n// // // //       },\n// // // //       auth\n// // // //     );\n\n// // // //     return () => {\n// // // //       if (window.recaptchaVerifier) {\n// // // //         window.recaptchaVerifier.clear();\n// // // //       }\n// // // //     };\n// // // //   }, []);\n\n// // // //   const sendOtp = async (mobile) => {\n// // // //     setIsOtpLoading(true);\n// // // //     setOtpError('');\n// // // //     setOtpMessage('');\n\n// // // //     try {\n// // // //       const phoneNumber = `+91${mobile}`; // Adjust country code as needed\n// // // //       const confirmationResult = await auth().signInWithPhoneNumber(\n// // // //         phoneNumber,\n// // // //         window.recaptchaVerifier\n// // // //       );\n\n// // // //       window.confirmationResult = confirmationResult;\n// // // //       setOtpMessage('OTP sent to your mobile number.');\n// // // //     } catch (err) {\n// // // //       console.error('OTP Error:', err);\n// // // //       setOtpError(err.message || 'Failed to send OTP. Please try again.');\n// // // //     } finally {\n// // // //       setIsOtpLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   const handleSubmit = async (values, { setSubmitting }) => {\n// // // //     setError('');\n// // // //     setFormData(values);\n// // // //     setMobileForOtp(values.mobileNumber);\n// // // //     await sendOtp(values.mobileNumber);\n// // // //     setStep(2);\n// // // //     setSubmitting(false);\n// // // //   };\n\n// // // //   const handleVerifyOtp = async () => {\n// // // //     setIsOtpLoading(true);\n// // // //     setOtpError('');\n// // // //     setOtpMessage('');\n\n// // // //     try {\n// // // //       // Verify OTP with Firebase\n// // // //       await window.confirmationResult.confirm(otp);\n\n// // // //       // OTP verified - proceed with account creation\n// // // //       setIsLoading(true);\n// // // //       try {\n// // // //         const response = await authAPI.signup({\n// // // //           name: formData.name,\n// // // //           email: formData.email,\n// // // //           mobileNumber: formData.mobileNumber,\n// // // //           password: formData.password,\n// // // //         });\n\n// // // //         if (response.success) {\n// // // //           setUserIds(response.data?.allUserIds || []);\n// // // //           setShowDashboard(true);\n// // // //           onSignupSuccess && onSignupSuccess(response.data);\n// // // //         } else {\n// // // //           setError(response.message || 'Signup failed');\n// // // //           setStep(1);\n// // // //         }\n// // // //       } catch (signupErr) {\n// // // //         setError(signupErr.message || 'Signup failed. Please try again.');\n// // // //         setStep(1);\n// // // //       }\n// // // //     } catch (err) {\n// // // //       setOtpError(err.message || 'Invalid OTP. Please try again.');\n// // // //     } finally {\n// // // //       setIsOtpLoading(false);\n// // // //       setIsLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   if (showDashboard && userIds.length > 0) {\n// // // //     return (\n// // // //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // // //         <div className=\"max-w-md w-full space-y-8\">\n// // // //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\n// // // //           <ul className=\"mt-4 mb-6\">\n// // // //             {userIds.map((id) => (\n// // // //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\n// // // //             ))}\n// // // //           </ul>\n// // // //           <button \n// // // //             onClick={() => setShowDashboard(false)} \n// // // //             className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n// // // //           >\n// // // //             Create another user\n// // // //           </button>\n// // // //         </div>\n// // // //       </div>\n// // // //     );\n// // // //   }\n\n// // // //   if (step === 2) {\n// // // //     return (\n// // // //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // // //         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// // // //         <div className=\"max-w-md w-full space-y-8\">\n// // // //           <div>\n// // // //             <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n// // // //             <p className=\"text-center text-sm text-gray-600\">\n// // // //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n// // // //             </p>\n// // // //           </div>\n\n// // // //           <div className=\"space-y-4\">\n// // // //             <div>\n// // // //               <input\n// // // //                 type=\"text\"\n// // // //                 value={otp}\n// // // //                 onChange={(e) => setOtp(e.target.value)}\n// // // //                 placeholder=\"Enter OTP\"\n// // // //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n// // // //                 maxLength=\"6\"\n// // // //               />\n// // // //             </div>\n\n// // // //             <button\n// // // //               onClick={handleVerifyOtp}\n// // // //               disabled={isOtpLoading || otp.length !== 6}\n// // // //               className={`w-full py-2 px-4 rounded-md text-white ${isOtpLoading || otp.length !== 6 ? 'bg-indigo-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'} transition-colors`}\n// // // //             >\n// // // //               {isOtpLoading ? (\n// // // //                 <span className=\"flex items-center justify-center\">\n// // // //                   <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// // // //                     <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// // // //                     <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// // // //                   </svg>\n// // // //                   Verifying...\n// // // //                 </span>\n// // // //               ) : 'Verify OTP'}\n// // // //             </button>\n\n// // // //             <button\n// // // //               onClick={() => sendOtp(mobileForOtp)}\n// // // //               disabled={isOtpLoading}\n// // // //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors disabled:opacity-50\"\n// // // //             >\n// // // //               Resend OTP\n// // // //             </button>\n\n// // // //             {otpMessage && (\n// // // //               <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n// // // //                 {otpMessage}\n// // // //               </div>\n// // // //             )}\n\n// // // //             {otpError && (\n// // // //               <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n// // // //                 {otpError}\n// // // //               </div>\n// // // //             )}\n\n// // // //             <button \n// // // //               onClick={() => setStep(1)}\n// // // //               className=\"w-full py-2 px-4 text-indigo-600 hover:text-indigo-800 transition-colors\"\n// // // //             >\n// // // //               Back to Signup\n// // // //             </button>\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n// // // //     );\n// // // //   }\n\n// // // //   return (\n// // // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // // //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// // // //       <div className=\"max-w-md w-full space-y-8\">\n// // // //         <div>\n// // // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n// // // //             Create your account\n// // // //           </h2>\n// // // //           <p className=\"mt-2 text-center text-sm text-gray-600\">\n// // // //             Enter your details to create a user ID under your mobile\n// // // //           </p>\n// // // //         </div>\n\n// // // //         <Formik\n// // // //           initialValues={{\n// // // //             name: '',\n// // // //             email: '',\n// // // //             mobileNumber: '',\n// // // //             password: '',\n// // // //             confirmPassword: ''\n// // // //           }}\n// // // //           validationSchema={validationSchema}\n// // // //           onSubmit={handleSubmit}\n// // // //         >\n// // // //           {({ isSubmitting, isValid, dirty }) => (\n// // // //             <Form className=\"mt-8 space-y-6\">\n// // // //               <div className=\"space-y-4\">\n// // // //                 <div>\n// // // //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n// // // //                     Full Name\n// // // //                   </label>\n// // // //                   <Field \n// // // //                     id=\"name\" \n// // // //                     name=\"name\" \n// // // //                     type=\"text\" \n// // // //                     autoComplete=\"name\" \n// // // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // // //                     placeholder=\"Enter your full name\"\n// // // //                   />\n// // // //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n\n// // // //                 <div>\n// // // //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n// // // //                     Email (optional)\n// // // //                   </label>\n// // // //                   <Field \n// // // //                     id=\"email\" \n// // // //                     name=\"email\" \n// // // //                     type=\"email\" \n// // // //                     autoComplete=\"email\" \n// // // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // // //                     placeholder=\"Enter your email\"\n// // // //                   />\n// // // //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n\n// // // //                 <div>\n// // // //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\n// // // //                     Mobile Number\n// // // //                   </label>\n// // // //                   <div className=\"mt-1 flex rounded-md shadow-sm\">\n// // // //                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 sm:text-sm\">\n// // // //                       +91\n// // // //                     </span>\n// // // //                     <Field \n// // // //                       id=\"mobileNumber\" \n// // // //                       name=\"mobileNumber\" \n// // // //                       type=\"tel\" \n// // // //                       autoComplete=\"tel\" \n// // // //                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // // //                       placeholder=\"Enter your 10-digit mobile number\"\n// // // //                       maxLength=\"10\"\n// // // //                     />\n// // // //                   </div>\n// // // //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n\n// // // //                 <div>\n// // // //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n// // // //                     Password\n// // // //                   </label>\n// // // //                   <Field \n// // // //                     id=\"password\" \n// // // //                     name=\"password\" \n// // // //                     type=\"password\" \n// // // //                     autoComplete=\"new-password\" \n// // // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // // //                     placeholder=\"Enter your password\"\n// // // //                   />\n// // // //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n\n// // // //                 <div>\n// // // //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n// // // //                     Confirm Password\n// // // //                   </label>\n// // // //                   <Field \n// // // //                     id=\"confirmPassword\" \n// // // //                     name=\"confirmPassword\" \n// // // //                     type=\"password\" \n// // // //                     autoComplete=\"new-password\" \n// // // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // // //                     placeholder=\"Confirm your password\"\n// // // //                   />\n// // // //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // // //                 </div>\n// // // //               </div>\n\n// // // //               {error && (\n// // // //                 <div className=\"rounded-md bg-red-50 p-4\">\n// // // //                   <div className=\"flex\">\n// // // //                     <div className=\"ml-3\">\n// // // //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\n// // // //                     </div>\n// // // //                   </div>\n// // // //                 </div>\n// // // //               )}\n\n// // // //               <div>\n// // // //                 <button\n// // // //                   type=\"submit\"\n// // // //                   disabled={isSubmitting || isLoading || !isValid || !dirty}\n// // // //                   className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${isSubmitting || isLoading || !isValid || !dirty ? 'bg-indigo-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors`}\n// // // //                 >\n// // // //                   {isLoading ? (\n// // // //                     <span className=\"flex items-center justify-center\">\n// // // //                       <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// // // //                         <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// // // //                         <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// // // //                       </svg>\n// // // //                       Processing...\n// // // //                     </span>\n// // // //                   ) : 'Send OTP'}\n// // // //                 </button>\n// // // //               </div>\n\n// // // //               <div className=\"text-center\">\n// // // //                 <button\n// // // //                   type=\"button\"\n// // // //                   onClick={onSwitchToLogin}\n// // // //                   className=\"font-medium text-indigo-600 hover:text-indigo-500 transition-colors\"\n// // // //                 >\n// // // //                   Already have an account? Sign in\n// // // //                 </button>\n// // // //               </div>\n// // // //             </Form>\n// // // //           )}\n// // // //         </Formik>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default SignupForm;\n\n// // // import React, { useState, useEffect, useRef } from 'react';\n// // // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // // import * as Yup from 'yup';\n// // // import { authAPI } from '../../services/api';\n// // // import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\n\n// // // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\n// // //   // State management\n// // //   const [step, setStep] = useState(1); // 1: form, 2: otp\n// // //   const [loading, setLoading] = useState({\n// // //     form: false,\n// // //     otp: false,\n// // //     resend: false\n// // //   });\n// // //   const [error, setError] = useState('');\n// // //   const [message, setMessage] = useState('');\n// // //   const [formData, setFormData] = useState(null);\n// // //   const [mobileForOtp, setMobileForOtp] = useState('');\n// // //   const [otp, setOtp] = useState('');\n// // //   const recaptchaVerifier = useRef(null);\n\n// // //   // Form validation schema\n// // //   const validationSchema = Yup.object({\n// // //     name: Yup.string()\n// // //       .min(2, 'Name must be at least 2 characters')\n// // //       .max(50, 'Name cannot exceed 50 characters')\n// // //       .required('Name is required'),\n// // //     email: Yup.string()\n// // //       .email('Please enter a valid email address')\n// // //       .nullable(),\n// // //     mobileNumber: Yup.string()\n// // //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n// // //       .required('Mobile number is required'),\n// // //     password: Yup.string()\n// // //       .min(8, 'Password must be at least 8 characters')\n// // //       .matches(\n// // //         /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n// // //         'Password must contain at least one uppercase, one lowercase, one number and one special character'\n// // //       )\n// // //       .required('Password is required'),\n// // //     confirmPassword: Yup.string()\n// // //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n// // //       .required('Confirm password is required'),\n// // //   });\n\n// // //   // Initialize reCAPTCHA\n// // //   useEffect(() => {\n// // //     recaptchaVerifier.current = new RecaptchaVerifier(\n// // //       'recaptcha-container',\n// // //       {\n// // //         size: 'invisible',\n// // //         callback: () => {\n// // //           // This will be called when reCAPTCHA is solved\n// // //         },\n// // //       },\n// // //       auth\n// // //     );\n\n// // //     return () => {\n// // //       if (recaptchaVerifier.current) {\n// // //         recaptchaVerifier.current.clear();\n// // //       }\n// // //     };\n// // //   }, []);\n\n// // //   const sendOtp = async (mobile) => {\n// // //     setLoading(prev => ({ ...prev, form: true }));\n// // //     setError('');\n// // //     setMessage('');\n\n// // //     try {\n// // //       const phoneNumber = `+91${mobile}`;\n// // //       const confirmationResult = await signInWithPhoneNumber(\n// // //         auth,\n// // //         phoneNumber,\n// // //         recaptchaVerifier.current\n// // //       );\n\n// // //       window.confirmationResult = confirmationResult;\n// // //       setMessage('OTP sent to your mobile number.');\n// // //       setMobileForOtp(mobile);\n// // //       setStep(2);\n// // //     } catch (err) {\n// // //       console.error('OTP Error:', err);\n// // //       setError(err.message || 'Failed to send OTP. Please try again.');\n// // //       // Reset recaptcha on error\n// // //       recaptchaVerifier.current.clear();\n// // //       recaptchaVerifier.current = new RecaptchaVerifier(\n// // //         'recaptcha-container',\n// // //         {\n// // //           size: 'invisible',\n// // //           callback: () => {},\n// // //         },\n// // //         auth\n// // //       );\n// // //     } finally {\n// // //       setLoading(prev => ({ ...prev, form: false }));\n// // //     }\n// // //   };\n\n// // //   const resendOtp = async () => {\n// // //     setLoading(prev => ({ ...prev, resend: true }));\n// // //     setError('');\n\n// // //     try {\n// // //       await sendOtp(mobileForOtp);\n// // //       setMessage('New OTP sent to your mobile number.');\n// // //     } catch (err) {\n// // //       setError(err.message || 'Failed to resend OTP. Please try again.');\n// // //     } finally {\n// // //       setLoading(prev => ({ ...prev, resend: false }));\n// // //     }\n// // //   };\n\n// // //   const verifyOtp = async () => {\n// // //     setLoading(prev => ({ ...prev, otp: true }));\n// // //     setError('');\n\n// // //     try {\n// // //       // Verify OTP with Firebase\n// // //       await window.confirmationResult.confirm(otp);\n\n// // //       // OTP verified - proceed with account creation\n// // //       try {\n// // //         const response = await authAPI.signup({\n// // //           name: formData.name,\n// // //           email: formData.email,\n// // //           mobileNumber: formData.mobileNumber,\n// // //           password: formData.password,\n// // //         });\n\n// // //         if (response.success) {\n// // //           onSignupSuccess?.(response.data);\n// // //         } else {\n// // //           throw new Error(response.message || 'Signup failed');\n// // //         }\n// // //       } catch (signupErr) {\n// // //         throw new Error(signupErr.message || 'Signup failed. Please try again.');\n// // //       }\n// // //     } catch (err) {\n// // //       setError(err.message || 'Invalid OTP. Please try again.');\n// // //     } finally {\n// // //       setLoading(prev => ({ ...prev, otp: false }));\n// // //     }\n// // //   };\n\n// // //   const handleFormSubmit = async (values, { setSubmitting }) => {\n// // //     setFormData(values);\n// // //     await sendOtp(values.mobileNumber);\n// // //     setSubmitting(false);\n// // //   };\n\n// // //   // OTP Verification Step\n// // //   if (step === 2) {\n// // //     return (\n// // //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // //         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// // //         <div className=\"max-w-md w-full space-y-8\">\n// // //           <div className=\"text-center\">\n// // //             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n// // //             <p className=\"mt-2 text-sm text-gray-600\">\n// // //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n// // //             </p>\n// // //           </div>\n\n// // //           <div className=\"space-y-4\">\n// // //             <div>\n// // //               <input\n// // //                 type=\"text\"\n// // //                 value={otp}\n// // //                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n// // //                 placeholder=\"Enter 6-digit OTP\"\n// // //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\n// // //                 inputMode=\"numeric\"\n// // //                 autoFocus\n// // //               />\n// // //             </div>\n\n// // //             <button\n// // //               onClick={verifyOtp}\n// // //               disabled={loading.otp || otp.length !== 6}\n// // //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n// // //             >\n// // //               {loading.otp ? (\n// // //                 <>\n// // //                   <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// // //                     <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// // //                     <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// // //                   </svg>\n// // //                   Verifying...\n// // //                 </>\n// // //               ) : 'Verify OTP'}\n// // //             </button>\n\n// // //             <button\n// // //               onClick={resendOtp}\n// // //               disabled={loading.resend}\n// // //               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\n// // //             >\n// // //               {loading.resend ? 'Resending OTP...' : 'Resend OTP'}\n// // //             </button>\n\n// // //             {message && (\n// // //               <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n// // //                 {message}\n// // //               </div>\n// // //             )}\n\n// // //             {error && (\n// // //               <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n// // //                 {error}\n// // //               </div>\n// // //             )}\n\n// // //             <button \n// // //               onClick={() => {\n// // //                 setStep(1);\n// // //                 setError('');\n// // //                 setMessage('');\n// // //               }}\n// // //               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\n// // //             >\n// // //               ← Back to Signup\n// // //             </button>\n// // //           </div>\n// // //         </div>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   // Initial Signup Form\n// // //   return (\n// // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// // //       <div className=\"max-w-md w-full space-y-8\">\n// // //         <div className=\"text-center\">\n// // //           <h2 className=\"text-3xl font-extrabold text-gray-900\">\n// // //             Create your account\n// // //           </h2>\n// // //           <p className=\"mt-2 text-sm text-gray-600\">\n// // //             Enter your details to get started\n// // //           </p>\n// // //         </div>\n\n// // //         <Formik\n// // //           initialValues={{\n// // //             name: '',\n// // //             email: '',\n// // //             mobileNumber: '',\n// // //             password: '',\n// // //             confirmPassword: ''\n// // //           }}\n// // //           validationSchema={validationSchema}\n// // //           onSubmit={handleFormSubmit}\n// // //         >\n// // //           {({ isSubmitting, isValid, dirty }) => (\n// // //             <Form className=\"mt-8 space-y-6\">\n// // //               <div className=\"space-y-4\">\n// // //                 <div>\n// // //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Full Name\n// // //                   </label>\n// // //                   <Field \n// // //                     id=\"name\" \n// // //                     name=\"name\" \n// // //                     type=\"text\" \n// // //                     autoComplete=\"name\" \n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                     placeholder=\"Your full name\"\n// // //                   />\n// // //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n\n// // //                 <div>\n// // //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Email (optional)\n// // //                   </label>\n// // //                   <Field \n// // //                     id=\"email\" \n// // //                     name=\"email\" \n// // //                     type=\"email\" \n// // //                     autoComplete=\"email\" \n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                     placeholder=\"your.email@example.com\"\n// // //                   />\n// // //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n\n// // //                 <div>\n// // //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Mobile Number\n// // //                   </label>\n// // //                   <div className=\"mt-1 flex rounded-md shadow-sm\">\n// // //                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n// // //                       +91\n// // //                     </span>\n// // //                     <Field \n// // //                       id=\"mobileNumber\" \n// // //                       name=\"mobileNumber\" \n// // //                       type=\"tel\" \n// // //                       autoComplete=\"tel\" \n// // //                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                       placeholder=\"9876543210\"\n// // //                       maxLength=\"10\"\n// // //                     />\n// // //                   </div>\n// // //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n\n// // //                 <div>\n// // //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Password\n// // //                   </label>\n// // //                   <Field \n// // //                     id=\"password\" \n// // //                     name=\"password\" \n// // //                     type=\"password\" \n// // //                     autoComplete=\"new-password\" \n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                     placeholder=\"At least 8 characters\"\n// // //                   />\n// // //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n\n// // //                 <div>\n// // //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n// // //                     Confirm Password\n// // //                   </label>\n// // //                   <Field \n// // //                     id=\"confirmPassword\" \n// // //                     name=\"confirmPassword\" \n// // //                     type=\"password\" \n// // //                     autoComplete=\"new-password\" \n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// // //                     placeholder=\"Confirm your password\"\n// // //                   />\n// // //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n// // //               </div>\n\n// // //               {error && (\n// // //                 <div className=\"rounded-md bg-red-50 p-3\">\n// // //                   <p className=\"text-sm text-red-700\">{error}</p>\n// // //                 </div>\n// // //               )}\n\n// // //               <div>\n// // //                 <button\n// // //                   type=\"submit\"\n// // //                   disabled={loading.form || !isValid || !dirty}\n// // //                   className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n// // //                 >\n// // //                   {loading.form ? (\n// // //                     <>\n// // //                       <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// // //                         <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// // //                         <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// // //                       </svg>\n// // //                       Sending OTP...\n// // //                     </>\n// // //                   ) : 'Send OTP'}\n// // //                 </button>\n// // //               </div>\n\n// // //               <div className=\"text-center text-sm\">\n// // //                 <p className=\"text-gray-600\">\n// // //                   Already have an account?{' '}\n// // //                   <button\n// // //                     type=\"button\"\n// // //                     onClick={onSwitchToLogin}\n// // //                     className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n// // //                   >\n// // //                     Sign in\n// // //                   </button>\n// // //                 </p>\n// // //               </div>\n// // //             </Form>\n// // //           )}\n// // //         </Formik>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default SignupForm;\n\n// // import React, { useState, useEffect } from 'react';\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // import * as Yup from 'yup';\n// // import { Link, useNavigate } from 'react-router-dom';\n// // import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\n\n// // const SignupForm = () => {\n// //   const [step, setStep] = useState(1); // 1: form, 2: otp\n// //   const [loading, setLoading] = useState(false);\n// //   const [error, setError] = useState('');\n// //   const [message, setMessage] = useState('');\n// //   const [mobileForOtp, setMobileForOtp] = useState('');\n// //   const [otp, setOtp] = useState('');\n// //   const navigate = useNavigate();\n\n// //   const validationSchema = Yup.object({\n// //     name: Yup.string()\n// //       .min(2, 'Name must be at least 2 characters')\n// //       .max(50, 'Name cannot exceed 50 characters')\n// //       .required('Name is required'),\n// //     email: Yup.string()\n// //       .email('Please enter a valid email address')\n// //       .nullable(),\n// //     mobileNumber: Yup.string()\n// //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n// //       .required('Mobile number is required'),\n// //     password: Yup.string()\n// //       .min(8, 'Password must be at least 8 characters')\n// //       .matches(\n// //         /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n// //         'Password must contain at least one uppercase, one lowercase, one number and one special character'\n// //       )\n// //       .required('Password is required'),\n// //     confirmPassword: Yup.string()\n// //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n// //       .required('Confirm password is required'),\n// //   });\n\n// //   useEffect(() => {\n// //     window.recaptchaVerifier = new RecaptchaVerifier(\n// //       'recaptcha-container',\n// //       { size: 'invisible' },\n// //       auth\n// //     );\n\n// //     return () => {\n// //       if (window.recaptchaVerifier) {\n// //         window.recaptchaVerifier.clear();\n// //       }\n// //     };\n// //   }, []);\n\n// //   const sendOtp = async (mobile) => {\n// //     setLoading(true);\n// //     setError('');\n// //     setMessage('');\n\n// //     try {\n// //       const phoneNumber = `+91${mobile}`;\n// //       const confirmationResult = await signInWithPhoneNumber(\n// //         auth,\n// //         phoneNumber,\n// //         window.recaptchaVerifier\n// //       );\n\n// //       window.confirmationResult = confirmationResult;\n// //       setMessage('OTP sent to your mobile number.');\n// //       setMobileForOtp(mobile);\n// //       setStep(2);\n// //     } catch (err) {\n// //       setError(err.message || 'Failed to send OTP. Please try again.');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const verifyOtp = async () => {\n// //     setLoading(true);\n// //     setError('');\n\n// //     try {\n// //       await window.confirmationResult.confirm(otp);\n// //       setMessage('Account created successfully! Redirecting to login...');\n// //       setTimeout(() => navigate('/login'), 2000);\n// //     } catch (err) {\n// //       setError(err.message || 'Invalid OTP. Please try again.');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const handleFormSubmit = async (values) => {\n// //     await sendOtp(values.mobileNumber);\n// //     // You would typically save formData to use after OTP verification\n// //   };\n\n// //   if (step === 2) {\n// //     return (\n// //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// //         <div className=\"max-w-md w-full space-y-8\">\n// //           <div className=\"text-center\">\n// //             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n// //             <p className=\"mt-2 text-sm text-gray-600\">\n// //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n// //             </p>\n// //           </div>\n\n// //           {message && (\n// //             <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n// //               {message}\n// //             </div>\n// //           )}\n\n// //           {error && (\n// //             <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n// //               {error}\n// //             </div>\n// //           )}\n\n// //           <div className=\"space-y-4\">\n// //             <div>\n// //               <input\n// //                 type=\"text\"\n// //                 value={otp}\n// //                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n// //                 placeholder=\"Enter 6-digit OTP\"\n// //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\n// //                 inputMode=\"numeric\"\n// //                 autoFocus\n// //               />\n// //             </div>\n\n// //             <button\n// //               onClick={verifyOtp}\n// //               disabled={loading || otp.length !== 6}\n// //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n// //             >\n// //               {loading ? 'Verifying...' : 'Verify OTP'}\n// //             </button>\n\n// //             <button\n// //               onClick={() => sendOtp(mobileForOtp)}\n// //               disabled={loading}\n// //               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\n// //             >\n// //               Resend OTP\n// //             </button>\n\n// //             <button \n// //               onClick={() => {\n// //                 setStep(1);\n// //                 setError('');\n// //                 setMessage('');\n// //               }}\n// //               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\n// //             >\n// //               ← Back to Signup\n// //             </button>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// //       <div className=\"max-w-md w-full space-y-8\">\n// //         <div className=\"text-center\">\n// //           <h2 className=\"text-3xl font-extrabold text-gray-900\">\n// //             Create your account\n// //           </h2>\n// //           <p className=\"mt-2 text-sm text-gray-600\">\n// //             Or{' '}\n// //             <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n// //               sign in to your account\n// //             </Link>\n// //           </p>\n// //         </div>\n\n// //         <Formik\n// //           initialValues={{\n// //             name: '',\n// //             email: '',\n// //             mobileNumber: '',\n// //             password: '',\n// //             confirmPassword: ''\n// //           }}\n// //           validationSchema={validationSchema}\n// //           onSubmit={handleFormSubmit}\n// //         >\n// //           {({ isSubmitting, isValid, dirty }) => (\n// //             <Form className=\"mt-8 space-y-6\">\n// //               <div className=\"space-y-4\">\n// //                 <div>\n// //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Full Name\n// //                   </label>\n// //                   <Field \n// //                     id=\"name\" \n// //                     name=\"name\" \n// //                     type=\"text\" \n// //                     autoComplete=\"name\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"Your full name\"\n// //                   />\n// //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n\n// //                 <div>\n// //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Email (optional)\n// //                   </label>\n// //                   <Field \n// //                     id=\"email\" \n// //                     name=\"email\" \n// //                     type=\"email\" \n// //                     autoComplete=\"email\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"your.email@example.com\"\n// //                   />\n// //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n\n// //                 <div>\n// //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Mobile Number\n// //                   </label>\n// //                   <div className=\"mt-1 flex rounded-md shadow-sm\">\n// //                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n// //                       +91\n// //                     </span>\n// //                     <Field \n// //                       id=\"mobileNumber\" \n// //                       name=\"mobileNumber\" \n// //                       type=\"tel\" \n// //                       autoComplete=\"tel\" \n// //                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                       placeholder=\"9876543210\"\n// //                       maxLength=\"10\"\n// //                     />\n// //                   </div>\n// //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n\n// //                 <div>\n// //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Password\n// //                   </label>\n// //                   <Field \n// //                     id=\"password\" \n// //                     name=\"password\" \n// //                     type=\"password\" \n// //                     autoComplete=\"new-password\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"At least 6 characters\"\n// //                   />\n// //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n\n// //                 <div>\n// //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Confirm Password\n// //                   </label>\n// //                   <Field \n// //                     id=\"confirmPassword\" \n// //                     name=\"confirmPassword\" \n// //                     type=\"password\" \n// //                     autoComplete=\"new-password\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"Confirm your password\"\n// //                   />\n// //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n// //               </div>\n\n// //               {error && (\n// //                 <div className=\"rounded-md bg-red-50 p-3\">\n// //                   <p className=\"text-sm text-red-700\">{error}</p>\n// //                 </div>\n// //               )}\n\n// //               <div>\n// //                 <button\n// //                   type=\"submit\"\n// //                   disabled={loading || !isValid || !dirty}\n// //                   className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n// //                 >\n// //                   {loading ? 'Sending OTP...' : 'Sign Up'}\n// //                 </button>\n// //               </div>\n// //             </Form>\n// //           )}\n// //         </Formik>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default SignupForm;\n\n// import React, { useState, useEffect } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\n// import { authAPI } from '../../services/api';\n\n// const SignupForm = () => {\n//   const [step, setStep] = useState(1); // 1: form, 2: otp, 3: success\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [mobileForOtp, setMobileForOtp] = useState('');\n//   const [otp, setOtp] = useState('');\n//   const [generatedUserId, setGeneratedUserId] = useState('');\n//   const [formData, setFormData] = useState(null);\n//   const navigate = useNavigate();\n\n//   const validationSchema = Yup.object({\n//     name: Yup.string()\n//       .min(2, 'Name must be at least 2 characters')\n//       .max(50, 'Name cannot exceed 50 characters')\n//       .required('Name is required'),\n//     email: Yup.string()\n//       .email('Please enter a valid email address')\n//       .nullable(),\n//     mobileNumber: Yup.string()\n//       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n//       .required('Mobile number is required'),\n//     password: Yup.string()\n//       .min(6, 'Password must be at least 6 characters')\n//       .matches(\n//         /^(?=.*[a-zA-Z])(?=.*\\d).+$/,\n//         'Password must contain at least one letter and one number'\n//       )\n//       .required('Password is required'),\n//     confirmPassword: Yup.string()\n//       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n//       .required('Confirm password is required'),\n//   });\n\n//   // useEffect(() => {\n//   //   window.recaptchaVerifier = new RecaptchaVerifier(\n//   //     'recaptcha-container',\n//   //     { size: 'invisible' },\n//   //     auth\n//   //   );\n\n//   //   return () => {\n//   //     if (window.recaptchaVerifier) {\n//   //       window.recaptchaVerifier.clear();\n//   //     }\n//   //   };\n//   // }, []);\n\n//   // const sendOtp = async (mobile) => {\n//   //   setLoading(true);\n//   //   setError('');\n//   //   setMessage('');\n\n//   //   try {\n//   //     const phoneNumber = `+91${mobile}`;\n//   //     const confirmationResult = await signInWithPhoneNumber(\n//   //       auth,\n//   //       phoneNumber,\n//   //       window.recaptchaVerifier\n//   //     );\n\n//   //     window.confirmationResult = confirmationResult;\n//   //     setMessage('OTP sent to your mobile number.');\n//   //     setMobileForOtp(mobile);\n//   //     setStep(2);\n//   //   } catch (err) {\n//   //     setError(err.message || 'Failed to send OTP. Please try again.');\n//   //   } finally {\n//   //     setLoading(false);\n//   //   }\n//   // };\n\n//   useEffect(() => {\n//   if (!window.recaptchaVerifier) {\n//     window.recaptchaVerifier = new RecaptchaVerifier(\n//       'recaptcha-container',\n//       { size: 'invisible' },\n//       auth\n//     );\n//     window.recaptchaVerifier.render();\n//   }\n// }, []);\n\n// const sendOtp = async (mobile) => {\n//   setLoading(true);\n//   setError('');\n//   setMessage('');\n\n//   try {\n//     const phoneNumber = `+91${mobile}`;\n//     const confirmationResult = await signInWithPhoneNumber(\n//       auth,\n//       phoneNumber,\n//       window.recaptchaVerifier\n//     );\n\n//     window.confirmationResult = confirmationResult;\n//     setMessage('OTP sent to your mobile number.');\n//     setMobileForOtp(mobile);\n//     setStep(2);\n//   } catch (err) {\n//     console.error(\"OTP Error:\", err);\n//     if (err.code === \"auth/invalid-app-credential\") {\n//       setError(\"Firebase config invalid है। कृपया .env values check करो।\");\n//     } else if (err.code === \"auth/missing-phone-number\") {\n//       setError(\"Phone number सही format में दो (+91XXXXXXXXXX).\");\n//     } else {\n//       setError(err.message || 'Failed to send OTP. Please try again.');\n//     }\n//   } finally {\n//     setLoading(false);\n//   }\n// };\n\n//   const generateUserId = async (mobileNumber) => {\n//     try {\n//       const response = await authAPI.generateUserId({ mobileNumber });\n//       if (response.success) {\n//         return response.userId; // Format: user1, user2, ..., user100\n//       }\n//       throw new Error(response.message || 'Failed to generate user ID');\n//     } catch (err) {\n//       throw err;\n//     }\n//   };\n\n//   const verifyOtp = async () => {\n//     setLoading(true);\n//     setError('');\n\n//     try {\n//       await window.confirmationResult.confirm(otp);\n\n//       // Generate user ID after OTP verification\n//       const userId = await generateUserId(mobileForOtp);\n//       setGeneratedUserId(userId);\n\n//       // Complete signup with all form data\n//       const response = await authAPI.completeSignup({\n//         ...formData,\n//         userId\n//       });\n\n//       if (response.success) {\n//         setMessage('Account created successfully!');\n//         setStep(3);\n//       } else {\n//         throw new Error(response.message || 'Signup failed');\n//       }\n//     } catch (err) {\n//       setError(err.message || 'Invalid OTP. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleFormSubmit = async (values) => {\n//     setFormData(values); // Store form data for later use\n//     await sendOtp(values.mobileNumber);\n//   };\n\n//   // Step 3: Success screen with generated user ID\n//   if (step === 3) {\n//     return (\n//       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//         <div className=\"max-w-md w-full space-y-8\">\n//           <div className=\"text-center\">\n//             <h2 className=\"text-3xl font-extrabold text-gray-900\">Registration Complete</h2>\n//             <p className=\"mt-4 text-lg\">\n//               Your User ID: <span className=\"font-bold\">{generatedUserId}</span>\n//             </p>\n//             <p className=\"mt-2 text-sm text-gray-600\">\n//               Please note this ID carefully as you'll need it to login.\n//             </p>\n//           </div>\n\n//           <div className=\"mt-6\">\n//             <button\n//               onClick={() => navigate('/login')}\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n//             >\n//               Proceed to Login\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   // Step 2: OTP Verification\n//   if (step === 2) {\n//     return (\n//       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n//         <div className=\"max-w-md w-full space-y-8\">\n//           <div className=\"text-center\">\n//             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n//             <p className=\"mt-2 text-sm text-gray-600\">\n//               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n//             </p>\n//           </div>\n\n//           {message && (\n//             <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n//               {message}\n//             </div>\n//           )}\n\n//           {error && (\n//             <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n//               {error}\n//             </div>\n//           )}\n\n//           <div className=\"space-y-4\">\n//             <div>\n//               <input\n//                 type=\"text\"\n//                 value={otp}\n//                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n//                 placeholder=\"Enter 6-digit OTP\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\n//                 inputMode=\"numeric\"\n//                 autoFocus\n//               />\n//             </div>\n\n//             <button\n//               onClick={verifyOtp}\n//               disabled={loading || otp.length !== 6}\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n//             >\n//               {loading ? 'Verifying...' : 'Verify OTP'}\n//             </button>\n\n//             <button\n//               onClick={() => sendOtp(mobileForOtp)}\n//               disabled={loading}\n//               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\n//             >\n//               Resend OTP\n//             </button>\n\n//             <button \n//               onClick={() => {\n//                 setStep(1);\n//                 setError('');\n//                 setMessage('');\n//               }}\n//               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\n//             >\n//               ← Back to Signup\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   // Step 1: Registration Form\n//   return (\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n//       <div className=\"max-w-md w-full space-y-8\">\n//         <div className=\"text-center\">\n//           <h2 className=\"text-3xl font-extrabold text-gray-900\">\n//             Create your account\n//           </h2>\n//           <p className=\"mt-2 text-sm text-gray-600\">\n//             Or{' '}\n//             <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n//               sign in to your account\n//             </Link>\n//           </p>\n//         </div>\n\n//         <Formik\n//           initialValues={{\n//             name: '',\n//             email: '',\n//             mobileNumber: '',\n//             password: '',\n//             confirmPassword: ''\n//           }}\n//           validationSchema={validationSchema}\n//           onSubmit={handleFormSubmit}\n//         >\n//           {({ isSubmitting, isValid, dirty }) => (\n//             <Form className=\"mt-8 space-y-6\">\n//               <div className=\"space-y-4\">\n//                 <div>\n//                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n//                     Full Name\n//                   </label>\n//                   <Field \n//                     id=\"name\" \n//                     name=\"name\" \n//                     type=\"text\" \n//                     autoComplete=\"name\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"Your full name\"\n//                   />\n//                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n\n//                 <div>\n//                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n//                     Email (optional)\n//                   </label>\n//                   <Field \n//                     id=\"email\" \n//                     name=\"email\" \n//                     type=\"email\" \n//                     autoComplete=\"email\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"your.email@example.com\"\n//                   />\n//                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n\n//                 <div>\n//                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\n//                     Mobile Number\n//                   </label>\n//                   <div className=\"mt-1 flex rounded-md shadow-sm\">\n//                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n//                       +91\n//                     </span>\n//                     <Field \n//                       id=\"mobileNumber\" \n//                       name=\"mobileNumber\" \n//                       type=\"tel\" \n//                       autoComplete=\"tel\" \n//                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                       placeholder=\"9876543210\"\n//                       maxLength=\"10\"\n//                     />\n//                   </div>\n//                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n\n//                 <div>\n//                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n//                     Password\n//                   </label>\n//                   <Field \n//                     id=\"password\" \n//                     name=\"password\" \n//                     type=\"password\" \n//                     autoComplete=\"new-password\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"At least 6 characters with letters and numbers\"\n//                   />\n//                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n\n//                 <div>\n//                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n//                     Confirm Password\n//                   </label>\n//                   <Field \n//                     id=\"confirmPassword\" \n//                     name=\"confirmPassword\" \n//                     type=\"password\" \n//                     autoComplete=\"new-password\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"Confirm your password\"\n//                   />\n//                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n//               </div>\n\n//               {error && (\n//                 <div className=\"rounded-md bg-red-50 p-3\">\n//                   <p className=\"text-sm text-red-700\">{error}</p>\n//                 </div>\n//               )}\n\n//               <div>\n//                 <button\n//                   type=\"submit\"\n//                   disabled={loading || !isValid || !dirty}\n//                   className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n//                 >\n//                   {loading ? 'Sending OTP...' : 'Sign Up'}\n//                 </button>\n//               </div>\n//             </Form>\n//           )}\n//         </Formik>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SignupForm;\n\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\nimport { authAPI } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupForm = () => {\n  _s();\n  const [step, setStep] = useState(1); // 1: form, 2: otp, 3: success\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [mobileForOtp, setMobileForOtp] = useState('');\n  const [otp, setOtp] = useState('');\n  const [generatedUserId, setGeneratedUserId] = useState('');\n  const [formData, setFormData] = useState(null);\n  const navigate = useNavigate();\n\n  // ✅ Validation\n  const validationSchema = Yup.object({\n    name: Yup.string().min(2, 'Name must be at least 2 characters').max(50, 'Name cannot exceed 50 characters').required('Name is required'),\n    email: Yup.string().email('Please enter a valid email address').nullable(),\n    mobileNumber: Yup.string().matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number').required('Mobile number is required'),\n    password: Yup.string().min(6, 'Password must be at least 6 characters').matches(/^(?=.*[a-zA-Z])(?=.*\\d).+$/, 'Password must contain at least one letter and one number').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm password is required')\n  });\n\n  // ✅ Setup Recaptcha once\n  useEffect(() => {\n    if (!window.recaptchaVerifier) {\n      window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n        size: 'invisible'\n      }, auth);\n    }\n  }, []);\n\n  // ✅ Send OTP\n  const sendOtp = async mobile => {\n    setLoading(true);\n    setError('');\n    setMessage('');\n    try {\n      const phoneNumber = `+91${mobile}`;\n      const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, window.recaptchaVerifier);\n      window.confirmationResult = confirmationResult;\n      setMessage('OTP sent to your mobile number.');\n      setMobileForOtp(mobile);\n      setStep(2);\n    } catch (err) {\n      console.error(\"OTP Error:\", err);\n      if (err.code === \"auth/invalid-app-credential\") {\n        setError(\"Firebase config invalid है। .env values और storageBucket check करो।\");\n      } else if (err.code === \"auth/missing-phone-number\") {\n        setError(\"Phone number सही format में दो (+91XXXXXXXXXX).\");\n      } else {\n        setError(err.message || 'Failed to send OTP. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ✅ Verify OTP\n  const verifyOtp = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      await window.confirmationResult.confirm(otp);\n\n      // Generate user ID\n      const userId = await generateUserId(mobileForOtp);\n      setGeneratedUserId(userId);\n\n      // Complete signup\n      const response = await authAPI.completeSignup({\n        ...formData,\n        userId\n      });\n      if (response.success) {\n        setMessage('Account created successfully!');\n        setStep(3);\n      } else {\n        throw new Error(response.message || 'Signup failed');\n      }\n    } catch (err) {\n      setError(err.message || 'Invalid OTP. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ✅ Generate User ID\n  const generateUserId = async mobileNumber => {\n    try {\n      const response = await authAPI.generateUserId({\n        mobileNumber\n      });\n      if (response.success) return response.userId;\n      throw new Error(response.message || 'Failed to generate user ID');\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  // ✅ Handle Signup Submit\n  const handleFormSubmit = async values => {\n    setFormData(values);\n    await sendOtp(values.mobileNumber);\n  };\n\n  // ==================== SCREENS ====================\n\n  // Step 3: Success\n  if (step === 3) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md w-full space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl font-extrabold text-gray-900\",\n            children: \"Registration Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1854,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-lg\",\n            children: [\"Your User ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: generatedUserId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1856,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1855,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-gray-600\",\n            children: \"Please note this ID carefully as you'll need it to login.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1858,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1853,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/login'),\n            className: \"w-full py-2 px-4 rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\",\n            children: \"Proceed to Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1863,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1862,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1852,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1851,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Step 2: OTP Verification\n  if (step === 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recaptcha-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1879,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md w-full space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl font-extrabold text-gray-900\",\n            children: \"Verify OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1882,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-gray-600\",\n            children: [\"Enter the 6-digit OTP sent to +91 \", mobileForOtp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1883,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1881,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 bg-green-50 text-green-700 rounded-md text-sm\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1888,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 bg-red-50 text-red-700 rounded-md text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1889,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: otp,\n            onChange: e => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6)),\n            placeholder: \"Enter 6-digit OTP\",\n            className: \"w-full px-3 py-2 border rounded-md text-center text-lg tracking-widest\",\n            inputMode: \"numeric\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1892,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: verifyOtp,\n            disabled: loading || otp.length !== 6,\n            className: \"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\",\n            children: loading ? 'Verifying...' : 'Verify OTP'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1901,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendOtp(mobileForOtp),\n            disabled: loading,\n            className: \"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 text-sm\",\n            children: \"Resend OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1908,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setStep(1);\n              setError('');\n              setMessage('');\n            },\n            className: \"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\",\n            children: \"\\u2190 Back to Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1915,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1891,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1880,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1878,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Step 1: Registration Form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1930,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-extrabold text-gray-900\",\n          children: \"Create your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1933,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-gray-600\",\n          children: [\"Or\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"font-medium text-indigo-600 hover:text-indigo-500\",\n            children: \"sign in to your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1936,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1934,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1932,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          name: '',\n          email: '',\n          mobileNumber: '',\n          password: '',\n          confirmPassword: ''\n        },\n        validationSchema: validationSchema,\n        onSubmit: handleFormSubmit,\n        children: ({\n          isValid,\n          dirty\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"mt-8 space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1952,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"name\",\n                type: \"text\",\n                placeholder: \"Your full name\",\n                className: \"mt-1 block w-full px-3 py-2 border rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1953,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"name\",\n                component: \"div\",\n                className: \"text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1955,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1951,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium\",\n                children: \"Email (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1960,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"email\",\n                type: \"email\",\n                placeholder: \"your.email@example.com\",\n                className: \"mt-1 block w-full px-3 py-2 border rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1961,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                component: \"div\",\n                className: \"text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1963,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1959,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium\",\n                children: \"Mobile Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1968,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex mt-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"px-3 py-2 border bg-gray-50 text-gray-500\",\n                  children: \"+91\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1970,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"mobileNumber\",\n                  type: \"tel\",\n                  maxLength: \"10\",\n                  placeholder: \"9876543210\",\n                  className: \"flex-1 px-3 py-2 border rounded-r-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1971,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1969,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"mobileNumber\",\n                component: \"div\",\n                className: \"text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1974,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1967,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1979,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"password\",\n                type: \"password\",\n                placeholder: \"At least 6 characters\",\n                className: \"mt-1 block w-full px-3 py-2 border rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1980,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                component: \"div\",\n                className: \"text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1982,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1978,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1987,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"confirmPassword\",\n                type: \"password\",\n                placeholder: \"Confirm your password\",\n                className: \"mt-1 block w-full px-3 py-2 border rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1988,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"confirmPassword\",\n                component: \"div\",\n                className: \"text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1990,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1986,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1949,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-50 p-3 text-sm text-red-700 rounded-md\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1994,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading || !isValid || !dirty,\n            className: \"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\",\n            children: loading ? 'Sending OTP...' : 'Sign Up'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1996,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1948,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1942,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1931,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1929,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupForm, \"lu8TRVGCtUlnhZoe60F4Jl2HHo8=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","useEffect","Formik","Form","Field","ErrorMessage","Yup","Link","useNavigate","auth","RecaptchaVerifier","signInWithPhoneNumber","authAPI","jsxDEV","_jsxDEV","SignupForm","_s","step","setStep","loading","setLoading","error","setError","message","setMessage","mobileForOtp","setMobileForOtp","otp","setOtp","generatedUserId","setGeneratedUserId","formData","setFormData","navigate","validationSchema","object","name","string","min","max","required","email","nullable","mobileNumber","matches","password","confirmPassword","oneOf","ref","window","recaptchaVerifier","size","sendOtp","mobile","phoneNumber","confirmationResult","err","console","code","verifyOtp","confirm","userId","generateUserId","response","completeSignup","success","Error","handleFormSubmit","values","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","type","value","onChange","e","target","replace","slice","placeholder","inputMode","autoFocus","disabled","length","to","initialValues","onSubmit","isValid","dirty","component","maxLength","_c","$RefreshReg$"],"sources":["C:/Users/moazz/Desktop/frontend/src/components/auth/SignupForm.js"],"sourcesContent":["// // // // // import React, { useState } from 'react';\r\n// // // // // import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// // // // // import * as Yup from 'yup';\r\n\r\n// // // // // import { authAPI } from '../../services/api';\r\n// // // // // import { API_URL } from '../../config';\r\n\r\n// // // // // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\r\n// // // // //   const [isLoading, setIsLoading] = useState(false);\r\n// // // // //   const [error, setError] = useState('');\r\n// // // // //   const [userIds, setUserIds] = useState([]);\r\n// // // // //   const [showDashboard, setShowDashboard] = useState(false);\r\n// // // // //   const [step, setStep] = useState(1); // 1: form, 2: otp\r\n// // // // //   const [mobileForOtp, setMobileForOtp] = useState('');\r\n// // // // //   const [otp, setOtp] = useState('');\r\n// // // // //   const [otpError, setOtpError] = useState('');\r\n// // // // //   const [otpMessage, setOtpMessage] = useState('');\r\n// // // // //   const [isOtpLoading, setIsOtpLoading] = useState(false);\r\n\r\n// // // // //   const validationSchema = Yup.object({\r\n// // // // //     name: Yup.string().min(2, 'Name must be at least 2 characters').max(50, 'Name cannot exceed 50 characters').required('Name is required'),\r\n// // // // //     email: Yup.string().email('Please enter a valid email address').nullable(),\r\n// // // // //     mobileNumber: Yup.string().matches(/^[0-9]{10,15}$/, 'Please enter a valid mobile number').required('Mobile number is required'),\r\n// // // // //     password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\r\n// // // // //     confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm password is required'),\r\n// // // // //   });\r\n\r\n// // // // //   const sendOtp = async (mobile) => {\r\n// // // // //     setIsOtpLoading(true);\r\n// // // // //     setOtpError('');\r\n// // // // //     setOtpMessage('');\r\n// // // // //     try {\r\n// // // // //       // Using fetch with API_URL from config\r\n// // // // //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/send-otp`, {\r\n// // // // //         method: 'POST',\r\n// // // // //         headers: {\r\n// // // // //           'Content-Type': 'application/json',\r\n// // // // //         },\r\n// // // // //         body: JSON.stringify({ mobile }),\r\n// // // // //       });\r\n// // // // //       const data = await response.json();\r\n// // // // //       if (!response.ok) {\r\n// // // // //         throw new Error(data.error || 'Failed to send OTP');\r\n// // // // //       }\r\n// // // // //       setOtpMessage('OTP sent to your mobile number.');\r\n// // // // //     } catch (err) {\r\n// // // // //       setOtpError(err.message || 'Failed to send OTP');\r\n// // // // //     } finally {\r\n// // // // //       setIsOtpLoading(false);\r\n// // // // //     }\r\n// // // // //   };\r\n\r\n// // // // //   const handleSubmit = async (values, { setSubmitting }) => {\r\n// // // // //     setError('');\r\n// // // // //     setUserIds([]);\r\n// // // // //     setShowDashboard(false);\r\n// // // // //     setMobileForOtp(values.mobileNumber);\r\n// // // // //     setStep(2);\r\n// // // // //     await sendOtp(values.mobileNumber);\r\n// // // // //     setSubmitting(false);\r\n// // // // //   };\r\n\r\n// // // // //   const handleVerifyOtp = async () => {\r\n// // // // //     setIsOtpLoading(true);\r\n// // // // //     setOtpError('');\r\n// // // // //     setOtpMessage('');\r\n// // // // //     try {\r\n// // // // //       // Using fetch with API_URL from config for OTP verification\r\n// // // // //       const verifyResponse = await fetch(`${API_URL.replace('/api', '')}/auth/verify-otp`, {\r\n// // // // //         method: 'POST',\r\n// // // // //         headers: {\r\n// // // // //           'Content-Type': 'application/json',\r\n// // // // //         },\r\n// // // // //         body: JSON.stringify({ mobile: mobileForOtp, otp }),\r\n// // // // //       });\r\n      \r\n// // // // //       const verifyData = await verifyResponse.json();\r\n// // // // //       if (!verifyResponse.ok) {\r\n// // // // //         throw new Error(verifyData.error || 'OTP verification failed');\r\n// // // // //       }\r\n      \r\n// // // // //       // Now create the account using authAPI\r\n// // // // //       setIsLoading(true);\r\n// // // // //       try {\r\n// // // // //         const signupData = {\r\n// // // // //           mobileNumber: mobileForOtp,\r\n// // // // //           // You may want to store the rest of the form data in a ref or state for this step\r\n// // // // //           // For demo, just pass mobileNumber\r\n// // // // //         };\r\n        \r\n// // // // //         const response = await authAPI.signup(signupData);\r\n        \r\n// // // // //         if (response.success) {\r\n// // // // //           setUserIds(response.data?.allUserIds || []);\r\n// // // // //           setShowDashboard(true);\r\n// // // // //           onSignupSuccess && onSignupSuccess(response.data);\r\n// // // // //         } else {\r\n// // // // //           setError(response.message || 'Signup failed');\r\n// // // // //           setStep(1);\r\n// // // // //         }\r\n// // // // //       } catch (signupErr) {\r\n// // // // //         setError(signupErr.message || 'Signup failed');\r\n// // // // //         setStep(1);\r\n// // // // //       }\r\n// // // // //     } catch (err) {\r\n// // // // //       setOtpError(err.message || 'OTP verification failed');\r\n// // // // //     } finally {\r\n// // // // //       setIsOtpLoading(false);\r\n// // // // //       setIsLoading(false);\r\n// // // // //     }\r\n// // // // //   };\r\n\r\n// // // // //   if (showDashboard && userIds.length > 0) {\r\n// // // // //     return (\r\n// // // // //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// // // // //         <div className=\"max-w-md w-full space-y-8\">\r\n// // // // //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\r\n// // // // //           <ul className=\"mt-4 mb-6\">\r\n// // // // //             {userIds.map((id) => (\r\n// // // // //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\r\n// // // // //             ))}\r\n// // // // //           </ul>\r\n// // // // //           <button onClick={() => setShowDashboard(false)} className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\">Create another user</button>\r\n// // // // //         </div>\r\n// // // // //       </div>\r\n// // // // //     );\r\n// // // // //   }\r\n\r\n// // // // //   if (step === 2) {\r\n// // // // //     return (\r\n// // // // //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// // // // //         <div className=\"max-w-md w-full space-y-8\">\r\n// // // // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\r\n// // // // //           <p className=\"text-center text-sm text-gray-600\">Enter the OTP sent to your mobile number {mobileForOtp}</p>\r\n// // // // //           <div className=\"space-y-4\">\r\n// // // // //             <input\r\n// // // // //               type=\"text\"\r\n// // // // //               value={otp}\r\n// // // // //               onChange={e => setOtp(e.target.value)}\r\n// // // // //               placeholder=\"Enter OTP\"\r\n// // // // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n// // // // //             />\r\n// // // // //             <button\r\n// // // // //               onClick={handleVerifyOtp}\r\n// // // // //               disabled={isOtpLoading || !otp}\r\n// // // // //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\r\n// // // // //             >\r\n// // // // //               {isOtpLoading ? 'Verifying...' : 'Verify OTP'}\r\n// // // // //             </button>\r\n// // // // //             <button\r\n// // // // //               onClick={() => sendOtp(mobileForOtp)}\r\n// // // // //               disabled={isOtpLoading}\r\n// // // // //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md\"\r\n// // // // //             >\r\n// // // // //               Resend OTP\r\n// // // // //             </button>\r\n// // // // //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\r\n// // // // //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\r\n// // // // //             <button onClick={() => setStep(1)} className=\"w-full py-2 px-4 text-indigo-600\">Back to Signup</button>\r\n// // // // //           </div>\r\n// // // // //         </div>\r\n// // // // //       </div>\r\n// // // // //     );\r\n// // // // //   }\r\n\r\n// // // // //   return (\r\n// // // // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// // // // //       <div className=\"max-w-md w-full space-y-8\">\r\n// // // // //         <div>\r\n// // // // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Create your account</h2>\r\n// // // // //           <p className=\"mt-2 text-center text-sm text-gray-600\">Enter your details to create a user ID under your mobile</p>\r\n// // // // //         </div>\r\n// // // // //         <Formik\r\n// // // // //           initialValues={{ name: '', email: '', mobileNumber: '', password: '', confirmPassword: '' }}\r\n// // // // //           validationSchema={validationSchema}\r\n// // // // //           onSubmit={handleSubmit}\r\n// // // // //         >\r\n// // // // //           {({ isSubmitting }) => (\r\n// // // // //             <Form className=\"mt-8 space-y-6\">\r\n// // // // //               <div className=\"space-y-4\">\r\n// // // // //                 <div>\r\n// // // // //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Name</label>\r\n// // // // //                   <Field id=\"name\" name=\"name\" type=\"text\" autoComplete=\"name\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your name\" />\r\n// // // // //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // // // //                 </div>\r\n// // // // //                 <div>\r\n// // // // //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email (optional)</label>\r\n// // // // //                   <Field id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your email (optional)\" />\r\n// // // // //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // // // //                 </div>\r\n// // // // //                 <div>\r\n// // // // //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">Mobile Number</label>\r\n// // // // //                   <Field id=\"mobileNumber\" name=\"mobileNumber\" type=\"tel\" autoComplete=\"tel\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your mobile number\" />\r\n// // // // //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // // // //                 </div>\r\n// // // // //                 <div>\r\n// // // // //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\r\n// // // // //                   <Field id=\"password\" name=\"password\" type=\"password\" autoComplete=\"new-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your password\" />\r\n// // // // //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // // // //                 </div>\r\n// // // // //                 <div>\r\n// // // // //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">Confirm Password</label>\r\n// // // // //                   <Field id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" autoComplete=\"new-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Confirm your password\" />\r\n// // // // //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // // // //                 </div>\r\n// // // // //               </div>\r\n// // // // //               {error && (\r\n// // // // //                 <div className=\"rounded-md bg-red-50 p-4\">\r\n// // // // //                   <div className=\"flex\">\r\n// // // // //                     <div className=\"ml-3\">\r\n// // // // //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\r\n// // // // //                     </div>\r\n// // // // //                   </div>\r\n// // // // //                 </div>\r\n// // // // //               )}\r\n// // // // //               <div>\r\n// // // // //                 <button type=\"submit\" disabled={isSubmitting || isLoading} className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\">\r\n// // // // //                   {isLoading ? 'Creating account...' : 'Create account'}\r\n// // // // //                 </button>\r\n// // // // //               </div>\r\n// // // // //               <div className=\"text-center\">\r\n// // // // //                 <button type=\"button\" onClick={onSwitchToLogin} className=\"font-medium text-indigo-600 hover:text-indigo-500\">Already have an account? Sign in</button>\r\n// // // // //               </div>\r\n// // // // //             </Form>\r\n// // // // //           )}\r\n// // // // //         </Formik>\r\n// // // // //       </div>\r\n// // // // //     </div>\r\n// // // // //   );\r\n// // // // // };\r\n\r\n// // // // // export default SignupForm;\r\n\r\n\r\n\r\n\r\n// // // // import React, { useState, useEffect } from 'react';\r\n// // // // import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// // // // import * as Yup from 'yup';\r\n// // // // import { authAPI } from '../../services/api';\r\n\r\n\r\n// // // // import { \r\n// // // //   auth, \r\n// // // //   RecaptchaVerifier, \r\n// // // //   signInWithPhoneNumber \r\n// // // // } from '../../firebase';\r\n\r\n// // // // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\r\n// // // //   const [isLoading, setIsLoading] = useState(false);\r\n// // // //   const [error, setError] = useState('');\r\n// // // //   const [userIds, setUserIds] = useState([]);\r\n// // // //   const [showDashboard, setShowDashboard] = useState(false);\r\n// // // //   const [step, setStep] = useState(1); // 1: form, 2: otp\r\n// // // //   const [mobileForOtp, setMobileForOtp] = useState('');\r\n// // // //   const [otp, setOtp] = useState('');\r\n// // // //   const [otpError, setOtpError] = useState('');\r\n// // // //   const [otpMessage, setOtpMessage] = useState('');\r\n// // // //   const [isOtpLoading, setIsOtpLoading] = useState(false);\r\n// // // //   const [formData, setFormData] = useState(null);\r\n\r\n// // // //   const validationSchema = Yup.object({\r\n// // // //     name: Yup.string()\r\n// // // //       .min(2, 'Name must be at least 2 characters')\r\n// // // //       .max(50, 'Name cannot exceed 50 characters')\r\n// // // //       .required('Name is required'),\r\n// // // //     email: Yup.string()\r\n// // // //       .email('Please enter a valid email address')\r\n// // // //       .nullable(),\r\n// // // //     mobileNumber: Yup.string()\r\n// // // //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\r\n// // // //       .required('Mobile number is required'),\r\n// // // //     password: Yup.string()\r\n// // // //       .min(6, 'Password must be at least 6 characters')\r\n// // // //       .required('Password is required'),\r\n// // // //     confirmPassword: Yup.string()\r\n// // // //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n// // // //       .required('Confirm password is required'),\r\n// // // //   });\r\n\r\n// // // //   // Initialize reCAPTCHA\r\n// // // //   useEffect(() => {\r\n// // // //     window.recaptchaVerifier = new RecaptchaVerifier(\r\n// // // //       'recaptcha-container',\r\n// // // //       {\r\n// // // //         size: 'invisible',\r\n// // // //         callback: () => {\r\n// // // //           // This will be called when reCAPTCHA is solved\r\n// // // //         },\r\n// // // //       },\r\n// // // //       auth\r\n// // // //     );\r\n\r\n// // // //     return () => {\r\n// // // //       if (window.recaptchaVerifier) {\r\n// // // //         window.recaptchaVerifier.clear();\r\n// // // //       }\r\n// // // //     };\r\n// // // //   }, []);\r\n\r\n// // // //   const sendOtp = async (mobile) => {\r\n// // // //     setIsOtpLoading(true);\r\n// // // //     setOtpError('');\r\n// // // //     setOtpMessage('');\r\n    \r\n// // // //     try {\r\n// // // //       const phoneNumber = `+91${mobile}`; // Adjust country code as needed\r\n// // // //       const confirmationResult = await auth().signInWithPhoneNumber(\r\n// // // //         phoneNumber,\r\n// // // //         window.recaptchaVerifier\r\n// // // //       );\r\n      \r\n// // // //       window.confirmationResult = confirmationResult;\r\n// // // //       setOtpMessage('OTP sent to your mobile number.');\r\n// // // //     } catch (err) {\r\n// // // //       console.error('OTP Error:', err);\r\n// // // //       setOtpError(err.message || 'Failed to send OTP. Please try again.');\r\n// // // //     } finally {\r\n// // // //       setIsOtpLoading(false);\r\n// // // //     }\r\n// // // //   };\r\n\r\n// // // //   const handleSubmit = async (values, { setSubmitting }) => {\r\n// // // //     setError('');\r\n// // // //     setFormData(values);\r\n// // // //     setMobileForOtp(values.mobileNumber);\r\n// // // //     await sendOtp(values.mobileNumber);\r\n// // // //     setStep(2);\r\n// // // //     setSubmitting(false);\r\n// // // //   };\r\n\r\n// // // //   const handleVerifyOtp = async () => {\r\n// // // //     setIsOtpLoading(true);\r\n// // // //     setOtpError('');\r\n// // // //     setOtpMessage('');\r\n    \r\n// // // //     try {\r\n// // // //       // Verify OTP with Firebase\r\n// // // //       await window.confirmationResult.confirm(otp);\r\n      \r\n// // // //       // OTP verified - proceed with account creation\r\n// // // //       setIsLoading(true);\r\n// // // //       try {\r\n// // // //         const response = await authAPI.signup({\r\n// // // //           name: formData.name,\r\n// // // //           email: formData.email,\r\n// // // //           mobileNumber: formData.mobileNumber,\r\n// // // //           password: formData.password,\r\n// // // //         });\r\n        \r\n// // // //         if (response.success) {\r\n// // // //           setUserIds(response.data?.allUserIds || []);\r\n// // // //           setShowDashboard(true);\r\n// // // //           onSignupSuccess && onSignupSuccess(response.data);\r\n// // // //         } else {\r\n// // // //           setError(response.message || 'Signup failed');\r\n// // // //           setStep(1);\r\n// // // //         }\r\n// // // //       } catch (signupErr) {\r\n// // // //         setError(signupErr.message || 'Signup failed. Please try again.');\r\n// // // //         setStep(1);\r\n// // // //       }\r\n// // // //     } catch (err) {\r\n// // // //       setOtpError(err.message || 'Invalid OTP. Please try again.');\r\n// // // //     } finally {\r\n// // // //       setIsOtpLoading(false);\r\n// // // //       setIsLoading(false);\r\n// // // //     }\r\n// // // //   };\r\n\r\n// // // //   if (showDashboard && userIds.length > 0) {\r\n// // // //     return (\r\n// // // //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// // // //         <div className=\"max-w-md w-full space-y-8\">\r\n// // // //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\r\n// // // //           <ul className=\"mt-4 mb-6\">\r\n// // // //             {userIds.map((id) => (\r\n// // // //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\r\n// // // //             ))}\r\n// // // //           </ul>\r\n// // // //           <button \r\n// // // //             onClick={() => setShowDashboard(false)} \r\n// // // //             className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\r\n// // // //           >\r\n// // // //             Create another user\r\n// // // //           </button>\r\n// // // //         </div>\r\n// // // //       </div>\r\n// // // //     );\r\n// // // //   }\r\n\r\n// // // //   if (step === 2) {\r\n// // // //     return (\r\n// // // //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// // // //         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n// // // //         <div className=\"max-w-md w-full space-y-8\">\r\n// // // //           <div>\r\n// // // //             <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\r\n// // // //             <p className=\"text-center text-sm text-gray-600\">\r\n// // // //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\r\n// // // //             </p>\r\n// // // //           </div>\r\n          \r\n// // // //           <div className=\"space-y-4\">\r\n// // // //             <div>\r\n// // // //               <input\r\n// // // //                 type=\"text\"\r\n// // // //                 value={otp}\r\n// // // //                 onChange={(e) => setOtp(e.target.value)}\r\n// // // //                 placeholder=\"Enter OTP\"\r\n// // // //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n// // // //                 maxLength=\"6\"\r\n// // // //               />\r\n// // // //             </div>\r\n            \r\n// // // //             <button\r\n// // // //               onClick={handleVerifyOtp}\r\n// // // //               disabled={isOtpLoading || otp.length !== 6}\r\n// // // //               className={`w-full py-2 px-4 rounded-md text-white ${isOtpLoading || otp.length !== 6 ? 'bg-indigo-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'} transition-colors`}\r\n// // // //             >\r\n// // // //               {isOtpLoading ? (\r\n// // // //                 <span className=\"flex items-center justify-center\">\r\n// // // //                   <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n// // // //                     <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n// // // //                     <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n// // // //                   </svg>\r\n// // // //                   Verifying...\r\n// // // //                 </span>\r\n// // // //               ) : 'Verify OTP'}\r\n// // // //             </button>\r\n            \r\n// // // //             <button\r\n// // // //               onClick={() => sendOtp(mobileForOtp)}\r\n// // // //               disabled={isOtpLoading}\r\n// // // //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors disabled:opacity-50\"\r\n// // // //             >\r\n// // // //               Resend OTP\r\n// // // //             </button>\r\n            \r\n// // // //             {otpMessage && (\r\n// // // //               <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\r\n// // // //                 {otpMessage}\r\n// // // //               </div>\r\n// // // //             )}\r\n            \r\n// // // //             {otpError && (\r\n// // // //               <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\r\n// // // //                 {otpError}\r\n// // // //               </div>\r\n// // // //             )}\r\n            \r\n// // // //             <button \r\n// // // //               onClick={() => setStep(1)}\r\n// // // //               className=\"w-full py-2 px-4 text-indigo-600 hover:text-indigo-800 transition-colors\"\r\n// // // //             >\r\n// // // //               Back to Signup\r\n// // // //             </button>\r\n// // // //           </div>\r\n// // // //         </div>\r\n// // // //       </div>\r\n// // // //     );\r\n// // // //   }\r\n\r\n// // // //   return (\r\n// // // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// // // //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n// // // //       <div className=\"max-w-md w-full space-y-8\">\r\n// // // //         <div>\r\n// // // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n// // // //             Create your account\r\n// // // //           </h2>\r\n// // // //           <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n// // // //             Enter your details to create a user ID under your mobile\r\n// // // //           </p>\r\n// // // //         </div>\r\n        \r\n// // // //         <Formik\r\n// // // //           initialValues={{\r\n// // // //             name: '',\r\n// // // //             email: '',\r\n// // // //             mobileNumber: '',\r\n// // // //             password: '',\r\n// // // //             confirmPassword: ''\r\n// // // //           }}\r\n// // // //           validationSchema={validationSchema}\r\n// // // //           onSubmit={handleSubmit}\r\n// // // //         >\r\n// // // //           {({ isSubmitting, isValid, dirty }) => (\r\n// // // //             <Form className=\"mt-8 space-y-6\">\r\n// // // //               <div className=\"space-y-4\">\r\n// // // //                 <div>\r\n// // // //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n// // // //                     Full Name\r\n// // // //                   </label>\r\n// // // //                   <Field \r\n// // // //                     id=\"name\" \r\n// // // //                     name=\"name\" \r\n// // // //                     type=\"text\" \r\n// // // //                     autoComplete=\"name\" \r\n// // // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// // // //                     placeholder=\"Enter your full name\"\r\n// // // //                   />\r\n// // // //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // // //                 </div>\r\n                \r\n// // // //                 <div>\r\n// // // //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n// // // //                     Email (optional)\r\n// // // //                   </label>\r\n// // // //                   <Field \r\n// // // //                     id=\"email\" \r\n// // // //                     name=\"email\" \r\n// // // //                     type=\"email\" \r\n// // // //                     autoComplete=\"email\" \r\n// // // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// // // //                     placeholder=\"Enter your email\"\r\n// // // //                   />\r\n// // // //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // // //                 </div>\r\n                \r\n// // // //                 <div>\r\n// // // //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\r\n// // // //                     Mobile Number\r\n// // // //                   </label>\r\n// // // //                   <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n// // // //                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 sm:text-sm\">\r\n// // // //                       +91\r\n// // // //                     </span>\r\n// // // //                     <Field \r\n// // // //                       id=\"mobileNumber\" \r\n// // // //                       name=\"mobileNumber\" \r\n// // // //                       type=\"tel\" \r\n// // // //                       autoComplete=\"tel\" \r\n// // // //                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// // // //                       placeholder=\"Enter your 10-digit mobile number\"\r\n// // // //                       maxLength=\"10\"\r\n// // // //                     />\r\n// // // //                   </div>\r\n// // // //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // // //                 </div>\r\n                \r\n// // // //                 <div>\r\n// // // //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n// // // //                     Password\r\n// // // //                   </label>\r\n// // // //                   <Field \r\n// // // //                     id=\"password\" \r\n// // // //                     name=\"password\" \r\n// // // //                     type=\"password\" \r\n// // // //                     autoComplete=\"new-password\" \r\n// // // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// // // //                     placeholder=\"Enter your password\"\r\n// // // //                   />\r\n// // // //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // // //                 </div>\r\n                \r\n// // // //                 <div>\r\n// // // //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n// // // //                     Confirm Password\r\n// // // //                   </label>\r\n// // // //                   <Field \r\n// // // //                     id=\"confirmPassword\" \r\n// // // //                     name=\"confirmPassword\" \r\n// // // //                     type=\"password\" \r\n// // // //                     autoComplete=\"new-password\" \r\n// // // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// // // //                     placeholder=\"Confirm your password\"\r\n// // // //                   />\r\n// // // //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // // //                 </div>\r\n// // // //               </div>\r\n              \r\n// // // //               {error && (\r\n// // // //                 <div className=\"rounded-md bg-red-50 p-4\">\r\n// // // //                   <div className=\"flex\">\r\n// // // //                     <div className=\"ml-3\">\r\n// // // //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\r\n// // // //                     </div>\r\n// // // //                   </div>\r\n// // // //                 </div>\r\n// // // //               )}\r\n              \r\n// // // //               <div>\r\n// // // //                 <button\r\n// // // //                   type=\"submit\"\r\n// // // //                   disabled={isSubmitting || isLoading || !isValid || !dirty}\r\n// // // //                   className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${isSubmitting || isLoading || !isValid || !dirty ? 'bg-indigo-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors`}\r\n// // // //                 >\r\n// // // //                   {isLoading ? (\r\n// // // //                     <span className=\"flex items-center justify-center\">\r\n// // // //                       <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n// // // //                         <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n// // // //                         <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n// // // //                       </svg>\r\n// // // //                       Processing...\r\n// // // //                     </span>\r\n// // // //                   ) : 'Send OTP'}\r\n// // // //                 </button>\r\n// // // //               </div>\r\n              \r\n// // // //               <div className=\"text-center\">\r\n// // // //                 <button\r\n// // // //                   type=\"button\"\r\n// // // //                   onClick={onSwitchToLogin}\r\n// // // //                   className=\"font-medium text-indigo-600 hover:text-indigo-500 transition-colors\"\r\n// // // //                 >\r\n// // // //                   Already have an account? Sign in\r\n// // // //                 </button>\r\n// // // //               </div>\r\n// // // //             </Form>\r\n// // // //           )}\r\n// // // //         </Formik>\r\n// // // //       </div>\r\n// // // //     </div>\r\n// // // //   );\r\n// // // // };\r\n\r\n// // // // export default SignupForm;\r\n\r\n\r\n// // // import React, { useState, useEffect, useRef } from 'react';\r\n// // // import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// // // import * as Yup from 'yup';\r\n// // // import { authAPI } from '../../services/api';\r\n// // // import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\r\n\r\n// // // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\r\n// // //   // State management\r\n// // //   const [step, setStep] = useState(1); // 1: form, 2: otp\r\n// // //   const [loading, setLoading] = useState({\r\n// // //     form: false,\r\n// // //     otp: false,\r\n// // //     resend: false\r\n// // //   });\r\n// // //   const [error, setError] = useState('');\r\n// // //   const [message, setMessage] = useState('');\r\n// // //   const [formData, setFormData] = useState(null);\r\n// // //   const [mobileForOtp, setMobileForOtp] = useState('');\r\n// // //   const [otp, setOtp] = useState('');\r\n// // //   const recaptchaVerifier = useRef(null);\r\n\r\n// // //   // Form validation schema\r\n// // //   const validationSchema = Yup.object({\r\n// // //     name: Yup.string()\r\n// // //       .min(2, 'Name must be at least 2 characters')\r\n// // //       .max(50, 'Name cannot exceed 50 characters')\r\n// // //       .required('Name is required'),\r\n// // //     email: Yup.string()\r\n// // //       .email('Please enter a valid email address')\r\n// // //       .nullable(),\r\n// // //     mobileNumber: Yup.string()\r\n// // //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\r\n// // //       .required('Mobile number is required'),\r\n// // //     password: Yup.string()\r\n// // //       .min(8, 'Password must be at least 8 characters')\r\n// // //       .matches(\r\n// // //         /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\r\n// // //         'Password must contain at least one uppercase, one lowercase, one number and one special character'\r\n// // //       )\r\n// // //       .required('Password is required'),\r\n// // //     confirmPassword: Yup.string()\r\n// // //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n// // //       .required('Confirm password is required'),\r\n// // //   });\r\n\r\n// // //   // Initialize reCAPTCHA\r\n// // //   useEffect(() => {\r\n// // //     recaptchaVerifier.current = new RecaptchaVerifier(\r\n// // //       'recaptcha-container',\r\n// // //       {\r\n// // //         size: 'invisible',\r\n// // //         callback: () => {\r\n// // //           // This will be called when reCAPTCHA is solved\r\n// // //         },\r\n// // //       },\r\n// // //       auth\r\n// // //     );\r\n\r\n// // //     return () => {\r\n// // //       if (recaptchaVerifier.current) {\r\n// // //         recaptchaVerifier.current.clear();\r\n// // //       }\r\n// // //     };\r\n// // //   }, []);\r\n\r\n// // //   const sendOtp = async (mobile) => {\r\n// // //     setLoading(prev => ({ ...prev, form: true }));\r\n// // //     setError('');\r\n// // //     setMessage('');\r\n    \r\n// // //     try {\r\n// // //       const phoneNumber = `+91${mobile}`;\r\n// // //       const confirmationResult = await signInWithPhoneNumber(\r\n// // //         auth,\r\n// // //         phoneNumber,\r\n// // //         recaptchaVerifier.current\r\n// // //       );\r\n      \r\n// // //       window.confirmationResult = confirmationResult;\r\n// // //       setMessage('OTP sent to your mobile number.');\r\n// // //       setMobileForOtp(mobile);\r\n// // //       setStep(2);\r\n// // //     } catch (err) {\r\n// // //       console.error('OTP Error:', err);\r\n// // //       setError(err.message || 'Failed to send OTP. Please try again.');\r\n// // //       // Reset recaptcha on error\r\n// // //       recaptchaVerifier.current.clear();\r\n// // //       recaptchaVerifier.current = new RecaptchaVerifier(\r\n// // //         'recaptcha-container',\r\n// // //         {\r\n// // //           size: 'invisible',\r\n// // //           callback: () => {},\r\n// // //         },\r\n// // //         auth\r\n// // //       );\r\n// // //     } finally {\r\n// // //       setLoading(prev => ({ ...prev, form: false }));\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   const resendOtp = async () => {\r\n// // //     setLoading(prev => ({ ...prev, resend: true }));\r\n// // //     setError('');\r\n    \r\n// // //     try {\r\n// // //       await sendOtp(mobileForOtp);\r\n// // //       setMessage('New OTP sent to your mobile number.');\r\n// // //     } catch (err) {\r\n// // //       setError(err.message || 'Failed to resend OTP. Please try again.');\r\n// // //     } finally {\r\n// // //       setLoading(prev => ({ ...prev, resend: false }));\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   const verifyOtp = async () => {\r\n// // //     setLoading(prev => ({ ...prev, otp: true }));\r\n// // //     setError('');\r\n    \r\n// // //     try {\r\n// // //       // Verify OTP with Firebase\r\n// // //       await window.confirmationResult.confirm(otp);\r\n      \r\n// // //       // OTP verified - proceed with account creation\r\n// // //       try {\r\n// // //         const response = await authAPI.signup({\r\n// // //           name: formData.name,\r\n// // //           email: formData.email,\r\n// // //           mobileNumber: formData.mobileNumber,\r\n// // //           password: formData.password,\r\n// // //         });\r\n        \r\n// // //         if (response.success) {\r\n// // //           onSignupSuccess?.(response.data);\r\n// // //         } else {\r\n// // //           throw new Error(response.message || 'Signup failed');\r\n// // //         }\r\n// // //       } catch (signupErr) {\r\n// // //         throw new Error(signupErr.message || 'Signup failed. Please try again.');\r\n// // //       }\r\n// // //     } catch (err) {\r\n// // //       setError(err.message || 'Invalid OTP. Please try again.');\r\n// // //     } finally {\r\n// // //       setLoading(prev => ({ ...prev, otp: false }));\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   const handleFormSubmit = async (values, { setSubmitting }) => {\r\n// // //     setFormData(values);\r\n// // //     await sendOtp(values.mobileNumber);\r\n// // //     setSubmitting(false);\r\n// // //   };\r\n\r\n// // //   // OTP Verification Step\r\n// // //   if (step === 2) {\r\n// // //     return (\r\n// // //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// // //         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n// // //         <div className=\"max-w-md w-full space-y-8\">\r\n// // //           <div className=\"text-center\">\r\n// // //             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\r\n// // //             <p className=\"mt-2 text-sm text-gray-600\">\r\n// // //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\r\n// // //             </p>\r\n// // //           </div>\r\n          \r\n// // //           <div className=\"space-y-4\">\r\n// // //             <div>\r\n// // //               <input\r\n// // //                 type=\"text\"\r\n// // //                 value={otp}\r\n// // //                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\r\n// // //                 placeholder=\"Enter 6-digit OTP\"\r\n// // //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\r\n// // //                 inputMode=\"numeric\"\r\n// // //                 autoFocus\r\n// // //               />\r\n// // //             </div>\r\n            \r\n// // //             <button\r\n// // //               onClick={verifyOtp}\r\n// // //               disabled={loading.otp || otp.length !== 6}\r\n// // //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n// // //             >\r\n// // //               {loading.otp ? (\r\n// // //                 <>\r\n// // //                   <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n// // //                     <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n// // //                     <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n// // //                   </svg>\r\n// // //                   Verifying...\r\n// // //                 </>\r\n// // //               ) : 'Verify OTP'}\r\n// // //             </button>\r\n            \r\n// // //             <button\r\n// // //               onClick={resendOtp}\r\n// // //               disabled={loading.resend}\r\n// // //               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\r\n// // //             >\r\n// // //               {loading.resend ? 'Resending OTP...' : 'Resend OTP'}\r\n// // //             </button>\r\n            \r\n// // //             {message && (\r\n// // //               <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\r\n// // //                 {message}\r\n// // //               </div>\r\n// // //             )}\r\n            \r\n// // //             {error && (\r\n// // //               <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\r\n// // //                 {error}\r\n// // //               </div>\r\n// // //             )}\r\n            \r\n// // //             <button \r\n// // //               onClick={() => {\r\n// // //                 setStep(1);\r\n// // //                 setError('');\r\n// // //                 setMessage('');\r\n// // //               }}\r\n// // //               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\r\n// // //             >\r\n// // //               ← Back to Signup\r\n// // //             </button>\r\n// // //           </div>\r\n// // //         </div>\r\n// // //       </div>\r\n// // //     );\r\n// // //   }\r\n\r\n// // //   // Initial Signup Form\r\n// // //   return (\r\n// // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// // //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n// // //       <div className=\"max-w-md w-full space-y-8\">\r\n// // //         <div className=\"text-center\">\r\n// // //           <h2 className=\"text-3xl font-extrabold text-gray-900\">\r\n// // //             Create your account\r\n// // //           </h2>\r\n// // //           <p className=\"mt-2 text-sm text-gray-600\">\r\n// // //             Enter your details to get started\r\n// // //           </p>\r\n// // //         </div>\r\n        \r\n// // //         <Formik\r\n// // //           initialValues={{\r\n// // //             name: '',\r\n// // //             email: '',\r\n// // //             mobileNumber: '',\r\n// // //             password: '',\r\n// // //             confirmPassword: ''\r\n// // //           }}\r\n// // //           validationSchema={validationSchema}\r\n// // //           onSubmit={handleFormSubmit}\r\n// // //         >\r\n// // //           {({ isSubmitting, isValid, dirty }) => (\r\n// // //             <Form className=\"mt-8 space-y-6\">\r\n// // //               <div className=\"space-y-4\">\r\n// // //                 <div>\r\n// // //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n// // //                     Full Name\r\n// // //                   </label>\r\n// // //                   <Field \r\n// // //                     id=\"name\" \r\n// // //                     name=\"name\" \r\n// // //                     type=\"text\" \r\n// // //                     autoComplete=\"name\" \r\n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// // //                     placeholder=\"Your full name\"\r\n// // //                   />\r\n// // //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // //                 </div>\r\n                \r\n// // //                 <div>\r\n// // //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n// // //                     Email (optional)\r\n// // //                   </label>\r\n// // //                   <Field \r\n// // //                     id=\"email\" \r\n// // //                     name=\"email\" \r\n// // //                     type=\"email\" \r\n// // //                     autoComplete=\"email\" \r\n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// // //                     placeholder=\"your.email@example.com\"\r\n// // //                   />\r\n// // //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // //                 </div>\r\n                \r\n// // //                 <div>\r\n// // //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\r\n// // //                     Mobile Number\r\n// // //                   </label>\r\n// // //                   <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n// // //                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\r\n// // //                       +91\r\n// // //                     </span>\r\n// // //                     <Field \r\n// // //                       id=\"mobileNumber\" \r\n// // //                       name=\"mobileNumber\" \r\n// // //                       type=\"tel\" \r\n// // //                       autoComplete=\"tel\" \r\n// // //                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// // //                       placeholder=\"9876543210\"\r\n// // //                       maxLength=\"10\"\r\n// // //                     />\r\n// // //                   </div>\r\n// // //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // //                 </div>\r\n                \r\n// // //                 <div>\r\n// // //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n// // //                     Password\r\n// // //                   </label>\r\n// // //                   <Field \r\n// // //                     id=\"password\" \r\n// // //                     name=\"password\" \r\n// // //                     type=\"password\" \r\n// // //                     autoComplete=\"new-password\" \r\n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// // //                     placeholder=\"At least 8 characters\"\r\n// // //                   />\r\n// // //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // //                 </div>\r\n                \r\n// // //                 <div>\r\n// // //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n// // //                     Confirm Password\r\n// // //                   </label>\r\n// // //                   <Field \r\n// // //                     id=\"confirmPassword\" \r\n// // //                     name=\"confirmPassword\" \r\n// // //                     type=\"password\" \r\n// // //                     autoComplete=\"new-password\" \r\n// // //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// // //                     placeholder=\"Confirm your password\"\r\n// // //                   />\r\n// // //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // //                 </div>\r\n// // //               </div>\r\n              \r\n// // //               {error && (\r\n// // //                 <div className=\"rounded-md bg-red-50 p-3\">\r\n// // //                   <p className=\"text-sm text-red-700\">{error}</p>\r\n// // //                 </div>\r\n// // //               )}\r\n              \r\n// // //               <div>\r\n// // //                 <button\r\n// // //                   type=\"submit\"\r\n// // //                   disabled={loading.form || !isValid || !dirty}\r\n// // //                   className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n// // //                 >\r\n// // //                   {loading.form ? (\r\n// // //                     <>\r\n// // //                       <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n// // //                         <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n// // //                         <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n// // //                       </svg>\r\n// // //                       Sending OTP...\r\n// // //                     </>\r\n// // //                   ) : 'Send OTP'}\r\n// // //                 </button>\r\n// // //               </div>\r\n              \r\n// // //               <div className=\"text-center text-sm\">\r\n// // //                 <p className=\"text-gray-600\">\r\n// // //                   Already have an account?{' '}\r\n// // //                   <button\r\n// // //                     type=\"button\"\r\n// // //                     onClick={onSwitchToLogin}\r\n// // //                     className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n// // //                   >\r\n// // //                     Sign in\r\n// // //                   </button>\r\n// // //                 </p>\r\n// // //               </div>\r\n// // //             </Form>\r\n// // //           )}\r\n// // //         </Formik>\r\n// // //       </div>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default SignupForm;\r\n\r\n\r\n\r\n// // import React, { useState, useEffect } from 'react';\r\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// // import * as Yup from 'yup';\r\n// // import { Link, useNavigate } from 'react-router-dom';\r\n// // import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\r\n\r\n// // const SignupForm = () => {\r\n// //   const [step, setStep] = useState(1); // 1: form, 2: otp\r\n// //   const [loading, setLoading] = useState(false);\r\n// //   const [error, setError] = useState('');\r\n// //   const [message, setMessage] = useState('');\r\n// //   const [mobileForOtp, setMobileForOtp] = useState('');\r\n// //   const [otp, setOtp] = useState('');\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const validationSchema = Yup.object({\r\n// //     name: Yup.string()\r\n// //       .min(2, 'Name must be at least 2 characters')\r\n// //       .max(50, 'Name cannot exceed 50 characters')\r\n// //       .required('Name is required'),\r\n// //     email: Yup.string()\r\n// //       .email('Please enter a valid email address')\r\n// //       .nullable(),\r\n// //     mobileNumber: Yup.string()\r\n// //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\r\n// //       .required('Mobile number is required'),\r\n// //     password: Yup.string()\r\n// //       .min(8, 'Password must be at least 8 characters')\r\n// //       .matches(\r\n// //         /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\r\n// //         'Password must contain at least one uppercase, one lowercase, one number and one special character'\r\n// //       )\r\n// //       .required('Password is required'),\r\n// //     confirmPassword: Yup.string()\r\n// //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n// //       .required('Confirm password is required'),\r\n// //   });\r\n\r\n// //   useEffect(() => {\r\n// //     window.recaptchaVerifier = new RecaptchaVerifier(\r\n// //       'recaptcha-container',\r\n// //       { size: 'invisible' },\r\n// //       auth\r\n// //     );\r\n\r\n// //     return () => {\r\n// //       if (window.recaptchaVerifier) {\r\n// //         window.recaptchaVerifier.clear();\r\n// //       }\r\n// //     };\r\n// //   }, []);\r\n\r\n// //   const sendOtp = async (mobile) => {\r\n// //     setLoading(true);\r\n// //     setError('');\r\n// //     setMessage('');\r\n    \r\n// //     try {\r\n// //       const phoneNumber = `+91${mobile}`;\r\n// //       const confirmationResult = await signInWithPhoneNumber(\r\n// //         auth,\r\n// //         phoneNumber,\r\n// //         window.recaptchaVerifier\r\n// //       );\r\n      \r\n// //       window.confirmationResult = confirmationResult;\r\n// //       setMessage('OTP sent to your mobile number.');\r\n// //       setMobileForOtp(mobile);\r\n// //       setStep(2);\r\n// //     } catch (err) {\r\n// //       setError(err.message || 'Failed to send OTP. Please try again.');\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   const verifyOtp = async () => {\r\n// //     setLoading(true);\r\n// //     setError('');\r\n    \r\n// //     try {\r\n// //       await window.confirmationResult.confirm(otp);\r\n// //       setMessage('Account created successfully! Redirecting to login...');\r\n// //       setTimeout(() => navigate('/login'), 2000);\r\n// //     } catch (err) {\r\n// //       setError(err.message || 'Invalid OTP. Please try again.');\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleFormSubmit = async (values) => {\r\n// //     await sendOtp(values.mobileNumber);\r\n// //     // You would typically save formData to use after OTP verification\r\n// //   };\r\n\r\n// //   if (step === 2) {\r\n// //     return (\r\n// //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// //         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n// //         <div className=\"max-w-md w-full space-y-8\">\r\n// //           <div className=\"text-center\">\r\n// //             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\r\n// //             <p className=\"mt-2 text-sm text-gray-600\">\r\n// //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\r\n// //             </p>\r\n// //           </div>\r\n          \r\n// //           {message && (\r\n// //             <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\r\n// //               {message}\r\n// //             </div>\r\n// //           )}\r\n\r\n// //           {error && (\r\n// //             <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\r\n// //               {error}\r\n// //             </div>\r\n// //           )}\r\n\r\n// //           <div className=\"space-y-4\">\r\n// //             <div>\r\n// //               <input\r\n// //                 type=\"text\"\r\n// //                 value={otp}\r\n// //                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\r\n// //                 placeholder=\"Enter 6-digit OTP\"\r\n// //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\r\n// //                 inputMode=\"numeric\"\r\n// //                 autoFocus\r\n// //               />\r\n// //             </div>\r\n            \r\n// //             <button\r\n// //               onClick={verifyOtp}\r\n// //               disabled={loading || otp.length !== 6}\r\n// //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n// //             >\r\n// //               {loading ? 'Verifying...' : 'Verify OTP'}\r\n// //             </button>\r\n            \r\n// //             <button\r\n// //               onClick={() => sendOtp(mobileForOtp)}\r\n// //               disabled={loading}\r\n// //               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\r\n// //             >\r\n// //               Resend OTP\r\n// //             </button>\r\n            \r\n// //             <button \r\n// //               onClick={() => {\r\n// //                 setStep(1);\r\n// //                 setError('');\r\n// //                 setMessage('');\r\n// //               }}\r\n// //               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\r\n// //             >\r\n// //               ← Back to Signup\r\n// //             </button>\r\n// //           </div>\r\n// //         </div>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   return (\r\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n// //       <div className=\"max-w-md w-full space-y-8\">\r\n// //         <div className=\"text-center\">\r\n// //           <h2 className=\"text-3xl font-extrabold text-gray-900\">\r\n// //             Create your account\r\n// //           </h2>\r\n// //           <p className=\"mt-2 text-sm text-gray-600\">\r\n// //             Or{' '}\r\n// //             <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n// //               sign in to your account\r\n// //             </Link>\r\n// //           </p>\r\n// //         </div>\r\n        \r\n// //         <Formik\r\n// //           initialValues={{\r\n// //             name: '',\r\n// //             email: '',\r\n// //             mobileNumber: '',\r\n// //             password: '',\r\n// //             confirmPassword: ''\r\n// //           }}\r\n// //           validationSchema={validationSchema}\r\n// //           onSubmit={handleFormSubmit}\r\n// //         >\r\n// //           {({ isSubmitting, isValid, dirty }) => (\r\n// //             <Form className=\"mt-8 space-y-6\">\r\n// //               <div className=\"space-y-4\">\r\n// //                 <div>\r\n// //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                     Full Name\r\n// //                   </label>\r\n// //                   <Field \r\n// //                     id=\"name\" \r\n// //                     name=\"name\" \r\n// //                     type=\"text\" \r\n// //                     autoComplete=\"name\" \r\n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// //                     placeholder=\"Your full name\"\r\n// //                   />\r\n// //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// //                 </div>\r\n                \r\n// //                 <div>\r\n// //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                     Email (optional)\r\n// //                   </label>\r\n// //                   <Field \r\n// //                     id=\"email\" \r\n// //                     name=\"email\" \r\n// //                     type=\"email\" \r\n// //                     autoComplete=\"email\" \r\n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// //                     placeholder=\"your.email@example.com\"\r\n// //                   />\r\n// //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// //                 </div>\r\n                \r\n// //                 <div>\r\n// //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                     Mobile Number\r\n// //                   </label>\r\n// //                   <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n// //                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\r\n// //                       +91\r\n// //                     </span>\r\n// //                     <Field \r\n// //                       id=\"mobileNumber\" \r\n// //                       name=\"mobileNumber\" \r\n// //                       type=\"tel\" \r\n// //                       autoComplete=\"tel\" \r\n// //                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// //                       placeholder=\"9876543210\"\r\n// //                       maxLength=\"10\"\r\n// //                     />\r\n// //                   </div>\r\n// //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// //                 </div>\r\n                \r\n// //                 <div>\r\n// //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                     Password\r\n// //                   </label>\r\n// //                   <Field \r\n// //                     id=\"password\" \r\n// //                     name=\"password\" \r\n// //                     type=\"password\" \r\n// //                     autoComplete=\"new-password\" \r\n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// //                     placeholder=\"At least 6 characters\"\r\n// //                   />\r\n// //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// //                 </div>\r\n                \r\n// //                 <div>\r\n// //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                     Confirm Password\r\n// //                   </label>\r\n// //                   <Field \r\n// //                     id=\"confirmPassword\" \r\n// //                     name=\"confirmPassword\" \r\n// //                     type=\"password\" \r\n// //                     autoComplete=\"new-password\" \r\n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// //                     placeholder=\"Confirm your password\"\r\n// //                   />\r\n// //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// //                 </div>\r\n// //               </div>\r\n              \r\n// //               {error && (\r\n// //                 <div className=\"rounded-md bg-red-50 p-3\">\r\n// //                   <p className=\"text-sm text-red-700\">{error}</p>\r\n// //                 </div>\r\n// //               )}\r\n              \r\n// //               <div>\r\n// //                 <button\r\n// //                   type=\"submit\"\r\n// //                   disabled={loading || !isValid || !dirty}\r\n// //                   className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n// //                 >\r\n// //                   {loading ? 'Sending OTP...' : 'Sign Up'}\r\n// //                 </button>\r\n// //               </div>\r\n// //             </Form>\r\n// //           )}\r\n// //         </Formik>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default SignupForm;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\r\n// import { authAPI } from '../../services/api';\r\n\r\n// const SignupForm = () => {\r\n//   const [step, setStep] = useState(1); // 1: form, 2: otp, 3: success\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const [mobileForOtp, setMobileForOtp] = useState('');\r\n//   const [otp, setOtp] = useState('');\r\n//   const [generatedUserId, setGeneratedUserId] = useState('');\r\n//   const [formData, setFormData] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   const validationSchema = Yup.object({\r\n//     name: Yup.string()\r\n//       .min(2, 'Name must be at least 2 characters')\r\n//       .max(50, 'Name cannot exceed 50 characters')\r\n//       .required('Name is required'),\r\n//     email: Yup.string()\r\n//       .email('Please enter a valid email address')\r\n//       .nullable(),\r\n//     mobileNumber: Yup.string()\r\n//       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\r\n//       .required('Mobile number is required'),\r\n//     password: Yup.string()\r\n//       .min(6, 'Password must be at least 6 characters')\r\n//       .matches(\r\n//         /^(?=.*[a-zA-Z])(?=.*\\d).+$/,\r\n//         'Password must contain at least one letter and one number'\r\n//       )\r\n//       .required('Password is required'),\r\n//     confirmPassword: Yup.string()\r\n//       .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n//       .required('Confirm password is required'),\r\n//   });\r\n\r\n//   // useEffect(() => {\r\n//   //   window.recaptchaVerifier = new RecaptchaVerifier(\r\n//   //     'recaptcha-container',\r\n//   //     { size: 'invisible' },\r\n//   //     auth\r\n//   //   );\r\n\r\n//   //   return () => {\r\n//   //     if (window.recaptchaVerifier) {\r\n//   //       window.recaptchaVerifier.clear();\r\n//   //     }\r\n//   //   };\r\n//   // }, []);\r\n\r\n//   // const sendOtp = async (mobile) => {\r\n//   //   setLoading(true);\r\n//   //   setError('');\r\n//   //   setMessage('');\r\n    \r\n//   //   try {\r\n//   //     const phoneNumber = `+91${mobile}`;\r\n//   //     const confirmationResult = await signInWithPhoneNumber(\r\n//   //       auth,\r\n//   //       phoneNumber,\r\n//   //       window.recaptchaVerifier\r\n//   //     );\r\n      \r\n//   //     window.confirmationResult = confirmationResult;\r\n//   //     setMessage('OTP sent to your mobile number.');\r\n//   //     setMobileForOtp(mobile);\r\n//   //     setStep(2);\r\n//   //   } catch (err) {\r\n//   //     setError(err.message || 'Failed to send OTP. Please try again.');\r\n//   //   } finally {\r\n//   //     setLoading(false);\r\n//   //   }\r\n//   // };\r\n\r\n//   useEffect(() => {\r\n//   if (!window.recaptchaVerifier) {\r\n//     window.recaptchaVerifier = new RecaptchaVerifier(\r\n//       'recaptcha-container',\r\n//       { size: 'invisible' },\r\n//       auth\r\n//     );\r\n//     window.recaptchaVerifier.render();\r\n//   }\r\n// }, []);\r\n\r\n// const sendOtp = async (mobile) => {\r\n//   setLoading(true);\r\n//   setError('');\r\n//   setMessage('');\r\n  \r\n//   try {\r\n//     const phoneNumber = `+91${mobile}`;\r\n//     const confirmationResult = await signInWithPhoneNumber(\r\n//       auth,\r\n//       phoneNumber,\r\n//       window.recaptchaVerifier\r\n//     );\r\n    \r\n//     window.confirmationResult = confirmationResult;\r\n//     setMessage('OTP sent to your mobile number.');\r\n//     setMobileForOtp(mobile);\r\n//     setStep(2);\r\n//   } catch (err) {\r\n//     console.error(\"OTP Error:\", err);\r\n//     if (err.code === \"auth/invalid-app-credential\") {\r\n//       setError(\"Firebase config invalid है। कृपया .env values check करो।\");\r\n//     } else if (err.code === \"auth/missing-phone-number\") {\r\n//       setError(\"Phone number सही format में दो (+91XXXXXXXXXX).\");\r\n//     } else {\r\n//       setError(err.message || 'Failed to send OTP. Please try again.');\r\n//     }\r\n//   } finally {\r\n//     setLoading(false);\r\n//   }\r\n// };\r\n\r\n\r\n//   const generateUserId = async (mobileNumber) => {\r\n//     try {\r\n//       const response = await authAPI.generateUserId({ mobileNumber });\r\n//       if (response.success) {\r\n//         return response.userId; // Format: user1, user2, ..., user100\r\n//       }\r\n//       throw new Error(response.message || 'Failed to generate user ID');\r\n//     } catch (err) {\r\n//       throw err;\r\n//     }\r\n//   };\r\n\r\n//   const verifyOtp = async () => {\r\n//     setLoading(true);\r\n//     setError('');\r\n    \r\n//     try {\r\n//       await window.confirmationResult.confirm(otp);\r\n      \r\n//       // Generate user ID after OTP verification\r\n//       const userId = await generateUserId(mobileForOtp);\r\n//       setGeneratedUserId(userId);\r\n      \r\n//       // Complete signup with all form data\r\n//       const response = await authAPI.completeSignup({\r\n//         ...formData,\r\n//         userId\r\n//       });\r\n      \r\n//       if (response.success) {\r\n//         setMessage('Account created successfully!');\r\n//         setStep(3);\r\n//       } else {\r\n//         throw new Error(response.message || 'Signup failed');\r\n//       }\r\n//     } catch (err) {\r\n//       setError(err.message || 'Invalid OTP. Please try again.');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleFormSubmit = async (values) => {\r\n//     setFormData(values); // Store form data for later use\r\n//     await sendOtp(values.mobileNumber);\r\n//   };\r\n\r\n//   // Step 3: Success screen with generated user ID\r\n//   if (step === 3) {\r\n//     return (\r\n//       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n//         <div className=\"max-w-md w-full space-y-8\">\r\n//           <div className=\"text-center\">\r\n//             <h2 className=\"text-3xl font-extrabold text-gray-900\">Registration Complete</h2>\r\n//             <p className=\"mt-4 text-lg\">\r\n//               Your User ID: <span className=\"font-bold\">{generatedUserId}</span>\r\n//             </p>\r\n//             <p className=\"mt-2 text-sm text-gray-600\">\r\n//               Please note this ID carefully as you'll need it to login.\r\n//             </p>\r\n//           </div>\r\n          \r\n//           <div className=\"mt-6\">\r\n//             <button\r\n//               onClick={() => navigate('/login')}\r\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n//             >\r\n//               Proceed to Login\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Step 2: OTP Verification\r\n//   if (step === 2) {\r\n//     return (\r\n//       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n//         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n//         <div className=\"max-w-md w-full space-y-8\">\r\n//           <div className=\"text-center\">\r\n//             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\r\n//             <p className=\"mt-2 text-sm text-gray-600\">\r\n//               Enter the 6-digit OTP sent to +91 {mobileForOtp}\r\n//             </p>\r\n//           </div>\r\n          \r\n//           {message && (\r\n//             <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\r\n//               {message}\r\n//             </div>\r\n//           )}\r\n\r\n//           {error && (\r\n//             <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\r\n//               {error}\r\n//             </div>\r\n//           )}\r\n\r\n//           <div className=\"space-y-4\">\r\n//             <div>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={otp}\r\n//                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\r\n//                 placeholder=\"Enter 6-digit OTP\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\r\n//                 inputMode=\"numeric\"\r\n//                 autoFocus\r\n//               />\r\n//             </div>\r\n            \r\n//             <button\r\n//               onClick={verifyOtp}\r\n//               disabled={loading || otp.length !== 6}\r\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n//             >\r\n//               {loading ? 'Verifying...' : 'Verify OTP'}\r\n//             </button>\r\n            \r\n//             <button\r\n//               onClick={() => sendOtp(mobileForOtp)}\r\n//               disabled={loading}\r\n//               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\r\n//             >\r\n//               Resend OTP\r\n//             </button>\r\n            \r\n//             <button \r\n//               onClick={() => {\r\n//                 setStep(1);\r\n//                 setError('');\r\n//                 setMessage('');\r\n//               }}\r\n//               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\r\n//             >\r\n//               ← Back to Signup\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Step 1: Registration Form\r\n//   return (\r\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n//       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n//       <div className=\"max-w-md w-full space-y-8\">\r\n//         <div className=\"text-center\">\r\n//           <h2 className=\"text-3xl font-extrabold text-gray-900\">\r\n//             Create your account\r\n//           </h2>\r\n//           <p className=\"mt-2 text-sm text-gray-600\">\r\n//             Or{' '}\r\n//             <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n//               sign in to your account\r\n//             </Link>\r\n//           </p>\r\n//         </div>\r\n        \r\n//         <Formik\r\n//           initialValues={{\r\n//             name: '',\r\n//             email: '',\r\n//             mobileNumber: '',\r\n//             password: '',\r\n//             confirmPassword: ''\r\n//           }}\r\n//           validationSchema={validationSchema}\r\n//           onSubmit={handleFormSubmit}\r\n//         >\r\n//           {({ isSubmitting, isValid, dirty }) => (\r\n//             <Form className=\"mt-8 space-y-6\">\r\n//               <div className=\"space-y-4\">\r\n//                 <div>\r\n//                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n//                     Full Name\r\n//                   </label>\r\n//                   <Field \r\n//                     id=\"name\" \r\n//                     name=\"name\" \r\n//                     type=\"text\" \r\n//                     autoComplete=\"name\" \r\n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                     placeholder=\"Your full name\"\r\n//                   />\r\n//                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n//                 </div>\r\n                \r\n//                 <div>\r\n//                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n//                     Email (optional)\r\n//                   </label>\r\n//                   <Field \r\n//                     id=\"email\" \r\n//                     name=\"email\" \r\n//                     type=\"email\" \r\n//                     autoComplete=\"email\" \r\n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                     placeholder=\"your.email@example.com\"\r\n//                   />\r\n//                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n//                 </div>\r\n                \r\n//                 <div>\r\n//                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\r\n//                     Mobile Number\r\n//                   </label>\r\n//                   <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n//                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\r\n//                       +91\r\n//                     </span>\r\n//                     <Field \r\n//                       id=\"mobileNumber\" \r\n//                       name=\"mobileNumber\" \r\n//                       type=\"tel\" \r\n//                       autoComplete=\"tel\" \r\n//                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                       placeholder=\"9876543210\"\r\n//                       maxLength=\"10\"\r\n//                     />\r\n//                   </div>\r\n//                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n//                 </div>\r\n                \r\n//                 <div>\r\n//                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n//                     Password\r\n//                   </label>\r\n//                   <Field \r\n//                     id=\"password\" \r\n//                     name=\"password\" \r\n//                     type=\"password\" \r\n//                     autoComplete=\"new-password\" \r\n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                     placeholder=\"At least 6 characters with letters and numbers\"\r\n//                   />\r\n//                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n//                 </div>\r\n                \r\n//                 <div>\r\n//                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n//                     Confirm Password\r\n//                   </label>\r\n//                   <Field \r\n//                     id=\"confirmPassword\" \r\n//                     name=\"confirmPassword\" \r\n//                     type=\"password\" \r\n//                     autoComplete=\"new-password\" \r\n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                     placeholder=\"Confirm your password\"\r\n//                   />\r\n//                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               {error && (\r\n//                 <div className=\"rounded-md bg-red-50 p-3\">\r\n//                   <p className=\"text-sm text-red-700\">{error}</p>\r\n//                 </div>\r\n//               )}\r\n              \r\n//               <div>\r\n//                 <button\r\n//                   type=\"submit\"\r\n//                   disabled={loading || !isValid || !dirty}\r\n//                   className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n//                 >\r\n//                   {loading ? 'Sending OTP...' : 'Sign Up'}\r\n//                 </button>\r\n//               </div>\r\n//             </Form>\r\n//           )}\r\n//         </Formik>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SignupForm;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\r\nimport { authAPI } from '../../services/api';\r\n\r\nconst SignupForm = () => {\r\n  const [step, setStep] = useState(1); // 1: form, 2: otp, 3: success\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [mobileForOtp, setMobileForOtp] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [generatedUserId, setGeneratedUserId] = useState('');\r\n  const [formData, setFormData] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // ✅ Validation\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string()\r\n      .min(2, 'Name must be at least 2 characters')\r\n      .max(50, 'Name cannot exceed 50 characters')\r\n      .required('Name is required'),\r\n    email: Yup.string().email('Please enter a valid email address').nullable(),\r\n    mobileNumber: Yup.string()\r\n      .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\r\n      .required('Mobile number is required'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .matches(/^(?=.*[a-zA-Z])(?=.*\\d).+$/, 'Password must contain at least one letter and one number')\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n      .required('Confirm password is required'),\r\n  });\r\n\r\n  // ✅ Setup Recaptcha once\r\n  useEffect(() => {\r\n    if (!window.recaptchaVerifier) {\r\n      window.recaptchaVerifier = new RecaptchaVerifier(\r\n        'recaptcha-container',\r\n        { size: 'invisible' },\r\n        auth\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  // ✅ Send OTP\r\n  const sendOtp = async (mobile) => {\r\n    setLoading(true);\r\n    setError('');\r\n    setMessage('');\r\n\r\n    try {\r\n      const phoneNumber = `+91${mobile}`;\r\n      const confirmationResult = await signInWithPhoneNumber(\r\n        auth,\r\n        phoneNumber,\r\n        window.recaptchaVerifier\r\n      );\r\n\r\n      window.confirmationResult = confirmationResult;\r\n      setMessage('OTP sent to your mobile number.');\r\n      setMobileForOtp(mobile);\r\n      setStep(2);\r\n    } catch (err) {\r\n      console.error(\"OTP Error:\", err);\r\n      if (err.code === \"auth/invalid-app-credential\") {\r\n        setError(\"Firebase config invalid है। .env values और storageBucket check करो।\");\r\n      } else if (err.code === \"auth/missing-phone-number\") {\r\n        setError(\"Phone number सही format में दो (+91XXXXXXXXXX).\");\r\n      } else {\r\n        setError(err.message || 'Failed to send OTP. Please try again.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ✅ Verify OTP\r\n  const verifyOtp = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      await window.confirmationResult.confirm(otp);\r\n\r\n      // Generate user ID\r\n      const userId = await generateUserId(mobileForOtp);\r\n      setGeneratedUserId(userId);\r\n\r\n      // Complete signup\r\n      const response = await authAPI.completeSignup({\r\n        ...formData,\r\n        userId\r\n      });\r\n\r\n      if (response.success) {\r\n        setMessage('Account created successfully!');\r\n        setStep(3);\r\n      } else {\r\n        throw new Error(response.message || 'Signup failed');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || 'Invalid OTP. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ✅ Generate User ID\r\n  const generateUserId = async (mobileNumber) => {\r\n    try {\r\n      const response = await authAPI.generateUserId({ mobileNumber });\r\n      if (response.success) return response.userId;\r\n      throw new Error(response.message || 'Failed to generate user ID');\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // ✅ Handle Signup Submit\r\n  const handleFormSubmit = async (values) => {\r\n    setFormData(values);\r\n    await sendOtp(values.mobileNumber);\r\n  };\r\n\r\n  // ==================== SCREENS ====================\r\n\r\n  // Step 3: Success\r\n  if (step === 3) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-md w-full space-y-8\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-3xl font-extrabold text-gray-900\">Registration Complete</h2>\r\n            <p className=\"mt-4 text-lg\">\r\n              Your User ID: <span className=\"font-bold\">{generatedUserId}</span>\r\n            </p>\r\n            <p className=\"mt-2 text-sm text-gray-600\">\r\n              Please note this ID carefully as you'll need it to login.\r\n            </p>\r\n          </div>\r\n          <div className=\"mt-6\">\r\n            <button\r\n              onClick={() => navigate('/login')}\r\n              className=\"w-full py-2 px-4 rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\r\n            >\r\n              Proceed to Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Step 2: OTP Verification\r\n  if (step === 2) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n        <div id=\"recaptcha-container\"></div>\r\n        <div className=\"max-w-md w-full space-y-8\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\r\n            <p className=\"mt-2 text-sm text-gray-600\">\r\n              Enter the 6-digit OTP sent to +91 {mobileForOtp}\r\n            </p>\r\n          </div>\r\n\r\n          {message && <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">{message}</div>}\r\n          {error && <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">{error}</div>}\r\n\r\n          <div className=\"space-y-4\">\r\n            <input\r\n              type=\"text\"\r\n              value={otp}\r\n              onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\r\n              placeholder=\"Enter 6-digit OTP\"\r\n              className=\"w-full px-3 py-2 border rounded-md text-center text-lg tracking-widest\"\r\n              inputMode=\"numeric\"\r\n              autoFocus\r\n            />\r\n            <button\r\n              onClick={verifyOtp}\r\n              disabled={loading || otp.length !== 6}\r\n              className=\"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Verifying...' : 'Verify OTP'}\r\n            </button>\r\n            <button\r\n              onClick={() => sendOtp(mobileForOtp)}\r\n              disabled={loading}\r\n              className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 text-sm\"\r\n            >\r\n              Resend OTP\r\n            </button>\r\n            <button\r\n              onClick={() => { setStep(1); setError(''); setMessage(''); }}\r\n              className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\r\n            >\r\n              ← Back to Signup\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Step 1: Registration Form\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div id=\"recaptcha-container\"></div>\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-3xl font-extrabold text-gray-900\">Create your account</h2>\r\n          <p className=\"mt-2 text-sm text-gray-600\">\r\n            Or{' '}\r\n            <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n              sign in to your account\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        <Formik\r\n          initialValues={{ name: '', email: '', mobileNumber: '', password: '', confirmPassword: '' }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleFormSubmit}\r\n        >\r\n          {({ isValid, dirty }) => (\r\n            <Form className=\"mt-8 space-y-6\">\r\n              <div className=\"space-y-4\">\r\n                {/* Name */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium\">Full Name</label>\r\n                  <Field name=\"name\" type=\"text\" placeholder=\"Your full name\"\r\n                    className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\r\n                  <ErrorMessage name=\"name\" component=\"div\" className=\"text-sm text-red-600\" />\r\n                </div>\r\n\r\n                {/* Email */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium\">Email (optional)</label>\r\n                  <Field name=\"email\" type=\"email\" placeholder=\"your.email@example.com\"\r\n                    className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\r\n                  <ErrorMessage name=\"email\" component=\"div\" className=\"text-sm text-red-600\" />\r\n                </div>\r\n\r\n                {/* Mobile */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium\">Mobile Number</label>\r\n                  <div className=\"flex mt-1\">\r\n                    <span className=\"px-3 py-2 border bg-gray-50 text-gray-500\">+91</span>\r\n                    <Field name=\"mobileNumber\" type=\"tel\" maxLength=\"10\" placeholder=\"9876543210\"\r\n                      className=\"flex-1 px-3 py-2 border rounded-r-md\" />\r\n                  </div>\r\n                  <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"text-sm text-red-600\" />\r\n                </div>\r\n\r\n                {/* Password */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium\">Password</label>\r\n                  <Field name=\"password\" type=\"password\" placeholder=\"At least 6 characters\"\r\n                    className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\r\n                  <ErrorMessage name=\"password\" component=\"div\" className=\"text-sm text-red-600\" />\r\n                </div>\r\n\r\n                {/* Confirm Password */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium\">Confirm Password</label>\r\n                  <Field name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm your password\"\r\n                    className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\r\n                  <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"text-sm text-red-600\" />\r\n                </div>\r\n              </div>\r\n\r\n              {error && <div className=\"bg-red-50 p-3 text-sm text-red-700 rounded-md\">{error}</div>}\r\n\r\n              <button\r\n                type=\"submit\"\r\n                disabled={loading || !isValid || !dirty}\r\n                className=\"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\r\n              >\r\n                {loading ? 'Sending OTP...' : 'Sign Up'}\r\n              </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,IAAI,EAAEC,iBAAiB,EAAEC,qBAAqB,QAAQ,gBAAgB;AAC/E,SAASC,OAAO,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,MAAM,CAACmB,OAAO,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}