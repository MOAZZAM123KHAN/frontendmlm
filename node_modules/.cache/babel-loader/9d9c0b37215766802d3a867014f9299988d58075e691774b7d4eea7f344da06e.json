{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moazz\\\\Desktop\\\\frontend\\\\src\\\\components\\\\auth\\\\SignupForm.js\",\n  _s = $RefreshSig$();\n// // import React, { useState, useEffect } from 'react';\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // import * as Yup from 'yup';\n// // import { Link, useNavigate } from 'react-router-dom';\n// // import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\n// // import { authAPI } from '../../services/api';\n\n// // const SignupForm = () => {\n// //   const [step, setStep] = useState(1); // 1: form, 2: otp, 3: success\n// //   const [loading, setLoading] = useState(false);\n// //   const [error, setError] = useState('');\n// //   const [message, setMessage] = useState('');\n// //   const [mobileForOtp, setMobileForOtp] = useState('');\n// //   const [otp, setOtp] = useState('');\n// //   const [generatedUserId, setGeneratedUserId] = useState('');\n// //   const [formData, setFormData] = useState(null);\n// //   const navigate = useNavigate();\n\n// //   // ✅ Validation\n// //   const validationSchema = Yup.object({\n// //     name: Yup.string()\n// //       .min(2, 'Name must be at least 2 characters')\n// //       .max(50, 'Name cannot exceed 50 characters')\n// //       .required('Name is required'),\n// //     email: Yup.string().email('Please enter a valid email address').nullable(),\n// //     mobileNumber: Yup.string()\n// //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n// //       .required('Mobile number is required'),\n// //     password: Yup.string()\n// //       .min(6, 'Password must be at least 6 characters')\n// //       .matches(/^(?=.*[a-zA-Z])(?=.*\\d).+$/, 'Password must contain at least one letter and one number')\n// //       .required('Password is required'),\n// //     confirmPassword: Yup.string()\n// //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n// //       .required('Confirm password is required'),\n// //   });\n\n// //   // ✅ Setup Recaptcha once\n// //   useEffect(() => {\n// //     if (!window.recaptchaVerifier) {\n// //       window.recaptchaVerifier = new RecaptchaVerifier(\n// //         'recaptcha-container',\n// //         { size: 'invisible' },\n// //         auth\n// //       );\n// //     }\n// //   }, []);\n\n// //   // ✅ Send OTP\n// //   const sendOtp = async (mobile) => {\n// //     setLoading(true);\n// //     setError('');\n// //     setMessage('');\n\n// //     try {\n// //       const phoneNumber = `+91${mobile}`;\n// //       const confirmationResult = await signInWithPhoneNumber(\n// //         auth,\n// //         phoneNumber,\n// //         window.recaptchaVerifier\n// //       );\n\n// //       window.confirmationResult = confirmationResult;\n// //       setMessage('OTP sent to your mobile number.');\n// //       setMobileForOtp(mobile);\n// //       setStep(2);\n// //     } catch (err) {\n// //       console.error(\"OTP Error:\", err);\n// //       if (err.code === \"auth/invalid-app-credential\") {\n// //         setError(\"Firebase config invalid है। .env values और storageBucket check करो।\");\n// //       } else if (err.code === \"auth/missing-phone-number\") {\n// //         setError(\"Phone number सही format में दो (+91XXXXXXXXXX).\");\n// //       } else {\n// //         setError(err.message || 'Failed to send OTP. Please try again.');\n// //       }\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   // ✅ Verify OTP\n// //   const verifyOtp = async () => {\n// //     setLoading(true);\n// //     setError('');\n\n// //     try {\n// //       await window.confirmationResult.confirm(otp);\n\n// //       // Generate user ID\n// //       const userId = await generateUserId(mobileForOtp);\n// //       setGeneratedUserId(userId);\n\n// //       // Complete signup\n// //       const response = await authAPI.completeSignup({\n// //         ...formData,\n// //         userId\n// //       });\n\n// //       if (response.success) {\n// //         setMessage('Account created successfully!');\n// //         setStep(3);\n// //       } else {\n// //         throw new Error(response.message || 'Signup failed');\n// //       }\n// //     } catch (err) {\n// //       setError(err.message || 'Invalid OTP. Please try again.');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   // ✅ Generate User ID\n// //   const generateUserId = async (mobileNumber) => {\n// //     try {\n// //       const response = await authAPI.generateUserId({ mobileNumber });\n// //       if (response.success) return response.userId;\n// //       throw new Error(response.message || 'Failed to generate user ID');\n// //     } catch (err) {\n// //       throw err;\n// //     }\n// //   };\n\n// //   // ✅ Handle Signup Submit\n// //   const handleFormSubmit = async (values) => {\n// //     setFormData(values);\n// //     await sendOtp(values.mobileNumber);\n// //   };\n\n// //   // ==================== SCREENS ====================\n\n// //   // Step 3: Success\n// //   if (step === 3) {\n// //     return (\n// //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //         <div className=\"max-w-md w-full space-y-8\">\n// //           <div className=\"text-center\">\n// //             <h2 className=\"text-3xl font-extrabold text-gray-900\">Registration Complete</h2>\n// //             <p className=\"mt-4 text-lg\">\n// //               Your User ID: <span className=\"font-bold\">{generatedUserId}</span>\n// //             </p>\n// //             <p className=\"mt-2 text-sm text-gray-600\">\n// //               Please note this ID carefully as you'll need it to login.\n// //             </p>\n// //           </div>\n// //           <div className=\"mt-6\">\n// //             <button\n// //               onClick={() => navigate('/login')}\n// //               className=\"w-full py-2 px-4 rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n// //             >\n// //               Proceed to Login\n// //             </button>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     );\n// //   }\n\n// //   // Step 2: OTP Verification\n// //   if (step === 2) {\n// //     return (\n// //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //         <div id=\"recaptcha-container\"></div>\n// //         <div className=\"max-w-md w-full space-y-8\">\n// //           <div className=\"text-center\">\n// //             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n// //             <p className=\"mt-2 text-sm text-gray-600\">\n// //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n// //             </p>\n// //           </div>\n\n// //           {message && <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">{message}</div>}\n// //           {error && <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">{error}</div>}\n\n// //           <div className=\"space-y-4\">\n// //             <input\n// //               type=\"text\"\n// //               value={otp}\n// //               onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n// //               placeholder=\"Enter 6-digit OTP\"\n// //               className=\"w-full px-3 py-2 border rounded-md text-center text-lg tracking-widest\"\n// //               inputMode=\"numeric\"\n// //               autoFocus\n// //             />\n// //             <button\n// //               onClick={verifyOtp}\n// //               disabled={loading || otp.length !== 6}\n// //               className=\"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\n// //             >\n// //               {loading ? 'Verifying...' : 'Verify OTP'}\n// //             </button>\n// //             <button\n// //               onClick={() => sendOtp(mobileForOtp)}\n// //               disabled={loading}\n// //               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 text-sm\"\n// //             >\n// //               Resend OTP\n// //             </button>\n// //             <button\n// //               onClick={() => { setStep(1); setError(''); setMessage(''); }}\n// //               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\n// //             >\n// //               ← Back to Signup\n// //             </button>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     );\n// //   }\n\n// //   // Step 1: Registration Form\n// //   return (\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //       <div id=\"recaptcha-container\"></div>\n// //       <div className=\"max-w-md w-full space-y-8\">\n// //         <div className=\"text-center\">\n// //           <h2 className=\"text-3xl font-extrabold text-gray-900\">Create your account</h2>\n// //           <p className=\"mt-2 text-sm text-gray-600\">\n// //             Or{' '}\n// //             <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n// //               sign in to your account\n// //             </Link>\n// //           </p>\n// //         </div>\n\n// //         <Formik\n// //           initialValues={{ name: '', email: '', mobileNumber: '', password: '', confirmPassword: '' }}\n// //           validationSchema={validationSchema}\n// //           onSubmit={handleFormSubmit}\n// //         >\n// //           {({ isValid, dirty }) => (\n// //             <Form className=\"mt-8 space-y-6\">\n// //               <div className=\"space-y-4\">\n// //                 {/* Name */}\n// //                 <div>\n// //                   <label className=\"block text-sm font-medium\">Full Name</label>\n// //                   <Field name=\"name\" type=\"text\" placeholder=\"Your full name\"\n// //                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\n// //                   <ErrorMessage name=\"name\" component=\"div\" className=\"text-sm text-red-600\" />\n// //                 </div>\n\n// //                 {/* Email */}\n// //                 <div>\n// //                   <label className=\"block text-sm font-medium\">Email (optional)</label>\n// //                   <Field name=\"email\" type=\"email\" placeholder=\"your.email@example.com\"\n// //                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\n// //                   <ErrorMessage name=\"email\" component=\"div\" className=\"text-sm text-red-600\" />\n// //                 </div>\n\n// //                 {/* Mobile */}\n// //                 <div>\n// //                   <label className=\"block text-sm font-medium\">Mobile Number</label>\n// //                   <div className=\"flex mt-1\">\n// //                     <span className=\"px-3 py-2 border bg-gray-50 text-gray-500\">+91</span>\n// //                     <Field name=\"mobileNumber\" type=\"tel\" maxLength=\"10\" placeholder=\"9876543210\"\n// //                       className=\"flex-1 px-3 py-2 border rounded-r-md\" />\n// //                   </div>\n// //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"text-sm text-red-600\" />\n// //                 </div>\n\n// //                 {/* Password */}\n// //                 <div>\n// //                   <label className=\"block text-sm font-medium\">Password</label>\n// //                   <Field name=\"password\" type=\"password\" placeholder=\"At least 6 characters\"\n// //                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\n// //                   <ErrorMessage name=\"password\" component=\"div\" className=\"text-sm text-red-600\" />\n// //                 </div>\n\n// //                 {/* Confirm Password */}\n// //                 <div>\n// //                   <label className=\"block text-sm font-medium\">Confirm Password</label>\n// //                   <Field name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm your password\"\n// //                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\n// //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"text-sm text-red-600\" />\n// //                 </div>\n// //               </div>\n\n// //               {error && <div className=\"bg-red-50 p-3 text-sm text-red-700 rounded-md\">{error}</div>}\n\n// //               <button\n// //                 type=\"submit\"\n// //                 disabled={loading || !isValid || !dirty}\n// //                 className=\"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\n// //               >\n// //                 {loading ? 'Sending OTP...' : 'Sign Up'}\n// //               </button>\n// //             </Form>\n// //           )}\n// //         </Formik>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default SignupForm;\n\n// import React, { useState, useEffect } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\n// import { authAPI } from '../../services/api';\n\n// const SignupForm = () => {\n//   const [step, setStep] = useState(1); // 1: form, 2: otp, 3: success\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [mobileForOtp, setMobileForOtp] = useState('');\n//   const [otp, setOtp] = useState('');\n//   const [formData, setFormData] = useState(null);\n//   const navigate = useNavigate();\n\n//   // ✅ Validation\n//   const validationSchema = Yup.object({\n//     name: Yup.string()\n//       .min(2, 'Name must be at least 2 characters')\n//       .max(50, 'Name cannot exceed 50 characters')\n//       .required('Name is required'),\n//     email: Yup.string().email('Please enter a valid email address').nullable(),\n//     mobileNumber: Yup.string()\n//       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n//       .required('Mobile number is required'),\n//     password: Yup.string()\n//       .min(6, 'Password must be at least 6 characters')\n//       .matches(/^(?=.*[a-zA-Z])(?=.*\\d).+$/, 'Password must contain at least one letter and one number')\n//       .required('Password is required'),\n//     confirmPassword: Yup.string()\n//       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n//       .required('Confirm password is required'),\n//   });\n\n//   // ✅ Setup Recaptcha once\n//   useEffect(() => {\n//     if (!window.recaptchaVerifier) {\n//       window.recaptchaVerifier = new RecaptchaVerifier(\n//         'recaptcha-container',\n//         { size: 'invisible' },\n//         auth\n//       );\n//     }\n//   }, []);\n\n//   // ✅ Send OTP\n//   const sendOtp = async (mobile) => {\n//     setLoading(true);\n//     setError('');\n//     setMessage('');\n\n//     try {\n//       const phoneNumber = `+91${mobile}`;\n//       const confirmationResult = await signInWithPhoneNumber(\n//         auth,\n//         phoneNumber,\n//         window.recaptchaVerifier\n//       );\n\n//       window.confirmationResult = confirmationResult;\n//       setMessage('OTP sent to your mobile number.');\n//       setMobileForOtp(mobile);\n//       setStep(2);\n//     } catch (err) {\n//       console.error(\"OTP Error:\", err);\n//       if (err.code === \"auth/invalid-app-credential\") {\n//         setError(\"Firebase config invalid है। .env values और storageBucket check करो।\");\n//       } else if (err.code === \"auth/missing-phone-number\") {\n//         setError(\"Phone number सही format में दो (+91XXXXXXXXXX).\");\n//       } else {\n//         setError(err.message || 'Failed to send OTP. Please try again.');\n//       }\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // ✅ Verify OTP (direct signup)\n//   const verifyOtp = async () => {\n//     setLoading(true);\n//     setError('');\n\n//     try {\n//       await window.confirmationResult.confirm(otp);\n\n//       // ✅ Directly complete signup (skip generateUserId)\n//       const response = await authAPI.completeSignup({\n//         ...formData,\n//         mobileNumber: mobileForOtp\n//       });\n\n//       if (response.success) {\n//         setMessage('Account created successfully!');\n//         setStep(3);\n//       } else {\n//         throw new Error(response.message || 'Signup failed');\n//       }\n//     } catch (err) {\n//       setError(err.message || 'Invalid OTP. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // ✅ Handle Signup Submit\n//   const handleFormSubmit = async (values) => {\n//     setFormData(values);\n//     await sendOtp(values.mobileNumber);\n//   };\n\n//   // ==================== SCREENS ====================\n\n//   // Step 3: Success\n//   if (step === 3) {\n//     return (\n//       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//         <div className=\"max-w-md w-full space-y-8\">\n//           <div className=\"text-center\">\n//             <h2 className=\"text-3xl font-extrabold text-gray-900\">Registration Complete</h2>\n//             <p className=\"mt-2 text-sm text-gray-600\">\n//               Please proceed to login with your credentials.\n//             </p>\n//           </div>\n//           <div className=\"mt-6\">\n//             <button\n//               onClick={() => navigate('/login')}\n//               className=\"w-full py-2 px-4 rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n//             >\n//               Proceed to Login\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   // Step 2: OTP Verification\n//   if (step === 2) {\n//     return (\n//       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//         <div id=\"recaptcha-container\"></div>\n//         <div className=\"max-w-md w-full space-y-8\">\n//           <div className=\"text-center\">\n//             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n//             <p className=\"mt-2 text-sm text-gray-600\">\n//               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n//             </p>\n//           </div>\n\n//           {message && <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">{message}</div>}\n//           {error && <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">{error}</div>}\n\n//           <div className=\"space-y-4\">\n//             <input\n//               type=\"text\"\n//               value={otp}\n//               onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n//               placeholder=\"Enter 6-digit OTP\"\n//               className=\"w-full px-3 py-2 border rounded-md text-center text-lg tracking-widest\"\n//               inputMode=\"numeric\"\n//               autoFocus\n//             />\n//             <button\n//               onClick={verifyOtp}\n//               disabled={loading || otp.length !== 6}\n//               className=\"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\n//             >\n//               {loading ? 'Verifying...' : 'Verify OTP'}\n//             </button>\n//             <button\n//               onClick={() => sendOtp(mobileForOtp)}\n//               disabled={loading}\n//               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 text-sm\"\n//             >\n//               Resend OTP\n//             </button>\n//             <button\n//               onClick={() => { setStep(1); setError(''); setMessage(''); }}\n//               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\n//             >\n//               ← Back to Signup\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   // Step 1: Registration Form\n//   return (\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//       <div id=\"recaptcha-container\"></div>\n//       <div className=\"max-w-md w-full space-y-8\">\n//         <div className=\"text-center\">\n//           <h2 className=\"text-3xl font-extrabold text-gray-900\">Create your account</h2>\n//           <p className=\"mt-2 text-sm text-gray-600\">\n//             Or{' '}\n//             <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n//               sign in to your account\n//             </Link>\n//           </p>\n//         </div>\n\n//         <Formik\n//           initialValues={{ name: '', email: '', mobileNumber: '', password: '', confirmPassword: '' }}\n//           validationSchema={validationSchema}\n//           onSubmit={handleFormSubmit}\n//         >\n//           {({ isValid, dirty }) => (\n//             <Form className=\"mt-8 space-y-6\">\n//               <div className=\"space-y-4\">\n//                 {/* Name */}\n//                 <div>\n//                   <label className=\"block text-sm font-medium\">Full Name</label>\n//                   <Field name=\"name\" type=\"text\" placeholder=\"Your full name\"\n//                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\n//                   <ErrorMessage name=\"name\" component=\"div\" className=\"text-sm text-red-600\" />\n//                 </div>\n\n//                 {/* Email */}\n//                 <div>\n//                   <label className=\"block text-sm font-medium\">Email (optional)</label>\n//                   <Field name=\"email\" type=\"email\" placeholder=\"your.email@example.com\"\n//                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\n//                   <ErrorMessage name=\"email\" component=\"div\" className=\"text-sm text-red-600\" />\n//                 </div>\n\n//                 {/* Mobile */}\n//                 <div>\n//                   <label className=\"block text-sm font-medium\">Mobile Number</label>\n//                   <div className=\"flex mt-1\">\n//                     <span className=\"px-3 py-2 border bg-gray-50 text-gray-500\">+91</span>\n//                     <Field name=\"mobileNumber\" type=\"tel\" maxLength=\"10\" placeholder=\"9876543210\"\n//                       className=\"flex-1 px-3 py-2 border rounded-r-md\" />\n//                   </div>\n//                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"text-sm text-red-600\" />\n//                 </div>\n\n//                 {/* Password */}\n//                 <div>\n//                   <label className=\"block text-sm font-medium\">Password</label>\n//                   <Field name=\"password\" type=\"password\" placeholder=\"At least 6 characters\"\n//                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\n//                   <ErrorMessage name=\"password\" component=\"div\" className=\"text-sm text-red-600\" />\n//                 </div>\n\n//                 {/* Confirm Password */}\n//                 <div>\n//                   <label className=\"block text-sm font-medium\">Confirm Password</label>\n//                   <Field name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm your password\"\n//                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\n//                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"text-sm text-red-600\" />\n//                 </div>\n//               </div>\n\n//               {error && <div className=\"bg-red-50 p-3 text-sm text-red-700 rounded-md\">{error}</div>}\n\n//               <button\n//                 type=\"submit\"\n//                 disabled={loading || !isValid || !dirty}\n//                 className=\"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\n//               >\n//                 {loading ? 'Sending OTP...' : 'Sign Up'}\n//               </button>\n//             </Form>\n//           )}\n//         </Formik>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SignupForm;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber } from \"../../firebase\";\nimport { authAPI } from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupForm = () => {\n  _s();\n  const [step, setStep] = useState(1); // 1: form, 2: otp, 3: success\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [mobileForOtp, setMobileForOtp] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [formData, setFormData] = useState(null);\n  const navigate = useNavigate();\n\n  // ✅ Validation\n  const validationSchema = Yup.object({\n    name: Yup.string().min(2, \"Name must be at least 2 characters\").max(50, \"Name cannot exceed 50 characters\").required(\"Name is required\"),\n    email: Yup.string().email(\"Please enter a valid email address\").nullable(),\n    mobileNumber: Yup.string().matches(/^[0-9]{10}$/, \"Please enter a valid 10-digit mobile number\").required(\"Mobile number is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").matches(/^(?=.*[a-zA-Z])(?=.*\\d).+$/, \"Password must contain at least one letter and one number\").required(\"Password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm password is required\")\n  });\n\n  // ✅ Setup Recaptcha once\n  useEffect(() => {\n    if (!window.recaptchaVerifier) {\n      window.recaptchaVerifier = new RecaptchaVerifier(\"recaptcha-container\", {\n        size: \"invisible\"\n      }, auth);\n    }\n  }, []);\n\n  // ✅ Send OTP\n  const sendOtp = async mobile => {\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n    try {\n      const phoneNumber = `+91${mobile}`;\n      const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, window.recaptchaVerifier);\n      window.confirmationResult = confirmationResult;\n      setMessage(\"OTP sent to your mobile number.\");\n      setMobileForOtp(mobile);\n      setStep(2);\n    } catch (err) {\n      console.error(\"OTP Error:\", err);\n      if (err.code === \"auth/too-many-requests\") {\n        setError(\"Too many OTP requests. Please wait and try again later.\");\n      } else if (err.code === \"auth/missing-phone-number\") {\n        setError(\"Phone number सही format में दो (+91XXXXXXXXXX).\");\n      } else {\n        setError(err.message || \"Failed to send OTP. Please try again.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ✅ Verify OTP + Complete Signup\n  const verifyOtp = async () => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      await window.confirmationResult.confirm(otp);\n\n      // ✅ Directly complete signup (multi-user per mobile allowed)\n      const response = await authAPI.completeSignup({\n        ...formData,\n        mobileNumber: mobileForOtp\n      });\n      if (response.success) {\n        setMessage(`Signup successful ✅ Your User ID: ${response.data.userId}`);\n        console.log(\"All User IDs for this number:\", response.data.allUserIds);\n        setStep(3);\n      } else {\n        throw new Error(response.message || \"Signup failed\");\n      }\n    } catch (err) {\n      console.error(\"Signup OTP error:\", err);\n      setError(err.message || \"Invalid OTP. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ✅ Handle Signup Submit\n  const handleFormSubmit = async values => {\n    setFormData(values);\n    await sendOtp(values.mobileNumber);\n  };\n\n  // ==================== SCREENS ====================\n\n  // Step 3: Success\n  if (step === 3) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md w-full space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl font-extrabold text-gray-900\",\n            children: \"Registration Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-gray-600\",\n            children: \"Please proceed to login with your credentials.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(\"/login\"),\n            className: \"w-full py-2 px-4 rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\",\n            children: \"Proceed to Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Step 2: OTP Verification\n  if (step === 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recaptcha-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md w-full space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl font-extrabold text-gray-900\",\n            children: \"Verify OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-gray-600\",\n            children: [\"Enter the 6-digit OTP sent to +91 \", mobileForOtp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 bg-green-50 text-green-700 rounded-md text-sm\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 bg-red-50 text-red-700 rounded-md text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: otp,\n            onChange: e => setOtp(e.target.value.replace(/\\D/g, \"\").slice(0, 6)),\n            placeholder: \"Enter 6-digit OTP\",\n            className: \"w-full px-3 py-2 border rounded-md text-center text-lg tracking-widest\",\n            inputMode: \"numeric\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: verifyOtp,\n            disabled: loading || otp.length !== 6,\n            className: \"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\",\n            children: loading ? \"Verifying...\" : \"Verify OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendOtp(mobileForOtp),\n            disabled: loading,\n            className: \"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 text-sm\",\n            children: \"Resend OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setStep(1);\n              setError(\"\");\n              setMessage(\"\");\n            },\n            className: \"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\",\n            children: \"\\u2190 Back to Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Step 1: Registration Form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-extrabold text-gray-900\",\n          children: \"Create your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-gray-600\",\n          children: [\"Or\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"font-medium text-indigo-600 hover:text-indigo-500\",\n            children: \"sign in to your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          name: \"\",\n          email: \"\",\n          mobileNumber: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        },\n        validationSchema: validationSchema,\n        onSubmit: handleFormSubmit,\n        children: ({\n          isValid,\n          dirty\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"mt-8 space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"name\",\n                type: \"text\",\n                placeholder: \"Your full name\",\n                className: \"mt-1 block w-full px-3 py-2 border rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"name\",\n                component: \"div\",\n                className: \"text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium\",\n                children: \"Email (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"email\",\n                type: \"email\",\n                placeholder: \"your.email@example.com\",\n                className: \"mt-1 block w-full px-3 py-2 border rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                component: \"div\",\n                className: \"text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium\",\n                children: \"Mobile Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex mt-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"px-3 py-2 border bg-gray-50 text-gray-500\",\n                  children: \"+91\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 861,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"mobileNumber\",\n                  type: \"tel\",\n                  maxLength: \"10\",\n                  placeholder: \"9876543210\",\n                  className: \"flex-1 px-3 py-2 border rounded-r-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 864,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"mobileNumber\",\n                component: \"div\",\n                className: \"text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 881,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"password\",\n                type: \"password\",\n                placeholder: \"At least 6 characters\",\n                className: \"mt-1 block w-full px-3 py-2 border rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                component: \"div\",\n                className: \"text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 888,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 880,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"confirmPassword\",\n                type: \"password\",\n                placeholder: \"Confirm your password\",\n                className: \"mt-1 block w-full px-3 py-2 border rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 900,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"confirmPassword\",\n                component: \"div\",\n                className: \"text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-50 p-3 text-sm text-red-700 rounded-md\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading || !isValid || !dirty,\n            className: \"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\",\n            children: loading ? \"Sending OTP...\" : \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 789,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupForm, \"7BaE+vNoEl0S4fGxDT8RNcgv0gw=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","useEffect","Formik","Form","Field","ErrorMessage","Yup","Link","useNavigate","auth","RecaptchaVerifier","signInWithPhoneNumber","authAPI","jsxDEV","_jsxDEV","SignupForm","_s","step","setStep","loading","setLoading","error","setError","message","setMessage","mobileForOtp","setMobileForOtp","otp","setOtp","formData","setFormData","navigate","validationSchema","object","name","string","min","max","required","email","nullable","mobileNumber","matches","password","confirmPassword","oneOf","ref","window","recaptchaVerifier","size","sendOtp","mobile","phoneNumber","confirmationResult","err","console","code","verifyOtp","confirm","response","completeSignup","success","data","userId","log","allUserIds","Error","handleFormSubmit","values","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","type","value","onChange","e","target","replace","slice","placeholder","inputMode","autoFocus","disabled","length","to","initialValues","onSubmit","isValid","dirty","component","maxLength","_c","$RefreshReg$"],"sources":["C:/Users/moazz/Desktop/frontend/src/components/auth/SignupForm.js"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\r\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// // import * as Yup from 'yup';\r\n// // import { Link, useNavigate } from 'react-router-dom';\r\n// // import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\r\n// // import { authAPI } from '../../services/api';\r\n\r\n// // const SignupForm = () => {\r\n// //   const [step, setStep] = useState(1); // 1: form, 2: otp, 3: success\r\n// //   const [loading, setLoading] = useState(false);\r\n// //   const [error, setError] = useState('');\r\n// //   const [message, setMessage] = useState('');\r\n// //   const [mobileForOtp, setMobileForOtp] = useState('');\r\n// //   const [otp, setOtp] = useState('');\r\n// //   const [generatedUserId, setGeneratedUserId] = useState('');\r\n// //   const [formData, setFormData] = useState(null);\r\n// //   const navigate = useNavigate();\r\n\r\n// //   // ✅ Validation\r\n// //   const validationSchema = Yup.object({\r\n// //     name: Yup.string()\r\n// //       .min(2, 'Name must be at least 2 characters')\r\n// //       .max(50, 'Name cannot exceed 50 characters')\r\n// //       .required('Name is required'),\r\n// //     email: Yup.string().email('Please enter a valid email address').nullable(),\r\n// //     mobileNumber: Yup.string()\r\n// //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\r\n// //       .required('Mobile number is required'),\r\n// //     password: Yup.string()\r\n// //       .min(6, 'Password must be at least 6 characters')\r\n// //       .matches(/^(?=.*[a-zA-Z])(?=.*\\d).+$/, 'Password must contain at least one letter and one number')\r\n// //       .required('Password is required'),\r\n// //     confirmPassword: Yup.string()\r\n// //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n// //       .required('Confirm password is required'),\r\n// //   });\r\n\r\n// //   // ✅ Setup Recaptcha once\r\n// //   useEffect(() => {\r\n// //     if (!window.recaptchaVerifier) {\r\n// //       window.recaptchaVerifier = new RecaptchaVerifier(\r\n// //         'recaptcha-container',\r\n// //         { size: 'invisible' },\r\n// //         auth\r\n// //       );\r\n// //     }\r\n// //   }, []);\r\n\r\n// //   // ✅ Send OTP\r\n// //   const sendOtp = async (mobile) => {\r\n// //     setLoading(true);\r\n// //     setError('');\r\n// //     setMessage('');\r\n\r\n// //     try {\r\n// //       const phoneNumber = `+91${mobile}`;\r\n// //       const confirmationResult = await signInWithPhoneNumber(\r\n// //         auth,\r\n// //         phoneNumber,\r\n// //         window.recaptchaVerifier\r\n// //       );\r\n\r\n// //       window.confirmationResult = confirmationResult;\r\n// //       setMessage('OTP sent to your mobile number.');\r\n// //       setMobileForOtp(mobile);\r\n// //       setStep(2);\r\n// //     } catch (err) {\r\n// //       console.error(\"OTP Error:\", err);\r\n// //       if (err.code === \"auth/invalid-app-credential\") {\r\n// //         setError(\"Firebase config invalid है। .env values और storageBucket check करो।\");\r\n// //       } else if (err.code === \"auth/missing-phone-number\") {\r\n// //         setError(\"Phone number सही format में दो (+91XXXXXXXXXX).\");\r\n// //       } else {\r\n// //         setError(err.message || 'Failed to send OTP. Please try again.');\r\n// //       }\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   // ✅ Verify OTP\r\n// //   const verifyOtp = async () => {\r\n// //     setLoading(true);\r\n// //     setError('');\r\n\r\n// //     try {\r\n// //       await window.confirmationResult.confirm(otp);\r\n\r\n// //       // Generate user ID\r\n// //       const userId = await generateUserId(mobileForOtp);\r\n// //       setGeneratedUserId(userId);\r\n\r\n// //       // Complete signup\r\n// //       const response = await authAPI.completeSignup({\r\n// //         ...formData,\r\n// //         userId\r\n// //       });\r\n\r\n// //       if (response.success) {\r\n// //         setMessage('Account created successfully!');\r\n// //         setStep(3);\r\n// //       } else {\r\n// //         throw new Error(response.message || 'Signup failed');\r\n// //       }\r\n// //     } catch (err) {\r\n// //       setError(err.message || 'Invalid OTP. Please try again.');\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   // ✅ Generate User ID\r\n// //   const generateUserId = async (mobileNumber) => {\r\n// //     try {\r\n// //       const response = await authAPI.generateUserId({ mobileNumber });\r\n// //       if (response.success) return response.userId;\r\n// //       throw new Error(response.message || 'Failed to generate user ID');\r\n// //     } catch (err) {\r\n// //       throw err;\r\n// //     }\r\n// //   };\r\n\r\n// //   // ✅ Handle Signup Submit\r\n// //   const handleFormSubmit = async (values) => {\r\n// //     setFormData(values);\r\n// //     await sendOtp(values.mobileNumber);\r\n// //   };\r\n\r\n// //   // ==================== SCREENS ====================\r\n\r\n// //   // Step 3: Success\r\n// //   if (step === 3) {\r\n// //     return (\r\n// //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// //         <div className=\"max-w-md w-full space-y-8\">\r\n// //           <div className=\"text-center\">\r\n// //             <h2 className=\"text-3xl font-extrabold text-gray-900\">Registration Complete</h2>\r\n// //             <p className=\"mt-4 text-lg\">\r\n// //               Your User ID: <span className=\"font-bold\">{generatedUserId}</span>\r\n// //             </p>\r\n// //             <p className=\"mt-2 text-sm text-gray-600\">\r\n// //               Please note this ID carefully as you'll need it to login.\r\n// //             </p>\r\n// //           </div>\r\n// //           <div className=\"mt-6\">\r\n// //             <button\r\n// //               onClick={() => navigate('/login')}\r\n// //               className=\"w-full py-2 px-4 rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\r\n// //             >\r\n// //               Proceed to Login\r\n// //             </button>\r\n// //           </div>\r\n// //         </div>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   // Step 2: OTP Verification\r\n// //   if (step === 2) {\r\n// //     return (\r\n// //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// //         <div id=\"recaptcha-container\"></div>\r\n// //         <div className=\"max-w-md w-full space-y-8\">\r\n// //           <div className=\"text-center\">\r\n// //             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\r\n// //             <p className=\"mt-2 text-sm text-gray-600\">\r\n// //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\r\n// //             </p>\r\n// //           </div>\r\n\r\n// //           {message && <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">{message}</div>}\r\n// //           {error && <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">{error}</div>}\r\n\r\n// //           <div className=\"space-y-4\">\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               value={otp}\r\n// //               onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\r\n// //               placeholder=\"Enter 6-digit OTP\"\r\n// //               className=\"w-full px-3 py-2 border rounded-md text-center text-lg tracking-widest\"\r\n// //               inputMode=\"numeric\"\r\n// //               autoFocus\r\n// //             />\r\n// //             <button\r\n// //               onClick={verifyOtp}\r\n// //               disabled={loading || otp.length !== 6}\r\n// //               className=\"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\r\n// //             >\r\n// //               {loading ? 'Verifying...' : 'Verify OTP'}\r\n// //             </button>\r\n// //             <button\r\n// //               onClick={() => sendOtp(mobileForOtp)}\r\n// //               disabled={loading}\r\n// //               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 text-sm\"\r\n// //             >\r\n// //               Resend OTP\r\n// //             </button>\r\n// //             <button\r\n// //               onClick={() => { setStep(1); setError(''); setMessage(''); }}\r\n// //               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\r\n// //             >\r\n// //               ← Back to Signup\r\n// //             </button>\r\n// //           </div>\r\n// //         </div>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   // Step 1: Registration Form\r\n// //   return (\r\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// //       <div id=\"recaptcha-container\"></div>\r\n// //       <div className=\"max-w-md w-full space-y-8\">\r\n// //         <div className=\"text-center\">\r\n// //           <h2 className=\"text-3xl font-extrabold text-gray-900\">Create your account</h2>\r\n// //           <p className=\"mt-2 text-sm text-gray-600\">\r\n// //             Or{' '}\r\n// //             <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n// //               sign in to your account\r\n// //             </Link>\r\n// //           </p>\r\n// //         </div>\r\n\r\n// //         <Formik\r\n// //           initialValues={{ name: '', email: '', mobileNumber: '', password: '', confirmPassword: '' }}\r\n// //           validationSchema={validationSchema}\r\n// //           onSubmit={handleFormSubmit}\r\n// //         >\r\n// //           {({ isValid, dirty }) => (\r\n// //             <Form className=\"mt-8 space-y-6\">\r\n// //               <div className=\"space-y-4\">\r\n// //                 {/* Name */}\r\n// //                 <div>\r\n// //                   <label className=\"block text-sm font-medium\">Full Name</label>\r\n// //                   <Field name=\"name\" type=\"text\" placeholder=\"Your full name\"\r\n// //                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\r\n// //                   <ErrorMessage name=\"name\" component=\"div\" className=\"text-sm text-red-600\" />\r\n// //                 </div>\r\n\r\n// //                 {/* Email */}\r\n// //                 <div>\r\n// //                   <label className=\"block text-sm font-medium\">Email (optional)</label>\r\n// //                   <Field name=\"email\" type=\"email\" placeholder=\"your.email@example.com\"\r\n// //                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\r\n// //                   <ErrorMessage name=\"email\" component=\"div\" className=\"text-sm text-red-600\" />\r\n// //                 </div>\r\n\r\n// //                 {/* Mobile */}\r\n// //                 <div>\r\n// //                   <label className=\"block text-sm font-medium\">Mobile Number</label>\r\n// //                   <div className=\"flex mt-1\">\r\n// //                     <span className=\"px-3 py-2 border bg-gray-50 text-gray-500\">+91</span>\r\n// //                     <Field name=\"mobileNumber\" type=\"tel\" maxLength=\"10\" placeholder=\"9876543210\"\r\n// //                       className=\"flex-1 px-3 py-2 border rounded-r-md\" />\r\n// //                   </div>\r\n// //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"text-sm text-red-600\" />\r\n// //                 </div>\r\n\r\n// //                 {/* Password */}\r\n// //                 <div>\r\n// //                   <label className=\"block text-sm font-medium\">Password</label>\r\n// //                   <Field name=\"password\" type=\"password\" placeholder=\"At least 6 characters\"\r\n// //                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\r\n// //                   <ErrorMessage name=\"password\" component=\"div\" className=\"text-sm text-red-600\" />\r\n// //                 </div>\r\n\r\n// //                 {/* Confirm Password */}\r\n// //                 <div>\r\n// //                   <label className=\"block text-sm font-medium\">Confirm Password</label>\r\n// //                   <Field name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm your password\"\r\n// //                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\r\n// //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"text-sm text-red-600\" />\r\n// //                 </div>\r\n// //               </div>\r\n\r\n// //               {error && <div className=\"bg-red-50 p-3 text-sm text-red-700 rounded-md\">{error}</div>}\r\n\r\n// //               <button\r\n// //                 type=\"submit\"\r\n// //                 disabled={loading || !isValid || !dirty}\r\n// //                 className=\"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\r\n// //               >\r\n// //                 {loading ? 'Sending OTP...' : 'Sign Up'}\r\n// //               </button>\r\n// //             </Form>\r\n// //           )}\r\n// //         </Formik>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default SignupForm;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\r\n// import { authAPI } from '../../services/api';\r\n\r\n// const SignupForm = () => {\r\n//   const [step, setStep] = useState(1); // 1: form, 2: otp, 3: success\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const [mobileForOtp, setMobileForOtp] = useState('');\r\n//   const [otp, setOtp] = useState('');\r\n//   const [formData, setFormData] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   // ✅ Validation\r\n//   const validationSchema = Yup.object({\r\n//     name: Yup.string()\r\n//       .min(2, 'Name must be at least 2 characters')\r\n//       .max(50, 'Name cannot exceed 50 characters')\r\n//       .required('Name is required'),\r\n//     email: Yup.string().email('Please enter a valid email address').nullable(),\r\n//     mobileNumber: Yup.string()\r\n//       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\r\n//       .required('Mobile number is required'),\r\n//     password: Yup.string()\r\n//       .min(6, 'Password must be at least 6 characters')\r\n//       .matches(/^(?=.*[a-zA-Z])(?=.*\\d).+$/, 'Password must contain at least one letter and one number')\r\n//       .required('Password is required'),\r\n//     confirmPassword: Yup.string()\r\n//       .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n//       .required('Confirm password is required'),\r\n//   });\r\n\r\n//   // ✅ Setup Recaptcha once\r\n//   useEffect(() => {\r\n//     if (!window.recaptchaVerifier) {\r\n//       window.recaptchaVerifier = new RecaptchaVerifier(\r\n//         'recaptcha-container',\r\n//         { size: 'invisible' },\r\n//         auth\r\n//       );\r\n//     }\r\n//   }, []);\r\n\r\n//   // ✅ Send OTP\r\n//   const sendOtp = async (mobile) => {\r\n//     setLoading(true);\r\n//     setError('');\r\n//     setMessage('');\r\n\r\n//     try {\r\n//       const phoneNumber = `+91${mobile}`;\r\n//       const confirmationResult = await signInWithPhoneNumber(\r\n//         auth,\r\n//         phoneNumber,\r\n//         window.recaptchaVerifier\r\n//       );\r\n\r\n//       window.confirmationResult = confirmationResult;\r\n//       setMessage('OTP sent to your mobile number.');\r\n//       setMobileForOtp(mobile);\r\n//       setStep(2);\r\n//     } catch (err) {\r\n//       console.error(\"OTP Error:\", err);\r\n//       if (err.code === \"auth/invalid-app-credential\") {\r\n//         setError(\"Firebase config invalid है। .env values और storageBucket check करो।\");\r\n//       } else if (err.code === \"auth/missing-phone-number\") {\r\n//         setError(\"Phone number सही format में दो (+91XXXXXXXXXX).\");\r\n//       } else {\r\n//         setError(err.message || 'Failed to send OTP. Please try again.');\r\n//       }\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // ✅ Verify OTP (direct signup)\r\n//   const verifyOtp = async () => {\r\n//     setLoading(true);\r\n//     setError('');\r\n\r\n//     try {\r\n//       await window.confirmationResult.confirm(otp);\r\n\r\n//       // ✅ Directly complete signup (skip generateUserId)\r\n//       const response = await authAPI.completeSignup({\r\n//         ...formData,\r\n//         mobileNumber: mobileForOtp\r\n//       });\r\n\r\n//       if (response.success) {\r\n//         setMessage('Account created successfully!');\r\n//         setStep(3);\r\n//       } else {\r\n//         throw new Error(response.message || 'Signup failed');\r\n//       }\r\n//     } catch (err) {\r\n//       setError(err.message || 'Invalid OTP. Please try again.');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // ✅ Handle Signup Submit\r\n//   const handleFormSubmit = async (values) => {\r\n//     setFormData(values);\r\n//     await sendOtp(values.mobileNumber);\r\n//   };\r\n\r\n//   // ==================== SCREENS ====================\r\n\r\n//   // Step 3: Success\r\n//   if (step === 3) {\r\n//     return (\r\n//       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n//         <div className=\"max-w-md w-full space-y-8\">\r\n//           <div className=\"text-center\">\r\n//             <h2 className=\"text-3xl font-extrabold text-gray-900\">Registration Complete</h2>\r\n//             <p className=\"mt-2 text-sm text-gray-600\">\r\n//               Please proceed to login with your credentials.\r\n//             </p>\r\n//           </div>\r\n//           <div className=\"mt-6\">\r\n//             <button\r\n//               onClick={() => navigate('/login')}\r\n//               className=\"w-full py-2 px-4 rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\r\n//             >\r\n//               Proceed to Login\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Step 2: OTP Verification\r\n//   if (step === 2) {\r\n//     return (\r\n//       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n//         <div id=\"recaptcha-container\"></div>\r\n//         <div className=\"max-w-md w-full space-y-8\">\r\n//           <div className=\"text-center\">\r\n//             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\r\n//             <p className=\"mt-2 text-sm text-gray-600\">\r\n//               Enter the 6-digit OTP sent to +91 {mobileForOtp}\r\n//             </p>\r\n//           </div>\r\n\r\n//           {message && <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">{message}</div>}\r\n//           {error && <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">{error}</div>}\r\n\r\n//           <div className=\"space-y-4\">\r\n//             <input\r\n//               type=\"text\"\r\n//               value={otp}\r\n//               onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\r\n//               placeholder=\"Enter 6-digit OTP\"\r\n//               className=\"w-full px-3 py-2 border rounded-md text-center text-lg tracking-widest\"\r\n//               inputMode=\"numeric\"\r\n//               autoFocus\r\n//             />\r\n//             <button\r\n//               onClick={verifyOtp}\r\n//               disabled={loading || otp.length !== 6}\r\n//               className=\"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\r\n//             >\r\n//               {loading ? 'Verifying...' : 'Verify OTP'}\r\n//             </button>\r\n//             <button\r\n//               onClick={() => sendOtp(mobileForOtp)}\r\n//               disabled={loading}\r\n//               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 text-sm\"\r\n//             >\r\n//               Resend OTP\r\n//             </button>\r\n//             <button\r\n//               onClick={() => { setStep(1); setError(''); setMessage(''); }}\r\n//               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\r\n//             >\r\n//               ← Back to Signup\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Step 1: Registration Form\r\n//   return (\r\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n//       <div id=\"recaptcha-container\"></div>\r\n//       <div className=\"max-w-md w-full space-y-8\">\r\n//         <div className=\"text-center\">\r\n//           <h2 className=\"text-3xl font-extrabold text-gray-900\">Create your account</h2>\r\n//           <p className=\"mt-2 text-sm text-gray-600\">\r\n//             Or{' '}\r\n//             <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n//               sign in to your account\r\n//             </Link>\r\n//           </p>\r\n//         </div>\r\n\r\n//         <Formik\r\n//           initialValues={{ name: '', email: '', mobileNumber: '', password: '', confirmPassword: '' }}\r\n//           validationSchema={validationSchema}\r\n//           onSubmit={handleFormSubmit}\r\n//         >\r\n//           {({ isValid, dirty }) => (\r\n//             <Form className=\"mt-8 space-y-6\">\r\n//               <div className=\"space-y-4\">\r\n//                 {/* Name */}\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium\">Full Name</label>\r\n//                   <Field name=\"name\" type=\"text\" placeholder=\"Your full name\"\r\n//                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\r\n//                   <ErrorMessage name=\"name\" component=\"div\" className=\"text-sm text-red-600\" />\r\n//                 </div>\r\n\r\n//                 {/* Email */}\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium\">Email (optional)</label>\r\n//                   <Field name=\"email\" type=\"email\" placeholder=\"your.email@example.com\"\r\n//                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\r\n//                   <ErrorMessage name=\"email\" component=\"div\" className=\"text-sm text-red-600\" />\r\n//                 </div>\r\n\r\n//                 {/* Mobile */}\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium\">Mobile Number</label>\r\n//                   <div className=\"flex mt-1\">\r\n//                     <span className=\"px-3 py-2 border bg-gray-50 text-gray-500\">+91</span>\r\n//                     <Field name=\"mobileNumber\" type=\"tel\" maxLength=\"10\" placeholder=\"9876543210\"\r\n//                       className=\"flex-1 px-3 py-2 border rounded-r-md\" />\r\n//                   </div>\r\n//                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"text-sm text-red-600\" />\r\n//                 </div>\r\n\r\n//                 {/* Password */}\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium\">Password</label>\r\n//                   <Field name=\"password\" type=\"password\" placeholder=\"At least 6 characters\"\r\n//                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\r\n//                   <ErrorMessage name=\"password\" component=\"div\" className=\"text-sm text-red-600\" />\r\n//                 </div>\r\n\r\n//                 {/* Confirm Password */}\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium\">Confirm Password</label>\r\n//                   <Field name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm your password\"\r\n//                     className=\"mt-1 block w-full px-3 py-2 border rounded-md\" />\r\n//                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"text-sm text-red-600\" />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {error && <div className=\"bg-red-50 p-3 text-sm text-red-700 rounded-md\">{error}</div>}\r\n\r\n//               <button\r\n//                 type=\"submit\"\r\n//                 disabled={loading || !isValid || !dirty}\r\n//                 className=\"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\r\n//               >\r\n//                 {loading ? 'Sending OTP...' : 'Sign Up'}\r\n//               </button>\r\n//             </Form>\r\n//           )}\r\n//         </Formik>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SignupForm;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber } from \"../../firebase\";\r\nimport { authAPI } from \"../../services/api\";\r\n\r\nconst SignupForm = () => {\r\n  const [step, setStep] = useState(1); // 1: form, 2: otp, 3: success\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [mobileForOtp, setMobileForOtp] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [formData, setFormData] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // ✅ Validation\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string()\r\n      .min(2, \"Name must be at least 2 characters\")\r\n      .max(50, \"Name cannot exceed 50 characters\")\r\n      .required(\"Name is required\"),\r\n    email: Yup.string().email(\"Please enter a valid email address\").nullable(),\r\n    mobileNumber: Yup.string()\r\n      .matches(/^[0-9]{10}$/, \"Please enter a valid 10-digit mobile number\")\r\n      .required(\"Mobile number is required\"),\r\n    password: Yup.string()\r\n      .min(6, \"Password must be at least 6 characters\")\r\n      .matches(\r\n        /^(?=.*[a-zA-Z])(?=.*\\d).+$/,\r\n        \"Password must contain at least one letter and one number\"\r\n      )\r\n      .required(\"Password is required\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n      .required(\"Confirm password is required\"),\r\n  });\r\n\r\n  // ✅ Setup Recaptcha once\r\n  useEffect(() => {\r\n    if (!window.recaptchaVerifier) {\r\n      window.recaptchaVerifier = new RecaptchaVerifier(\r\n        \"recaptcha-container\",\r\n        { size: \"invisible\" },\r\n        auth\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  // ✅ Send OTP\r\n  const sendOtp = async (mobile) => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      const phoneNumber = `+91${mobile}`;\r\n      const confirmationResult = await signInWithPhoneNumber(\r\n        auth,\r\n        phoneNumber,\r\n        window.recaptchaVerifier\r\n      );\r\n\r\n      window.confirmationResult = confirmationResult;\r\n      setMessage(\"OTP sent to your mobile number.\");\r\n      setMobileForOtp(mobile);\r\n      setStep(2);\r\n    } catch (err) {\r\n      console.error(\"OTP Error:\", err);\r\n      if (err.code === \"auth/too-many-requests\") {\r\n        setError(\"Too many OTP requests. Please wait and try again later.\");\r\n      } else if (err.code === \"auth/missing-phone-number\") {\r\n        setError(\"Phone number सही format में दो (+91XXXXXXXXXX).\");\r\n      } else {\r\n        setError(err.message || \"Failed to send OTP. Please try again.\");\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ✅ Verify OTP + Complete Signup\r\n  const verifyOtp = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      await window.confirmationResult.confirm(otp);\r\n\r\n      // ✅ Directly complete signup (multi-user per mobile allowed)\r\n      const response = await authAPI.completeSignup({\r\n        ...formData,\r\n        mobileNumber: mobileForOtp,\r\n      });\r\n\r\n      if (response.success) {\r\n        setMessage(\r\n          `Signup successful ✅ Your User ID: ${response.data.userId}`\r\n        );\r\n        console.log(\"All User IDs for this number:\", response.data.allUserIds);\r\n        setStep(3);\r\n      } else {\r\n        throw new Error(response.message || \"Signup failed\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Signup OTP error:\", err);\r\n      setError(err.message || \"Invalid OTP. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ✅ Handle Signup Submit\r\n  const handleFormSubmit = async (values) => {\r\n    setFormData(values);\r\n    await sendOtp(values.mobileNumber);\r\n  };\r\n\r\n  // ==================== SCREENS ====================\r\n\r\n  // Step 3: Success\r\n  if (step === 3) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-md w-full space-y-8\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-3xl font-extrabold text-gray-900\">\r\n              Registration Complete\r\n            </h2>\r\n            <p className=\"mt-2 text-sm text-gray-600\">\r\n              Please proceed to login with your credentials.\r\n            </p>\r\n          </div>\r\n          <div className=\"mt-6\">\r\n            <button\r\n              onClick={() => navigate(\"/login\")}\r\n              className=\"w-full py-2 px-4 rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\r\n            >\r\n              Proceed to Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Step 2: OTP Verification\r\n  if (step === 2) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n        <div id=\"recaptcha-container\"></div>\r\n        <div className=\"max-w-md w-full space-y-8\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\r\n            <p className=\"mt-2 text-sm text-gray-600\">\r\n              Enter the 6-digit OTP sent to +91 {mobileForOtp}\r\n            </p>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\r\n              {message}\r\n            </div>\r\n          )}\r\n          {error && (\r\n            <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"space-y-4\">\r\n            <input\r\n              type=\"text\"\r\n              value={otp}\r\n              onChange={(e) =>\r\n                setOtp(e.target.value.replace(/\\D/g, \"\").slice(0, 6))\r\n              }\r\n              placeholder=\"Enter 6-digit OTP\"\r\n              className=\"w-full px-3 py-2 border rounded-md text-center text-lg tracking-widest\"\r\n              inputMode=\"numeric\"\r\n              autoFocus\r\n            />\r\n            <button\r\n              onClick={verifyOtp}\r\n              disabled={loading || otp.length !== 6}\r\n              className=\"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\r\n            >\r\n              {loading ? \"Verifying...\" : \"Verify OTP\"}\r\n            </button>\r\n            <button\r\n              onClick={() => sendOtp(mobileForOtp)}\r\n              disabled={loading}\r\n              className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 text-sm\"\r\n            >\r\n              Resend OTP\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                setStep(1);\r\n                setError(\"\");\r\n                setMessage(\"\");\r\n              }}\r\n              className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\r\n            >\r\n              ← Back to Signup\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Step 1: Registration Form\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div id=\"recaptcha-container\"></div>\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-3xl font-extrabold text-gray-900\">\r\n            Create your account\r\n          </h2>\r\n          <p className=\"mt-2 text-sm text-gray-600\">\r\n            Or{\" \"}\r\n            <Link\r\n              to=\"/login\"\r\n              className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n            >\r\n              sign in to your account\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            email: \"\",\r\n            mobileNumber: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleFormSubmit}\r\n        >\r\n          {({ isValid, dirty }) => (\r\n            <Form className=\"mt-8 space-y-6\">\r\n              <div className=\"space-y-4\">\r\n                {/* Name */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium\">Full Name</label>\r\n                  <Field\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Your full name\"\r\n                    className=\"mt-1 block w-full px-3 py-2 border rounded-md\"\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"name\"\r\n                    component=\"div\"\r\n                    className=\"text-sm text-red-600\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Email */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium\">\r\n                    Email (optional)\r\n                  </label>\r\n                  <Field\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"your.email@example.com\"\r\n                    className=\"mt-1 block w-full px-3 py-2 border rounded-md\"\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"email\"\r\n                    component=\"div\"\r\n                    className=\"text-sm text-red-600\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Mobile */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium\">\r\n                    Mobile Number\r\n                  </label>\r\n                  <div className=\"flex mt-1\">\r\n                    <span className=\"px-3 py-2 border bg-gray-50 text-gray-500\">\r\n                      +91\r\n                    </span>\r\n                    <Field\r\n                      name=\"mobileNumber\"\r\n                      type=\"tel\"\r\n                      maxLength=\"10\"\r\n                      placeholder=\"9876543210\"\r\n                      className=\"flex-1 px-3 py-2 border rounded-r-md\"\r\n                    />\r\n                  </div>\r\n                  <ErrorMessage\r\n                    name=\"mobileNumber\"\r\n                    component=\"div\"\r\n                    className=\"text-sm text-red-600\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Password */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium\">Password</label>\r\n                  <Field\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"At least 6 characters\"\r\n                    className=\"mt-1 block w-full px-3 py-2 border rounded-md\"\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"password\"\r\n                    component=\"div\"\r\n                    className=\"text-sm text-red-600\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Confirm Password */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium\">\r\n                    Confirm Password\r\n                  </label>\r\n                  <Field\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm your password\"\r\n                    className=\"mt-1 block w-full px-3 py-2 border rounded-md\"\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"confirmPassword\"\r\n                    component=\"div\"\r\n                    className=\"text-sm text-red-600\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {error && (\r\n                <div className=\"bg-red-50 p-3 text-sm text-red-700 rounded-md\">\r\n                  {error}\r\n                </div>\r\n              )}\r\n\r\n              <button\r\n                type=\"submit\"\r\n                disabled={loading || !isValid || !dirty}\r\n                className=\"w-full py-2 px-4 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\r\n              >\r\n                {loading ? \"Sending OTP...\" : \"Sign Up\"}\r\n              </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}