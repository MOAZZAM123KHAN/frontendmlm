{"ast":null,"code":"// import axios from \"axios\";\n\n// // const API_URL = \"http://localhost:5001/api/wallet\";\n// const API_URL = `${process.env.REACT_APP_API_URL}/wallet`;\n\n// const getAuthHeaders = () => {\n//   const token = localStorage.getItem(\"token\");\n//   if (!token) {\n//     console.warn(\"⚠️ No token found in localStorage!\");\n//     return {};\n//   }\n//   return { Authorization: `Bearer ${token}` };\n// };\n\n// const userWalletAPI = {\n//   getWallet: async (userId) => {\n//     try {\n//       const res = await axios.get(`${API_URL}/user/${userId}`, {\n//         headers: getAuthHeaders(),\n//       });\n//       return res;\n//     } catch (error) {\n//       console.error(\"❌ getWallet error:\", error.response?.data || error.message);\n//       throw error;\n//     }\n//   },\n\n//   getWithdrawals: async (userId) => {\n//     try {\n//       const res = await axios.get(`${API_URL}/withdrawals/${userId}`, {\n//         headers: getAuthHeaders(),\n//       });\n//       return res;\n//     } catch (error) {\n//       console.error(\"❌ getWithdrawals error:\", error.response?.data || error.message);\n//       throw error;\n//     }\n//   },\n\n//   // requestWithdrawal: async (userId, data) => {\n//   //   try {\n//   //     const res = await axios.post(`${API_URL}/withdraw/${userId}`, data, {\n//   //       headers: getAuthHeaders(),\n//   //     });\n//   //     return res;\n//   //   } catch (error) {\n//   //     console.error(\"❌ requestWithdrawal error:\", error.response?.data || error.message);\n//   //     throw error;\n//   //   }\n//   // },\n\n//   requestWithdrawal: async (data) => { // remove userId from param\n//     try {\n//         const res = await axios.post(`${API_URL}/withdraw`, data, { \n//             headers: getAuthHeaders()\n//         });\n//         return res.data;\n//     } catch (error) {\n//         console.error(\"❌ requestWithdrawal error:\", error.response?.data || error.message);\n//         throw error;\n//     }\n// },\n\n// };\n\n// export default userWalletAPI;\n\nimport axios from \"axios\";\nconst API_URL = `${process.env.REACT_APP_API_URL}/wallet`;\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    console.warn(\"⚠️ No token found in localStorage!\");\n    return {};\n  }\n  return {\n    Authorization: `Bearer ${token}`\n  };\n};\nconst userWalletAPI = {\n  getWallet: async userId => {\n    try {\n      const res = await axios.get(`${API_URL}/user/${userId}`, {\n        headers: getAuthHeaders()\n      });\n      return res.data; // return data directly\n    } catch (error) {\n      var _error$response;\n      console.error(\"❌ getWallet error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error;\n    }\n  },\n  getWithdrawals: async userId => {\n    try {\n      const res = await axios.get(`${API_URL}/withdrawals/${userId}`, {\n        headers: getAuthHeaders()\n      });\n      return res.data; // return data directly\n    } catch (error) {\n      var _error$response2;\n      console.error(\"❌ getWithdrawals error:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      throw error;\n    }\n  },\n  requestWithdrawal: async data => {\n    try {\n      const res = await axios.post(`${API_URL}/withdraw`, data, {\n        headers: getAuthHeaders()\n      });\n      return res.data; // return response data directly\n    } catch (error) {\n      var _error$response3;\n      console.error(\"❌ requestWithdrawal error:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      throw error;\n    }\n  }\n};\nexport default userWalletAPI;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getAuthHeaders","token","localStorage","getItem","console","warn","Authorization","userWalletAPI","getWallet","userId","res","get","headers","data","error","_error$response","response","message","getWithdrawals","_error$response2","requestWithdrawal","post","_error$response3"],"sources":["C:/Users/moazz/Desktop/frontend/src/services/userWalletApi.js"],"sourcesContent":["// import axios from \"axios\";\r\n\r\n// // const API_URL = \"http://localhost:5001/api/wallet\";\r\n// const API_URL = `${process.env.REACT_APP_API_URL}/wallet`;\r\n\r\n// const getAuthHeaders = () => {\r\n//   const token = localStorage.getItem(\"token\");\r\n//   if (!token) {\r\n//     console.warn(\"⚠️ No token found in localStorage!\");\r\n//     return {};\r\n//   }\r\n//   return { Authorization: `Bearer ${token}` };\r\n// };\r\n\r\n// const userWalletAPI = {\r\n//   getWallet: async (userId) => {\r\n//     try {\r\n//       const res = await axios.get(`${API_URL}/user/${userId}`, {\r\n//         headers: getAuthHeaders(),\r\n//       });\r\n//       return res;\r\n//     } catch (error) {\r\n//       console.error(\"❌ getWallet error:\", error.response?.data || error.message);\r\n//       throw error;\r\n//     }\r\n//   },\r\n\r\n//   getWithdrawals: async (userId) => {\r\n//     try {\r\n//       const res = await axios.get(`${API_URL}/withdrawals/${userId}`, {\r\n//         headers: getAuthHeaders(),\r\n//       });\r\n//       return res;\r\n//     } catch (error) {\r\n//       console.error(\"❌ getWithdrawals error:\", error.response?.data || error.message);\r\n//       throw error;\r\n//     }\r\n//   },\r\n\r\n//   // requestWithdrawal: async (userId, data) => {\r\n//   //   try {\r\n//   //     const res = await axios.post(`${API_URL}/withdraw/${userId}`, data, {\r\n//   //       headers: getAuthHeaders(),\r\n//   //     });\r\n//   //     return res;\r\n//   //   } catch (error) {\r\n//   //     console.error(\"❌ requestWithdrawal error:\", error.response?.data || error.message);\r\n//   //     throw error;\r\n//   //   }\r\n//   // },\r\n\r\n//   requestWithdrawal: async (data) => { // remove userId from param\r\n//     try {\r\n//         const res = await axios.post(`${API_URL}/withdraw`, data, { \r\n//             headers: getAuthHeaders()\r\n//         });\r\n//         return res.data;\r\n//     } catch (error) {\r\n//         console.error(\"❌ requestWithdrawal error:\", error.response?.data || error.message);\r\n//         throw error;\r\n//     }\r\n// },\r\n\r\n// };\r\n\r\n// export default userWalletAPI;\r\n\r\n\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = `${process.env.REACT_APP_API_URL}/wallet`;\r\n\r\nconst getAuthHeaders = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    console.warn(\"⚠️ No token found in localStorage!\");\r\n    return {};\r\n  }\r\n  return { Authorization: `Bearer ${token}` };\r\n};\r\n\r\nconst userWalletAPI = {\r\n  getWallet: async (userId) => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/user/${userId}`, {\r\n        headers: getAuthHeaders(),\r\n      });\r\n      return res.data; // return data directly\r\n    } catch (error) {\r\n      console.error(\"❌ getWallet error:\", error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getWithdrawals: async (userId) => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/withdrawals/${userId}`, {\r\n        headers: getAuthHeaders(),\r\n      });\r\n      return res.data; // return data directly\r\n    } catch (error) {\r\n      console.error(\"❌ getWithdrawals error:\", error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  requestWithdrawal: async (data) => {\r\n    try {\r\n      const res = await axios.post(`${API_URL}/withdraw`, data, {\r\n        headers: getAuthHeaders(),\r\n      });\r\n      return res.data; // return response data directly\r\n    } catch (error) {\r\n      console.error(\"❌ requestWithdrawal error:\", error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default userWalletAPI;\r\n"],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,SAAS;AAEzD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACVG,OAAO,CAACC,IAAI,CAAC,oCAAoC,CAAC;IAClD,OAAO,CAAC,CAAC;EACX;EACA,OAAO;IAAEC,aAAa,EAAE,UAAUL,KAAK;EAAG,CAAC;AAC7C,CAAC;AAED,MAAMM,aAAa,GAAG;EACpBC,SAAS,EAAE,MAAOC,MAAM,IAAK;IAC3B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,SAASa,MAAM,EAAE,EAAE;QACvDG,OAAO,EAAEZ,cAAc,CAAC;MAC1B,CAAC,CAAC;MACF,OAAOU,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdX,OAAO,CAACU,KAAK,CAAC,oBAAoB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACE,QAAQ,cAAAD,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;MAC1E,MAAMH,KAAK;IACb;EACF,CAAC;EAEDI,cAAc,EAAE,MAAOT,MAAM,IAAK;IAChC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,gBAAgBa,MAAM,EAAE,EAAE;QAC9DG,OAAO,EAAEZ,cAAc,CAAC;MAC1B,CAAC,CAAC;MACF,OAAOU,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAK,gBAAA;MACdf,OAAO,CAACU,KAAK,CAAC,yBAAyB,EAAE,EAAAK,gBAAA,GAAAL,KAAK,CAACE,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBN,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;MAC/E,MAAMH,KAAK;IACb;EACF,CAAC;EAEDM,iBAAiB,EAAE,MAAOP,IAAI,IAAK;IACjC,IAAI;MACF,MAAMH,GAAG,GAAG,MAAMf,KAAK,CAAC0B,IAAI,CAAC,GAAGzB,OAAO,WAAW,EAAEiB,IAAI,EAAE;QACxDD,OAAO,EAAEZ,cAAc,CAAC;MAC1B,CAAC,CAAC;MACF,OAAOU,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAQ,gBAAA;MACdlB,OAAO,CAACU,KAAK,CAAC,4BAA4B,EAAE,EAAAQ,gBAAA,GAAAR,KAAK,CAACE,QAAQ,cAAAM,gBAAA,uBAAdA,gBAAA,CAAgBT,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;MAClF,MAAMH,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeP,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}