{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moazz\\\\Downloads\\\\Ecommerce-MLM-Chain-main\\\\Ecommerce-MLM-Chain-main\\\\frontend\\\\frontend\\\\src\\\\components\\\\dashboard\\\\Wallet.jsx\",\n  _s = $RefreshSig$();\n// // // // // import React, { useState, useEffect, useCallback } from 'react';\n// // // // // import { ArrowUp, Clock, CheckCircle, X, Loader, Banknote, Plus, Minus } from 'lucide-react';\n\n// // // // // const EnhancedWallet = ({ userId: propUserId, userToken: propUserToken }) => {\n// // // // //   const [wallet, setWallet] = useState({ balance: 0, transactions: [] });\n// // // // //   const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n// // // // //   const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n// // // // //   const [loading, setLoading] = useState({ wallet: false, withdrawals: false, submit: false });\n// // // // //   const [error, setError] = useState('');\n// // // // //   const [success, setSuccess] = useState('');\n// // // // //   const [activeTab, setActiveTab] = useState('transactions'); // 'transactions' or 'withdrawals'\n\n// // // // //   // Withdrawal form state\n// // // // //   const [withdrawalForm, setWithdrawalForm] = useState({\n// // // // //     bankName: '',\n// // // // //     accountNumber: '',\n// // // // //     ifscCode: '',\n// // // // //     mobileNumber: '',\n// // // // //     amount: ''\n// // // // //   });\n\n// // // // //   // Form validation state\n// // // // //   const [formErrors, setFormErrors] = useState({\n// // // // //     bankName: '',\n// // // // //     accountNumber: '',\n// // // // //     ifscCode: '',\n// // // // //     mobileNumber: '',\n// // // // //     amount: ''\n// // // // //   });\n\n// // // // //   // helper: parse JWT to extract userId if token contains it\n// // // // //   const parseJwt = (token) => {\n// // // // //     if (!token) return null;\n// // // // //     try {\n// // // // //       const payload = JSON.parse(atob(token.split('.')[1]));\n// // // // //       return payload.userId || payload.sub || null;\n// // // // //     } catch (e) {\n// // // // //       return null;\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Resolve token and userId (prop -> localStorage.authData -> token)\n// // // // //   const resolvedToken = propUserToken\n// // // // //     || localStorage.getItem('token')\n// // // // //     || JSON.parse(localStorage.getItem('authData') || '{}')?.token\n// // // // //     || '';\n\n// // // // //   const resolvedUserId = propUserId\n// // // // //     || JSON.parse(localStorage.getItem('authData') || '{}')?.userId\n// // // // //     || parseJwt(resolvedToken)\n// // // // //     || null;\n\n// // // // //   const userAuthHeaders = () => {\n// // // // //     const token = resolvedToken;\n// // // // //     return {\n// // // // //       'Content-Type': 'application/json',\n// // // // //       Authorization: token ? `Bearer ${token}` : '',\n// // // // //     };\n// // // // //   };\n\n// // // // //   const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// // // // //   // fetch functions wrapped with useCallback so they can be safely used in useEffect deps\n// // // // //   const fetchWalletData = useCallback(async () => {\n// // // // //     if (!resolvedUserId) return;\n// // // // //     try {\n// // // // //       const res = await fetch(`${API_URL}/wallet/user/${resolvedUserId}`, { headers: userAuthHeaders() });\n// // // // //       const data = await res.json();\n// // // // //       if (!res.ok) throw new Error(data?.message || 'Failed to load wallet');\n// // // // //       setWallet({ balance: data.wallet?.balance || 0, transactions: data.wallet?.transactions || [] });\n// // // // //     } catch (err) {\n// // // // //       setError('Failed to fetch wallet data');\n// // // // //     }\n// // // // //   }, [resolvedUserId, resolvedToken]);\n\n// // // // //   const fetchWithdrawalHistory = useCallback(async () => {\n// // // // //     if (!resolvedUserId) return;\n// // // // //     try {\n// // // // //       const res = await fetch(`${API_URL}/wallet/withdrawal-requests/user/${resolvedUserId}`, { headers: userAuthHeaders() });\n// // // // //       const data = await res.json();\n// // // // //       if (!res.ok) throw new Error(data?.message || 'Failed to load withdrawal history');\n// // // // //       setWithdrawalRequests(data.withdrawalRequests || []);\n// // // // //     } catch (err) {\n// // // // //       setError('Failed to fetch withdrawal history');\n// // // // //     }\n// // // // //   }, [resolvedUserId, resolvedToken]);\n\n// // // // //   // Fetch data with error handling: skip requests if no userId/token\n// // // // //   useEffect(() => {\n// // // // //     const fetchData = async () => {\n// // // // //       if (!resolvedUserId) {\n// // // // //         setError('User not authenticated. Please login.');\n// // // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // // //         return;\n// // // // //       }\n// // // // //       if (!resolvedToken) {\n// // // // //         setError('Missing auth token. Please login again.');\n// // // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // // //         return;\n// // // // //       }\n\n// // // // //       try {\n// // // // //         setLoading(prev => ({ ...prev, wallet: true, withdrawals: true }));\n// // // // //         await Promise.all([fetchWalletData(), fetchWithdrawalHistory()]);\n// // // // //       } catch (err) {\n// // // // //         setError('Failed to load wallet data. Please try again.');\n// // // // //       } finally {\n// // // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // // //       }\n// // // // //     };\n\n// // // // //     fetchData();\n// // // // //   }, [resolvedUserId, resolvedToken, fetchWalletData, fetchWithdrawalHistory]); // <-- use resolved values\n\n// // // // //   const validateForm = () => {\n// // // // //     const errors = {};\n// // // // //     let isValid = true;\n\n// // // // //     if (!withdrawalForm.bankName.trim()) {\n// // // // //       errors.bankName = 'Bank name is required';\n// // // // //       isValid = false;\n// // // // //     }\n\n// // // // //     if (!withdrawalForm.accountNumber.trim() || !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)) {\n// // // // //       errors.accountNumber = 'Valid account number is required (9-18 digits)';\n// // // // //       isValid = false;\n// // // // //     }\n\n// // // // //     if (!withdrawalForm.ifscCode.trim() || !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)) {\n// // // // //       errors.ifscCode = 'Valid IFSC code is required';\n// // // // //       isValid = false;\n// // // // //     }\n\n// // // // //     if (!withdrawalForm.mobileNumber.trim() || !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)) {\n// // // // //       errors.mobileNumber = 'Valid Indian mobile number is required';\n// // // // //       isValid = false;\n// // // // //     }\n\n// // // // //     if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n// // // // //       errors.amount = 'Minimum withdrawal amount is â‚¹1000';\n// // // // //       isValid = false;\n// // // // //     } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n// // // // //       errors.amount = 'Insufficient balance';\n// // // // //       isValid = false;\n// // // // //     }\n\n// // // // //     setFormErrors(errors);\n// // // // //     return isValid;\n// // // // //   };\n\n// // // // //   const handleWithdrawalSubmit = async () => {\n// // // // //     if (!validateForm()) return;\n\n// // // // //     setLoading(prev => ({ ...prev, submit: true }));\n// // // // //     setError('');\n// // // // //     setSuccess('');\n\n// // // // //     try {\n// // // // //       const body = {\n// // // // //         userId: userId,\n// // // // //         amount: parseFloat(withdrawalForm.amount),\n// // // // //         bankName: withdrawalForm.bankName,\n// // // // //         accountNumber: withdrawalForm.accountNumber,\n// // // // //         ifscCode: withdrawalForm.ifscCode,\n// // // // //         mobileNumber: withdrawalForm.mobileNumber,\n// // // // //       };\n\n// // // // //       const res = await fetch(`${API_URL}/wallet/withdraw`, {\n// // // // //         method: 'POST',\n// // // // //         headers: userAuthHeaders(),\n// // // // //         body: JSON.stringify(body),\n// // // // //       });\n// // // // //       const data = await res.json();\n// // // // //       if (!data.success) throw new Error(data.message || 'Withdrawal failed');\n\n// // // // //       // refresh UI\n// // // // //       await Promise.all([fetchWalletData(), fetchWithdrawalHistory()]);\n// // // // //       setSuccess('Withdrawal request submitted successfully!');\n// // // // //       setShowWithdrawForm(false);\n// // // // //       setLoading(prev => ({ ...prev, submit: false }));\n// // // // //     } catch (err) {\n// // // // //       setError('Failed to submit withdrawal request. Please try again.');\n// // // // //     } finally {\n// // // // //       setLoading(prev => ({ ...prev, submit: false }));\n// // // // //     }\n// // // // //   };\n\n// // // // //   const handleInputChange = (e) => {\n// // // // //     const { name, value } = e.target;\n// // // // //     setWithdrawalForm(prev => ({\n// // // // //       ...prev,\n// // // // //       [name]: value\n// // // // //     }));\n\n// // // // //     // Clear error when user starts typing\n// // // // //     if (formErrors[name]) {\n// // // // //       setFormErrors(prev => ({\n// // // // //         ...prev,\n// // // // //         [name]: ''\n// // // // //       }));\n// // // // //     }\n// // // // //   };\n\n// // // // //   const getStatusIcon = (status) => {\n// // // // //     switch (status) {\n// // // // //       case 'Pending':\n// // // // //         return <Clock className=\"h-5 w-5 text-yellow-500\" />;\n// // // // //       case 'Completed':\n// // // // //         return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n// // // // //       case 'Rejected':\n// // // // //         return <X className=\"h-5 w-5 text-red-500\" />;\n// // // // //       default:\n// // // // //         return <Clock className=\"h-5 w-5 text-gray-500\" />;\n// // // // //     }\n// // // // //   };\n\n// // // // //   const getStatusColor = (status) => {\n// // // // //     switch (status) {\n// // // // //       case 'Pending':\n// // // // //         return 'text-yellow-600 bg-yellow-50';\n// // // // //       case 'Completed':\n// // // // //         return 'text-green-600 bg-green-50';\n// // // // //       case 'Rejected':\n// // // // //         return 'text-red-600 bg-red-50';\n// // // // //       default:\n// // // // //         return 'text-gray-600 bg-gray-50';\n// // // // //     }\n// // // // //   };\n\n// // // // //   const formatDate = (dateString) => {\n// // // // //     const options = { day: 'numeric', month: 'short', year: 'numeric' };\n// // // // //     return new Date(dateString).toLocaleDateString('en-IN', options);\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <div className=\"p-4 md:p-6 max-w-6xl mx-auto\">\n// // // // //       <div className=\"mb-6\">\n// // // // //         <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900\">Wallet Dashboard</h2>\n// // // // //         <p className=\"text-gray-600\">Manage your earnings and withdrawals</p>\n// // // // //       </div>\n\n// // // // //       {/* Notifications */}\n// // // // //       {error && (\n// // // // //         <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg flex items-start gap-3\">\n// // // // //           <X className=\"h-5 w-5 text-red-500 mt-0.5 flex-shrink-0\" />\n// // // // //           <p className=\"text-red-600\">{error}</p>\n// // // // //         </div>\n// // // // //       )}\n\n// // // // //       {success && (\n// // // // //         <div className=\"mb-4 p-4 bg-green-50 border border-green-200 rounded-lg flex items-start gap-3\">\n// // // // //           <CheckCircle className=\"h-5 w-5 text-green-500 mt-0.5 flex-shrink-0\" />\n// // // // //           <p className=\"text-green-600\">{success}</p>\n// // // // //         </div>\n// // // // //       )}\n\n// // // // //       {/* Balance Card */}\n// // // // //       <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl shadow-lg p-6 mb-6 text-white\">\n// // // // //         <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n// // // // //           <div>\n// // // // //             <p className=\"text-blue-100 text-sm\">Available Balance</p>\n// // // // //             <p className=\"text-3xl md:text-4xl font-bold\">â‚¹{wallet.balance.toLocaleString('en-IN')}</p>\n// // // // //             <p className=\"text-blue-100 text-sm mt-2\">\n// // // // //               {wallet.balance >= 1000 ? (\n// // // // //                 'Eligible for withdrawal'\n// // // // //               ) : (\n// // // // //                 <>\n// // // // //                   <span className=\"font-medium\">â‚¹{(1000 - wallet.balance).toLocaleString('en-IN')}</span> more needed for withdrawal\n// // // // //                 </>\n// // // // //               )}\n// // // // //             </p>\n// // // // //           </div>\n// // // // //           <div className=\"flex gap-3 w-full md:w-auto\">\n// // // // //             <button\n// // // // //               onClick={() => setShowWithdrawForm(true)}\n// // // // //               disabled={wallet.balance < 1000}\n// // // // //               className={`flex items-center gap-2 px-4 py-2 rounded-lg font-medium transition-colors w-full md:w-auto justify-center ${\n// // // // //                 wallet.balance >= 1000\n// // // // //                   ? 'bg-white text-blue-600 hover:bg-blue-50'\n// // // // //                   : 'bg-gray-400 text-gray-200 cursor-not-allowed'\n// // // // //               }`}\n// // // // //             >\n// // // // //               <ArrowUp className=\"h-5 w-5\" />\n// // // // //               <span>Withdraw</span>\n// // // // //             </button>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Tabs */}\n// // // // //       <div className=\"flex border-b border-gray-200 mb-6\">\n// // // // //         <button\n// // // // //           className={`py-3 px-6 font-medium text-sm border-b-2 transition-colors ${\n// // // // //             activeTab === 'transactions'\n// // // // //               ? 'border-blue-500 text-blue-600'\n// // // // //               : 'border-transparent text-gray-500 hover:text-gray-700'\n// // // // //           }`}\n// // // // //           onClick={() => setActiveTab('transactions')}\n// // // // //         >\n// // // // //           Transactions\n// // // // //         </button>\n// // // // //         <button\n// // // // //           className={`py-3 px-6 font-medium text-sm border-b-2 transition-colors ${\n// // // // //             activeTab === 'withdrawals'\n// // // // //               ? 'border-blue-500 text-blue-600'\n// // // // //               : 'border-transparent text-gray-500 hover:text-gray-700'\n// // // // //           }`}\n// // // // //           onClick={() => setActiveTab('withdrawals')}\n// // // // //         >\n// // // // //           Withdrawals\n// // // // //         </button>\n// // // // //       </div>\n\n// // // // //       {/* Content based on active tab */}\n// // // // //       {activeTab === 'transactions' ? (\n// // // // //         <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n// // // // //           <div className=\"p-4 border-b border-gray-200 flex justify-between items-center\">\n// // // // //             <h3 className=\"text-lg font-semibold text-gray-900\">Transaction History</h3>\n// // // // //             <div className=\"text-sm text-gray-500\">\n// // // // //               {wallet.transactions.length} records\n// // // // //             </div>\n// // // // //           </div>\n// // // // //           <div className=\"max-h-[500px] overflow-y-auto\">\n// // // // //             {loading.wallet ? (\n// // // // //               <div className=\"p-8 text-center\">\n// // // // //                 <Loader className=\"h-8 w-8 mx-auto animate-spin text-blue-500\" />\n// // // // //                 <p className=\"mt-2 text-gray-500\">Loading transactions...</p>\n// // // // //               </div>\n// // // // //             ) : wallet.transactions.length === 0 ? (\n// // // // //               <div className=\"p-8 text-center text-gray-500\">\n// // // // //                 <Banknote className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n// // // // //                 <p>No transactions yet</p>\n// // // // //               </div>\n// // // // //             ) : (\n// // // // //               <div className=\"divide-y divide-gray-200\">\n// // // // //                 {wallet.transactions.map((txn) => (\n// // // // //                   <div key={txn.id} className=\"p-4 hover:bg-gray-50 transition-colors\">\n// // // // //                     <div className=\"flex justify-between items-center\">\n// // // // //                       <div className=\"flex items-center gap-4\">\n// // // // //                         <div className={`p-3 rounded-full ${txn.amount > 0 ? 'bg-green-100' : 'bg-red-100'}`}>\n// // // // //                           {txn.amount > 0 ? (\n// // // // //                             <Plus className=\"h-5 w-5 text-green-600\" />\n// // // // //                           ) : (\n// // // // //                             <Minus className=\"h-5 w-5 text-red-600\" />\n// // // // //                           )}\n// // // // //                         </div>\n// // // // //                         <div>\n// // // // //                           <p className=\"font-medium text-gray-900\">{txn.type}</p>\n// // // // //                           <p className=\"text-sm text-gray-500\">{txn.description}</p>\n// // // // //                           <p className=\"text-xs text-gray-400\">{formatDate(txn.date)}</p>\n// // // // //                         </div>\n// // // // //                       </div>\n// // // // //                       <div className=\"text-right\">\n// // // // //                         <p className={`font-semibold ${txn.amount > 0 ? 'text-green-600' : 'text-red-600'}`}>\n// // // // //                           {txn.amount > 0 ? '+' : ''}â‚¹{Math.abs(txn.amount).toLocaleString('en-IN')}\n// // // // //                         </p>\n// // // // //                         <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(txn.status)}`}>\n// // // // //                           {txn.status}\n// // // // //                         </span>\n// // // // //                       </div>\n// // // // //                     </div>\n// // // // //                   </div>\n// // // // //                 ))}\n// // // // //               </div>\n// // // // //             )}\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       ) : (\n// // // // //         <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n// // // // //           <div className=\"p-4 border-b border-gray-200 flex justify-between items-center\">\n// // // // //             <h3 className=\"text-lg font-semibold text-gray-900\">Withdrawal History</h3>\n// // // // //             <div className=\"text-sm text-gray-500\">\n// // // // //               {withdrawalRequests.length} requests\n// // // // //             </div>\n// // // // //           </div>\n// // // // //           <div className=\"max-h-[500px] overflow-y-auto\">\n// // // // //             {loading.withdrawals ? (\n// // // // //               <div className=\"p-8 text-center\">\n// // // // //                 <Loader className=\"h-8 w-8 mx-auto animate-spin text-blue-500\" />\n// // // // //                 <p className=\"mt-2 text-gray-500\">Loading withdrawals...</p>\n// // // // //               </div>\n// // // // //             ) : withdrawalRequests.length === 0 ? (\n// // // // //               <div className=\"p-8 text-center text-gray-500\">\n// // // // //                 <ArrowUp className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n// // // // //                 <p>No withdrawal requests yet</p>\n// // // // //                 <button\n// // // // //                   onClick={() => setShowWithdrawForm(true)}\n// // // // //                   className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n// // // // //                 >\n// // // // //                   Make your first withdrawal\n// // // // //                 </button>\n// // // // //               </div>\n// // // // //             ) : (\n// // // // //               <div className=\"divide-y divide-gray-200\">\n// // // // //                 {withdrawalRequests.map((request) => (\n// // // // //                   <div key={request.id} className=\"p-4 hover:bg-gray-50 transition-colors\">\n// // // // //                     <div className=\"flex justify-between items-start\">\n// // // // //                       <div className=\"flex items-start gap-3\">\n// // // // //                         {getStatusIcon(request.status)}\n// // // // //                         <div>\n// // // // //                           <p className=\"font-medium text-gray-900\">â‚¹{request.amount.toLocaleString('en-IN')}</p>\n// // // // //                           <p className=\"text-sm text-gray-600\">{request.bankName}</p>\n// // // // //                           <p className=\"text-xs text-gray-500\">Account: {request.accountNumber}</p>\n// // // // //                           <p className=\"text-xs text-gray-500\">IFSC: {request.ifscCode}</p>\n// // // // //                           <p className=\"text-xs text-gray-400\">{formatDate(request.date)}</p>\n// // // // //                         </div>\n// // // // //                       </div>\n// // // // //                       <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(request.status)}`}>\n// // // // //                         {request.status}\n// // // // //                       </span>\n// // // // //                     </div>\n// // // // //                   </div>\n// // // // //                 ))}\n// // // // //               </div>\n// // // // //             )}\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       )}\n\n// // // // //       {/* Withdrawal Form Modal */}\n// // // // //       {showWithdrawForm && (\n// // // // //         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n// // // // //           <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full max-h-[90vh] overflow-y-auto\">\n// // // // //             <div className=\"p-6\">\n// // // // //               <div className=\"flex justify-between items-center mb-4\">\n// // // // //                 <h3 className=\"text-lg font-semibold text-gray-900\">Withdraw Money</h3>\n// // // // //                 <button\n// // // // //                   onClick={() => setShowWithdrawForm(false)}\n// // // // //                   className=\"text-gray-400 hover:text-gray-600\"\n// // // // //                   disabled={loading.submit}\n// // // // //                 >\n// // // // //                   <X className=\"h-6 w-6\" />\n// // // // //                 </button>\n// // // // //               </div>\n\n// // // // //               <div className=\"space-y-4\">\n// // // // //                 <div>\n// // // // //                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// // // // //                     Bank Name <span className=\"text-red-500\">*</span>\n// // // // //                   </label>\n// // // // //                   <input\n// // // // //                     type=\"text\"\n// // // // //                     name=\"bankName\"\n// // // // //                     value={withdrawalForm.bankName}\n// // // // //                     onChange={handleInputChange}\n// // // // //                     required\n// // // // //                     className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\n// // // // //                       formErrors.bankName ? 'border-red-500' : 'border-gray-300'\n// // // // //                     }`}\n// // // // //                     placeholder=\"Enter bank name\"\n// // // // //                     disabled={loading.submit}\n// // // // //                   />\n// // // // //                   {formErrors.bankName && (\n// // // // //                     <p className=\"mt-1 text-sm text-red-600\">{formErrors.bankName}</p>\n// // // // //                   )}\n// // // // //                 </div>\n\n// // // // //                 <div>\n// // // // //                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// // // // //                     Account Number <span className=\"text-red-500\">*</span>\n// // // // //                   </label>\n// // // // //                   <input\n// // // // //                     type=\"text\"\n// // // // //                     name=\"accountNumber\"\n// // // // //                     value={withdrawalForm.accountNumber}\n// // // // //                     onChange={handleInputChange}\n// // // // //                     required\n// // // // //                     className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\n// // // // //                       formErrors.accountNumber ? 'border-red-500' : 'border-gray-300'\n// // // // //                     }`}\n// // // // //                     placeholder=\"Enter account number\"\n// // // // //                     disabled={loading.submit}\n// // // // //                   />\n// // // // //                   {formErrors.accountNumber && (\n// // // // //                     <p className=\"mt-1 text-sm text-red-600\">{formErrors.accountNumber}</p>\n// // // // //                   )}\n// // // // //                 </div>\n\n// // // // //                 <div>\n// // // // //                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// // // // //                     IFSC Code <span className=\"text-red-500\">*</span>\n// // // // //                   </label>\n// // // // //                   <input\n// // // // //                     type=\"text\"\n// // // // //                     name=\"ifscCode\"\n// // // // //                     value={withdrawalForm.ifscCode}\n// // // // //                     onChange={handleInputChange}\n// // // // //                     required\n// // // // //                     className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\n// // // // //                       formErrors.ifscCode ? 'border-red-500' : 'border-gray-300'\n// // // // //                     }`}\n// // // // //                     placeholder=\"Enter IFSC code\"\n// // // // //                     disabled={loading.submit}\n// // // // //                   />\n// // // // //                   {formErrors.ifscCode && (\n// // // // //                     <p className=\"mt-1 text-sm text-red-600\">{formErrors.ifscCode}</p>\n// // // // //                   )}\n// // // // //                 </div>\n\n// // // // //                 <div>\n// // // // //                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// // // // //                     Mobile Number <span className=\"text-red-500\">*</span>\n// // // // //                   </label>\n// // // // //                   <input\n// // // // //                     type=\"tel\"\n// // // // //                     name=\"mobileNumber\"\n// // // // //                     value={withdrawalForm.mobileNumber}\n// // // // //                     onChange={handleInputChange}\n// // // // //                     required\n// // // // //                     className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\n// // // // //                       formErrors.mobileNumber ? 'border-red-500' : 'border-gray-300'\n// // // // //                     }`}\n// // // // //                     placeholder=\"Enter mobile number\"\n// // // // //                     disabled={loading.submit}\n// // // // //                   />\n// // // // //                   {formErrors.mobileNumber && (\n// // // // //                     <p className=\"mt-1 text-sm text-red-600\">{formErrors.mobileNumber}</p>\n// // // // //                   )}\n// // // // //                 </div>\n\n// // // // //                 <div>\n// // // // //                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// // // // //                     Amount (â‚¹) <span className=\"text-red-500\">*</span>\n// // // // //                   </label>\n// // // // //                   <input\n// // // // //                     type=\"number\"\n// // // // //                     name=\"amount\"\n// // // // //                     value={withdrawalForm.amount}\n// // // // //                     onChange={handleInputChange}\n// // // // //                     required\n// // // // //                     min=\"1000\"\n// // // // //                     max={wallet.balance}\n// // // // //                     className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\n// // // // //                       formErrors.amount ? 'border-red-500' : 'border-gray-300'\n// // // // //                     }`}\n// // // // //                     placeholder=\"Minimum â‚¹1000\"\n// // // // //                     disabled={loading.submit}\n// // // // //                   />\n// // // // //                   {formErrors.amount && (\n// // // // //                     <p className=\"mt-1 text-sm text-red-600\">{formErrors.amount}</p>\n// // // // //                   )}\n// // // // //                   <p className=\"text-xs text-gray-500 mt-1\">\n// // // // //                     Available: â‚¹{wallet.balance.toLocaleString('en-IN')} | Minimum: â‚¹1,000\n// // // // //                   </p>\n// // // // //                 </div>\n\n// // // // //                 <div className=\"flex gap-3 pt-4\">\n// // // // //                   <button\n// // // // //                     type=\"button\"\n// // // // //                     onClick={() => setShowWithdrawForm(false)}\n// // // // //                     disabled={loading.submit}\n// // // // //                     className=\"flex-1 py-3 px-4 border border-gray-300 rounded-lg text-gray-700 font-medium hover:bg-gray-50 disabled:opacity-50\"\n// // // // //                   >\n// // // // //                     Cancel\n// // // // //                   </button>\n// // // // //                   <button\n// // // // //                     type=\"button\"\n// // // // //                     onClick={handleWithdrawalSubmit}\n// // // // //                     disabled={loading.submit}\n// // // // //                     className=\"flex-1 py-3 px-4 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\n// // // // //                   >\n// // // // //                     {loading.submit ? (\n// // // // //                       <>\n// // // // //                         <Loader className=\"h-4 w-4 animate-spin\" />\n// // // // //                         Processing...\n// // // // //                       </>\n// // // // //                     ) : (\n// // // // //                       'Submit Request'\n// // // // //                     )}\n// // // // //                   </button>\n// // // // //                 </div>\n// // // // //               </div>\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // export default EnhancedWallet;\n\n// // // // import React, { useState, useEffect, useCallback } from 'react';\n// // // // import { ArrowUp, Clock, CheckCircle, X, Loader, Banknote, Plus, Minus } from 'lucide-react';\n\n// // // // const EnhancedWallet = ({ userId: propUserId, userToken: propUserToken }) => {\n// // // //   const [wallet, setWallet] = useState({ balance: 0, transactions: [] });\n// // // //   const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n// // // //   const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n// // // //   const [loading, setLoading] = useState({ wallet: false, withdrawals: false, submit: false });\n// // // //   const [error, setError] = useState('');\n// // // //   const [success, setSuccess] = useState('');\n// // // //   const [activeTab, setActiveTab] = useState('transactions');\n\n// // // //   const [withdrawalForm, setWithdrawalForm] = useState({\n// // // //     bankName: '',\n// // // //     accountNumber: '',\n// // // //     ifscCode: '',\n// // // //     mobileNumber: '',\n// // // //     amount: ''\n// // // //   });\n\n// // // //   const [formErrors, setFormErrors] = useState({\n// // // //     bankName: '',\n// // // //     accountNumber: '',\n// // // //     ifscCode: '',\n// // // //     mobileNumber: '',\n// // // //     amount: ''\n// // // //   });\n\n// // // //   const parseJwt = (token) => {\n// // // //     if (!token) return null;\n// // // //     try {\n// // // //       const payload = JSON.parse(atob(token.split('.')[1]));\n// // // //       return payload.userId || payload.sub || null;\n// // // //     } catch {\n// // // //       return null;\n// // // //     }\n// // // //   };\n\n// // // //   const resolvedToken = propUserToken\n// // // //     || localStorage.getItem('token')\n// // // //     || JSON.parse(localStorage.getItem('authData') || '{}')?.token\n// // // //     || '';\n\n// // // //   const resolvedUserId = propUserId\n// // // //     || JSON.parse(localStorage.getItem('authData') || '{}')?.userId\n// // // //     || parseJwt(resolvedToken)\n// // // //     || null;\n\n// // // //   const userAuthHeaders = () => {\n// // // //     const token = resolvedToken;\n// // // //     return {\n// // // //       'Content-Type': 'application/json',\n// // // //       Authorization: token ? `Bearer ${token}` : '',\n// // // //     };\n// // // //   };\n\n// // // //   const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// // // //   const fetchWalletData = useCallback(async () => {\n// // // //     if (!resolvedUserId) return;\n// // // //     try {\n// // // //       const res = await fetch(`${API_URL}/wallet/user/${resolvedUserId}`, { headers: userAuthHeaders() });\n// // // //       const data = await res.json();\n// // // //       if (!res.ok) throw new Error(data?.message || 'Failed to load wallet');\n// // // //       setWallet({ balance: data.wallet?.balance || 0, transactions: data.wallet?.transactions || [] });\n// // // //     } catch {\n// // // //       setError('Failed to fetch wallet data');\n// // // //     }\n// // // //   }, [resolvedUserId, resolvedToken]);\n\n// // // //   const fetchWithdrawalHistory = useCallback(async () => {\n// // // //     if (!resolvedUserId) return;\n// // // //     try {\n// // // //       const res = await fetch(`${API_URL}/wallet/withdrawal-requests/user/${resolvedUserId}`, { headers: userAuthHeaders() });\n// // // //       const data = await res.json();\n// // // //       if (!res.ok) throw new Error(data?.message || 'Failed to load withdrawal history');\n// // // //       setWithdrawalRequests(data.withdrawalRequests || []);\n// // // //     } catch {\n// // // //       setError('Failed to fetch withdrawal history');\n// // // //     }\n// // // //   }, [resolvedUserId, resolvedToken]);\n\n// // // //   useEffect(() => {\n// // // //     const fetchData = async () => {\n// // // //       if (!resolvedUserId) {\n// // // //         setError('User not authenticated. Please login.');\n// // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // //         return;\n// // // //       }\n// // // //       if (!resolvedToken) {\n// // // //         setError('Missing auth token. Please login again.');\n// // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // //         return;\n// // // //       }\n\n// // // //       try {\n// // // //         setLoading(prev => ({ ...prev, wallet: true, withdrawals: true }));\n// // // //         await Promise.all([fetchWalletData(), fetchWithdrawalHistory()]);\n// // // //       } catch {\n// // // //         setError('Failed to load wallet data. Please try again.');\n// // // //       } finally {\n// // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // //       }\n// // // //     };\n\n// // // //     fetchData();\n// // // //   }, [resolvedUserId, resolvedToken, fetchWalletData, fetchWithdrawalHistory]);\n\n// // // //   const validateForm = () => {\n// // // //     const errors = {};\n// // // //     let isValid = true;\n\n// // // //     if (!withdrawalForm.bankName.trim()) {\n// // // //       errors.bankName = 'Bank name is required';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.accountNumber.trim() || !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)) {\n// // // //       errors.accountNumber = 'Valid account number is required (9-18 digits)';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.ifscCode.trim() || !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)) {\n// // // //       errors.ifscCode = 'Valid IFSC code is required';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.mobileNumber.trim() || !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)) {\n// // // //       errors.mobileNumber = 'Valid Indian mobile number is required';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n// // // //       errors.amount = 'Minimum withdrawal amount is â‚¹1000';\n// // // //       isValid = false;\n// // // //     } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n// // // //       errors.amount = 'Insufficient balance';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     setFormErrors(errors);\n// // // //     return isValid;\n// // // //   };\n\n// // // //   const handleWithdrawalSubmit = async () => {\n// // // //     if (!validateForm()) return;\n\n// // // //     setLoading(prev => ({ ...prev, submit: true }));\n// // // //     setError('');\n// // // //     setSuccess('');\n\n// // // //     try {\n// // // //       const body = {\n// // // //         userId: resolvedUserId, // âœ… fixed here\n// // // //         amount: parseFloat(withdrawalForm.amount),\n// // // //         bankName: withdrawalForm.bankName,\n// // // //         accountNumber: withdrawalForm.accountNumber,\n// // // //         ifscCode: withdrawalForm.ifscCode,\n// // // //         mobileNumber: withdrawalForm.mobileNumber,\n// // // //       };\n\n// // // //       const res = await fetch(`${API_URL}/wallet/withdraw`, {\n// // // //         method: 'POST',\n// // // //         headers: userAuthHeaders(),\n// // // //         body: JSON.stringify(body),\n// // // //       });\n// // // //       const data = await res.json();\n// // // //       if (!data.success) throw new Error(data.message || 'Withdrawal failed');\n\n// // // //       await Promise.all([fetchWalletData(), fetchWithdrawalHistory()]);\n// // // //       setSuccess('Withdrawal request submitted successfully!');\n// // // //       setShowWithdrawForm(false);\n// // // //     } catch {\n// // // //       setError('Failed to submit withdrawal request. Please try again.');\n// // // //     } finally {\n// // // //       setLoading(prev => ({ ...prev, submit: false }));\n// // // //     }\n// // // //   };\n\n// // // //   const handleInputChange = (e) => {\n// // // //     const { name, value } = e.target;\n// // // //     setWithdrawalForm(prev => ({\n// // // //       ...prev,\n// // // //       [name]: value\n// // // //     }));\n\n// // // //     if (formErrors[name]) {\n// // // //       setFormErrors(prev => ({\n// // // //         ...prev,\n// // // //         [name]: ''\n// // // //       }));\n// // // //     }\n// // // //   };\n\n// // // //   const getStatusIcon = (status) => {\n// // // //     switch (status) {\n// // // //       case 'Pending': return <Clock className=\"h-5 w-5 text-yellow-500\" />;\n// // // //       case 'Completed': return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n// // // //       case 'Rejected': return <X className=\"h-5 w-5 text-red-500\" />;\n// // // //       default: return <Clock className=\"h-5 w-5 text-gray-500\" />;\n// // // //     }\n// // // //   };\n\n// // // //   const getStatusColor = (status) => {\n// // // //     switch (status) {\n// // // //       case 'Pending': return 'text-yellow-600 bg-yellow-50';\n// // // //       case 'Completed': return 'text-green-600 bg-green-50';\n// // // //       case 'Rejected': return 'text-red-600 bg-red-50';\n// // // //       default: return 'text-gray-600 bg-gray-50';\n// // // //     }\n// // // //   };\n\n// // // //   const formatDate = (dateString) => {\n// // // //     const options = { day: 'numeric', month: 'short', year: 'numeric' };\n// // // //     return new Date(dateString).toLocaleDateString('en-IN', options);\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"p-4 md:p-6 max-w-6xl mx-auto\">\n// // // //       {/* UI code remains same â€” I kept all your JSX untouched */}\n// // // //       {/* ... */}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default EnhancedWallet;\n\n// // // // import React, { useState, useEffect, useCallback } from 'react';\n// // // // import { ArrowUp, Clock, CheckCircle, X, Loader, Banknote, Plus, Minus } from 'lucide-react';\n\n// // // // const EnhancedWallet = ({ userId: propUserId, userToken: propUserToken }) => {\n// // // //   const [wallet, setWallet] = useState({ balance: 0, transactions: [] });\n// // // //   const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n// // // //   const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n// // // //   const [loading, setLoading] = useState({ wallet: false, withdrawals: false, submit: false });\n// // // //   const [error, setError] = useState('');\n// // // //   const [success, setSuccess] = useState('');\n// // // //   const [activeTab, setActiveTab] = useState('transactions');\n\n// // // //   const [withdrawalForm, setWithdrawalForm] = useState({\n// // // //     bankName: '',\n// // // //     accountNumber: '',\n// // // //     ifscCode: '',\n// // // //     mobileNumber: '',\n// // // //     amount: ''\n// // // //   });\n\n// // // //   const [formErrors, setFormErrors] = useState({\n// // // //     bankName: '',\n// // // //     accountNumber: '',\n// // // //     ifscCode: '',\n// // // //     mobileNumber: '',\n// // // //     amount: ''\n// // // //   });\n\n// // // //   const parseJwt = (token) => {\n// // // //     if (!token) return null;\n// // // //     try {\n// // // //       const payload = JSON.parse(atob(token.split('.')[1]));\n// // // //       return payload.userId || payload.sub || null;\n// // // //     } catch {\n// // // //       return null;\n// // // //     }\n// // // //   };\n\n// // // //   const resolvedToken = propUserToken\n// // // //     || localStorage.getItem('token')\n// // // //     || JSON.parse(localStorage.getItem('authData') || '{}')?.token\n// // // //     || '';\n\n// // // //   const resolvedUserId = propUserId\n// // // //     || JSON.parse(localStorage.getItem('authData') || '{}')?.userId\n// // // //     || parseJwt(resolvedToken)\n// // // //     || null;\n\n// // // //   const userAuthHeaders = () => {\n// // // //     const token = resolvedToken;\n// // // //     return {\n// // // //       'Content-Type': 'application/json',\n// // // //       Authorization: token ? `Bearer ${token}` : '',\n// // // //     };\n// // // //   };\n\n// // // //   const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// // // //   const fetchWalletData = useCallback(async () => {\n// // // //     if (!resolvedUserId) return;\n// // // //     try {\n// // // //       const res = await fetch(`${API_URL}/wallet/user/${resolvedUserId}`, { headers: userAuthHeaders() });\n// // // //       const data = await res.json();\n// // // //       if (!res.ok) throw new Error(data?.message || 'Failed to load wallet');\n// // // //       setWallet({ balance: data.wallet?.balance || 0, transactions: data.wallet?.transactions || [] });\n// // // //     } catch {\n// // // //       setError('Failed to fetch wallet data');\n// // // //     }\n// // // //   }, [resolvedUserId, resolvedToken]);\n\n// // // //   const fetchWithdrawalHistory = useCallback(async () => {\n// // // //     if (!resolvedUserId) return;\n// // // //     try {\n// // // //       const res = await fetch(`${API_URL}/wallet/withdrawal-requests/user/${resolvedUserId}`, { headers: userAuthHeaders() });\n// // // //       const data = await res.json();\n// // // //       if (!res.ok) throw new Error(data?.message || 'Failed to load withdrawal history');\n// // // //       setWithdrawalRequests(data.withdrawalRequests || []);\n// // // //     } catch {\n// // // //       setError('Failed to fetch withdrawal history');\n// // // //     }\n// // // //   }, [resolvedUserId, resolvedToken]);\n\n// // // //   useEffect(() => {\n// // // //     const fetchData = async () => {\n// // // //       if (!resolvedUserId) {\n// // // //         setError('User not authenticated. Please login.');\n// // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // //         return;\n// // // //       }\n// // // //       if (!resolvedToken) {\n// // // //         setError('Missing auth token. Please login again.');\n// // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // //         return;\n// // // //       }\n\n// // // //       try {\n// // // //         setLoading(prev => ({ ...prev, wallet: true, withdrawals: true }));\n// // // //         await Promise.all([fetchWalletData(), fetchWithdrawalHistory()]);\n// // // //       } catch {\n// // // //         setError('Failed to load wallet data. Please try again.');\n// // // //       } finally {\n// // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // //       }\n// // // //     };\n\n// // // //     fetchData();\n// // // //   }, [resolvedUserId, resolvedToken, fetchWalletData, fetchWithdrawalHistory]);\n\n// // // //   const validateForm = () => {\n// // // //     const errors = {};\n// // // //     let isValid = true;\n\n// // // //     if (!withdrawalForm.bankName.trim()) {\n// // // //       errors.bankName = 'Bank name is required';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.accountNumber.trim() || !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)) {\n// // // //       errors.accountNumber = 'Valid account number is required (9-18 digits)';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.ifscCode.trim() || !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)) {\n// // // //       errors.ifscCode = 'Valid IFSC code is required';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.mobileNumber.trim() || !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)) {\n// // // //       errors.mobileNumber = 'Valid Indian mobile number is required';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n// // // //       errors.amount = 'Minimum withdrawal amount is â‚¹1000';\n// // // //       isValid = false;\n// // // //     } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n// // // //       errors.amount = 'Insufficient balance';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     setFormErrors(errors);\n// // // //     return isValid;\n// // // //   };\n\n// // // //   const handleWithdrawalSubmit = async () => {\n// // // //     if (!validateForm()) return;\n\n// // // //     setLoading(prev => ({ ...prev, submit: true }));\n// // // //     setError('');\n// // // //     setSuccess('');\n\n// // // //     try {\n// // // //       const body = {\n// // // //         userId: resolvedUserId, // âœ… fixed here\n// // // //         amount: parseFloat(withdrawalForm.amount),\n// // // //         bankName: withdrawalForm.bankName,\n// // // //         accountNumber: withdrawalForm.accountNumber,\n// // // //         ifscCode: withdrawalForm.ifscCode,\n// // // //         mobileNumber: withdrawalForm.mobileNumber,\n// // // //       };\n\n// // // //       const res = await fetch(`${API_URL}/wallet/withdraw`, {\n// // // //         method: 'POST',\n// // // //         headers: userAuthHeaders(),\n// // // //         body: JSON.stringify(body),\n// // // //       });\n// // // //       const data = await res.json();\n// // // //       if (!data.success) throw new Error(data.message || 'Withdrawal failed');\n\n// // // //       await Promise.all([fetchWalletData(), fetchWithdrawalHistory()]);\n// // // //       setSuccess('Withdrawal request submitted successfully!');\n// // // //       setShowWithdrawForm(false);\n// // // //     } catch {\n// // // //       setError('Failed to submit withdrawal request. Please try again.');\n// // // //     } finally {\n// // // //       setLoading(prev => ({ ...prev, submit: false }));\n// // // //     }\n// // // //   };\n\n// // // //   const handleInputChange = (e) => {\n// // // //     const { name, value } = e.target;\n// // // //     setWithdrawalForm(prev => ({\n// // // //       ...prev,\n// // // //       [name]: value\n// // // //     }));\n\n// // // //     if (formErrors[name]) {\n// // // //       setFormErrors(prev => ({\n// // // //         ...prev,\n// // // //         [name]: ''\n// // // //       }));\n// // // //     }\n// // // //   };\n\n// // // //   const getStatusIcon = (status) => {\n// // // //     switch (status) {\n// // // //       case 'Pending': return <Clock className=\"h-5 w-5 text-yellow-500\" />;\n// // // //       case 'Completed': return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n// // // //       case 'Rejected': return <X className=\"h-5 w-5 text-red-500\" />;\n// // // //       default: return <Clock className=\"h-5 w-5 text-gray-500\" />;\n// // // //     }\n// // // //   };\n\n// // // //   const getStatusColor = (status) => {\n// // // //     switch (status) {\n// // // //       case 'Pending': return 'text-yellow-600 bg-yellow-50';\n// // // //       case 'Completed': return 'text-green-600 bg-green-50';\n// // // //       case 'Rejected': return 'text-red-600 bg-red-50';\n// // // //       default: return 'text-gray-600 bg-gray-50';\n// // // //     }\n// // // //   };\n\n// // // //   const formatDate = (dateString) => {\n// // // //     const options = { day: 'numeric', month: 'short', year: 'numeric' };\n// // // //     return new Date(dateString).toLocaleDateString('en-IN', options);\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"p-4 md:p-6 max-w-6xl mx-auto\">\n// // // //       {/* Balance Card */}\n// // // //       <div className=\"bg-white shadow-md rounded-lg p-6 mb-6 flex items-center justify-between\">\n// // // //         <div>\n// // // //           <h2 className=\"text-lg font-semibold text-gray-700\">Wallet Balance</h2>\n// // // //           <p className=\"text-3xl font-bold text-gray-900\">â‚¹{wallet.balance}</p>\n// // // //         </div>\n// // // //         <button\n// // // //           onClick={() => setShowWithdrawForm(true)}\n// // // //           className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center\"\n// // // //         >\n// // // //           <ArrowUp className=\"h-5 w-5 mr-2\" /> Withdraw\n// // // //         </button>\n// // // //       </div>\n\n// // // //       {/* Tabs */}\n// // // //       <div className=\"flex space-x-4 border-b mb-4\">\n// // // //         <button\n// // // //           onClick={() => setActiveTab('transactions')}\n// // // //           className={`pb-2 ${activeTab === 'transactions' ? 'border-b-2 border-blue-600 text-blue-600' : 'text-gray-600'}`}\n// // // //         >\n// // // //           Transactions\n// // // //         </button>\n// // // //         <button\n// // // //           onClick={() => setActiveTab('withdrawals')}\n// // // //           className={`pb-2 ${activeTab === 'withdrawals' ? 'border-b-2 border-blue-600 text-blue-600' : 'text-gray-600'}`}\n// // // //         >\n// // // //           Withdrawals\n// // // //         </button>\n// // // //       </div>\n\n// // // //       {/* Error / Success Messages */}\n// // // //       {error && <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">{error}</div>}\n// // // //       {success && <div className=\"mb-4 p-3 bg-green-100 text-green-700 rounded\">{success}</div>}\n\n// // // //       {/* Transactions Tab */}\n// // // //       {activeTab === 'transactions' && (\n// // // //         <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n// // // //           {wallet.transactions.length > 0 ? (\n// // // //             <ul>\n// // // //               {wallet.transactions.map((txn, index) => (\n// // // //                 <li key={index} className=\"flex justify-between p-4 border-b\">\n// // // //                   <div className=\"flex items-center\">\n// // // //                     {txn.type === 'credit' ? (\n// // // //                       <Plus className=\"h-5 w-5 text-green-500 mr-2\" />\n// // // //                     ) : (\n// // // //                       <Minus className=\"h-5 w-5 text-red-500 mr-2\" />\n// // // //                     )}\n// // // //                     <span>{txn.description || txn.type}</span>\n// // // //                   </div>\n// // // //                   <div className=\"text-right\">\n// // // //                     <p className={txn.type === 'credit' ? 'text-green-600' : 'text-red-600'}>\n// // // //                       â‚¹{txn.amount}\n// // // //                     </p>\n// // // //                     <small className=\"text-gray-500\">{formatDate(txn.date)}</small>\n// // // //                   </div>\n// // // //                 </li>\n// // // //               ))}\n// // // //             </ul>\n// // // //           ) : (\n// // // //             <p className=\"p-4 text-gray-500\">No transactions found.</p>\n// // // //           )}\n// // // //         </div>\n// // // //       )}\n\n// // // //       {/* Withdrawals Tab */}\n// // // //       {activeTab === 'withdrawals' && (\n// // // //         <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n// // // //           {withdrawalRequests.length > 0 ? (\n// // // //             <ul>\n// // // //               {withdrawalRequests.map((req, index) => (\n// // // //                 <li key={index} className=\"flex justify-between p-4 border-b\">\n// // // //                   <div className=\"flex items-center\">\n// // // //                     {getStatusIcon(req.status)}\n// // // //                     <span className=\"ml-2\">{req.bankName} - â‚¹{req.amount}</span>\n// // // //                   </div>\n// // // //                   <div className={`px-2 py-1 rounded text-sm ${getStatusColor(req.status)}`}>\n// // // //                     {req.status}\n// // // //                   </div>\n// // // //                 </li>\n// // // //               ))}\n// // // //             </ul>\n// // // //           ) : (\n// // // //             <p className=\"p-4 text-gray-500\">No withdrawal requests found.</p>\n// // // //           )}\n// // // //         </div>\n// // // //       )}\n\n// // // //       {/* Withdraw Form Modal */}\n// // // //       {showWithdrawForm && (\n// // // //         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\">\n// // // //           <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n// // // //             <h3 className=\"text-lg font-semibold mb-4\">Withdraw Funds</h3>\n// // // //             {Object.keys(withdrawalForm).map((field) => (\n// // // //               <div key={field} className=\"mb-3\">\n// // // //                 <input\n// // // //                   type={field === 'amount' ? 'number' : 'text'}\n// // // //                   name={field}\n// // // //                   value={withdrawalForm[field]}\n// // // //                   onChange={handleInputChange}\n// // // //                   placeholder={field.replace(/([A-Z])/g, ' $1')}\n// // // //                   className=\"w-full border rounded p-2\"\n// // // //                 />\n// // // //                 {formErrors[field] && <p className=\"text-red-500 text-sm\">{formErrors[field]}</p>}\n// // // //               </div>\n// // // //             ))}\n// // // //             <div className=\"flex justify-end space-x-2\">\n// // // //               <button onClick={() => setShowWithdrawForm(false)} className=\"px-4 py-2 bg-gray-300 rounded\">Cancel</button>\n// // // //               <button\n// // // //                 onClick={handleWithdrawalSubmit}\n// // // //                 disabled={loading.submit}\n// // // //                 className=\"px-4 py-2 bg-blue-600 text-white rounded\"\n// // // //               >\n// // // //                 {loading.submit ? 'Submitting...' : 'Submit'}\n// // // //               </button>\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default EnhancedWallet;\n\n// // // // import React, { useState, useEffect } from \"react\";\n\n// // // // import { walletAPI } from \"../../services/api\";\n\n// // // // const { getUserWallet, getUserWithdrawalRequests, requestWithdrawal } = walletAPI;\n\n// // // // import {\n// // // //   ArrowUp,\n// // // //   Clock,\n// // // //   CheckCircle,\n// // // //   X,\n// // // //   Plus,\n// // // //   Minus,\n// // // // } from \"lucide-react\";\n\n// // // import React, { useState, useEffect } from \"react\";\n// // // import {\n// // //   ArrowUp,\n// // //   Clock,\n// // //   CheckCircle,\n// // //   X,\n// // //   Plus,\n// // //   Minus,\n// // // } from \"lucide-react\";\n// // // // import { walletAPI } from \"../../services/api\";\n// // // import userWalletAPI from \"../../services/userWalletApi\";\n\n// // // const { getUserWallet, getUserWithdrawalRequests, requestWithdrawal } = walletAPI;\n\n// // // const EnhancedWallet = () => {\n// // //   const [wallet, setWallet] = useState({ balance: 0, transactions: [] });\n// // //   const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n// // //   const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n// // //   const [loading, setLoading] = useState({ wallet: false, withdrawals: false, submit: false });\n// // //   const [error, setError] = useState(\"\");\n// // //   const [success, setSuccess] = useState(\"\");\n// // //   const [activeTab, setActiveTab] = useState(\"transactions\");\n\n// // //   const [withdrawalForm, setWithdrawalForm] = useState({\n// // //     bankName: \"\",\n// // //     accountNumber: \"\",\n// // //     ifscCode: \"\",\n// // //     mobileNumber: \"\",\n// // //     amount: \"\",\n// // //   });\n\n// // //   const [formErrors, setFormErrors] = useState({});\n\n// // //   const userId = localStorage.getItem(\"userId\");\n\n// // //   const loadWallet = async () => {\n// // //     if (!userId) return;\n// // //     try {\n// // //       setLoading((prev) => ({ ...prev, wallet: true }));\n// // //       const res = await getUserWallet(userId);\n// // //       setWallet({\n// // //         balance: res.data.balance || 0,\n// // //         transactions: res.data.transactions || [],\n// // //       });\n// // //     } catch (err) {\n// // //       setError(err.response?.data?.message || \"Failed to fetch wallet\");\n// // //     } finally {\n// // //       setLoading((prev) => ({ ...prev, wallet: false }));\n// // //     }\n// // //   };\n\n// // //   const loadRequests = async () => {\n// // //     if (!userId) return;\n// // //     try {\n// // //       setLoading((prev) => ({ ...prev, withdrawals: true }));\n// // //       const res = await getUserWithdrawalRequests(userId);\n// // //       setWithdrawalRequests(res.data || []);\n// // //     } catch (err) {\n// // //       setError(err.response?.data?.message || \"Failed to fetch withdrawals\");\n// // //     } finally {\n// // //       setLoading((prev) => ({ ...prev, withdrawals: false }));\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     if (userId) {\n// // //       loadWallet();\n// // //       loadRequests();\n// // //     }\n// // //   }, [userId]);\n\n// // //   const validateForm = () => {\n// // //     const errors = {};\n// // //     let isValid = true;\n\n// // //     if (!withdrawalForm.bankName.trim()) {\n// // //       errors.bankName = \"Bank name is required\";\n// // //       isValid = false;\n// // //     }\n// // //     if (!withdrawalForm.accountNumber.trim() || !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)) {\n// // //       errors.accountNumber = \"Valid account number is required (9-18 digits)\";\n// // //       isValid = false;\n// // //     }\n// // //     if (!withdrawalForm.ifscCode.trim() || !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)) {\n// // //       errors.ifscCode = \"Valid IFSC code is required\";\n// // //       isValid = false;\n// // //     }\n// // //     if (!withdrawalForm.mobileNumber.trim() || !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)) {\n// // //       errors.mobileNumber = \"Valid Indian mobile number is required\";\n// // //       isValid = false;\n// // //     }\n// // //     if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n// // //       errors.amount = \"Minimum withdrawal amount is â‚¹1000\";\n// // //       isValid = false;\n// // //     } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n// // //       errors.amount = \"Insufficient balance\";\n// // //       isValid = false;\n// // //     }\n\n// // //     setFormErrors(errors);\n// // //     return isValid;\n// // //   };\n\n// // //   const handleWithdrawalSubmit = async () => {\n// // //     if (!validateForm()) return;\n\n// // //     setLoading((prev) => ({ ...prev, submit: true }));\n// // //     setError(\"\");\n// // //     setSuccess(\"\");\n\n// // //     try {\n// // //       await requestWithdrawal(userId, withdrawalForm.amount, withdrawalForm);\n// // //       setSuccess(\"Withdrawal request submitted successfully!\");\n// // //       setShowWithdrawForm(false);\n// // //       await Promise.all([loadWallet(), loadRequests()]);\n// // //     } catch (err) {\n// // //       setError(err.response?.data?.message || \"Withdrawal failed\");\n// // //     } finally {\n// // //       setLoading((prev) => ({ ...prev, submit: false }));\n// // //     }\n// // //   };\n\n// // //   const handleInputChange = (e) => {\n// // //     const { name, value } = e.target;\n// // //     setWithdrawalForm((prev) => ({ ...prev, [name]: value }));\n// // //     if (formErrors[name]) {\n// // //       setFormErrors((prev) => ({ ...prev, [name]: \"\" }));\n// // //     }\n// // //   };\n\n// // //   const getStatusIcon = (status) => {\n// // //     switch (status) {\n// // //       case \"Pending\": return <Clock className=\"h-5 w-5 text-yellow-500\" />;\n// // //       case \"Completed\": return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n// // //       case \"Rejected\": return <X className=\"h-5 w-5 text-red-500\" />;\n// // //       default: return <Clock className=\"h-5 w-5 text-gray-500\" />;\n// // //     }\n// // //   };\n\n// // //   const getStatusColor = (status) => {\n// // //     switch (status) {\n// // //       case \"Pending\": return \"text-yellow-600 bg-yellow-50\";\n// // //       case \"Completed\": return \"text-green-600 bg-green-50\";\n// // //       case \"Rejected\": return \"text-red-600 bg-red-50\";\n// // //       default: return \"text-gray-600 bg-gray-50\";\n// // //     }\n// // //   };\n\n// // //   const formatDate = (dateString) => {\n// // //     const options = { day: \"numeric\", month: \"short\", year: \"numeric\" };\n// // //     return new Date(dateString).toLocaleDateString(\"en-IN\", options);\n// // //   };\n\n// // //   return (\n// // //     <div className=\"p-4 md:p-6 max-w-6xl mx-auto\">\n// // //       {/* Balance Card */}\n// // //       <div className=\"bg-white shadow-md rounded-lg p-6 mb-6 flex items-center justify-between\">\n// // //         <div>\n// // //           <h2 className=\"text-lg font-semibold text-gray-700\">Wallet Balance</h2>\n// // //           <p className=\"text-3xl font-bold text-gray-900\">â‚¹{wallet.balance}</p>\n// // //         </div>\n// // //         <button\n// // //           onClick={() => setShowWithdrawForm(true)}\n// // //           className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center\"\n// // //         >\n// // //           <ArrowUp className=\"h-5 w-5 mr-2\" /> Withdraw\n// // //         </button>\n// // //       </div>\n\n// // //       {/* Tabs */}\n// // //       <div className=\"flex space-x-4 border-b mb-4\">\n// // //         <button\n// // //           onClick={() => setActiveTab(\"transactions\")}\n// // //           className={`pb-2 ${activeTab === \"transactions\" ? \"border-b-2 border-blue-600 text-blue-600\" : \"text-gray-600\"}`}\n// // //         >\n// // //           Transactions\n// // //         </button>\n// // //         <button\n// // //           onClick={() => setActiveTab(\"withdrawals\")}\n// // //           className={`pb-2 ${activeTab === \"withdrawals\" ? \"border-b-2 border-blue-600 text-blue-600\" : \"text-gray-600\"}`}\n// // //         >\n// // //           Withdrawals\n// // //         </button>\n// // //       </div>\n\n// // //       {/* Error / Success Messages */}\n// // //       {error && <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">{error}</div>}\n// // //       {success && <div className=\"mb-4 p-3 bg-green-100 text-green-700 rounded\">{success}</div>}\n\n// // //       {/* Transactions Tab */}\n// // //       {activeTab === \"transactions\" && (\n// // //         <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n// // //           {wallet.transactions.length > 0 ? (\n// // //             <ul>\n// // //               {wallet.transactions.map((txn, index) => (\n// // //                 <li key={index} className=\"flex justify-between p-4 border-b\">\n// // //                   <div className=\"flex items-center\">\n// // //                     {txn.type === \"credit\" ? (\n// // //                       <Plus className=\"h-5 w-5 text-green-500 mr-2\" />\n// // //                     ) : (\n// // //                       <Minus className=\"h-5 w-5 text-red-500 mr-2\" />\n// // //                     )}\n// // //                     <span>{txn.description || txn.type}</span>\n// // //                   </div>\n// // //                   <div className=\"text-right\">\n// // //                     <p className={txn.type === \"credit\" ? \"text-green-600\" : \"text-red-600\"}>\n// // //                       â‚¹{txn.amount}\n// // //                     </p>\n// // //                     <small className=\"text-gray-500\">{formatDate(txn.date)}</small>\n// // //                   </div>\n// // //                 </li>\n// // //               ))}\n// // //             </ul>\n// // //           ) : (\n// // //             <p className=\"p-4 text-gray-500\">No transactions found.</p>\n// // //           )}\n// // //         </div>\n// // //       )}\n\n// // //       {/* Withdrawals Tab */}\n// // //       {activeTab === \"withdrawals\" && (\n// // //         <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n// // //           {withdrawalRequests.length > 0 ? (\n// // //             <ul>\n// // //               {withdrawalRequests.map((req, index) => (\n// // //                 <li key={index} className=\"flex justify-between p-4 border-b\">\n// // //                   <div className=\"flex items-center\">\n// // //                     {getStatusIcon(req.status)}\n// // //                     <span className=\"ml-2\">{req.bankName} - â‚¹{req.amount}</span>\n// // //                   </div>\n// // //                   <div className={`px-2 py-1 rounded text-sm ${getStatusColor(req.status)}`}>\n// // //                     {req.status}\n// // //                   </div>\n// // //                 </li>\n// // //               ))}\n// // //             </ul>\n// // //           ) : (\n// // //             <p className=\"p-4 text-gray-500\">No withdrawal requests found.</p>\n// // //           )}\n// // //         </div>\n// // //       )}\n\n// // //       {/* Withdraw Form Modal */}\n// // //       {showWithdrawForm && (\n// // //         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\">\n// // //           <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n// // //             <h3 className=\"text-lg font-semibold mb-4\">Withdraw Funds</h3>\n// // //             {Object.keys(withdrawalForm).map((field) => (\n// // //               <div key={field} className=\"mb-3\">\n// // //                 <input\n// // //                   type={field === \"amount\" ? \"number\" : \"text\"}\n// // //                   name={field}\n// // //                   value={withdrawalForm[field]}\n// // //                   onChange={handleInputChange}\n// // //                   placeholder={field.replace(/([A-Z])/g, \" $1\")}\n// // //                   className=\"w-full border rounded p-2\"\n// // //                 />\n// // //                 {formErrors[field] && <p className=\"text-red-500 text-sm\">{formErrors[field]}</p>}\n// // //               </div>\n// // //             ))}\n// // //             <div className=\"flex justify-end space-x-2\">\n// // //               <button onClick={() => setShowWithdrawForm(false)} className=\"px-4 py-2 bg-gray-300 rounded\">Cancel</button>\n// // //               <button\n// // //                 onClick={handleWithdrawalSubmit}\n// // //                 disabled={loading.submit}\n// // //                 className=\"px-4 py-2 bg-blue-600 text-white rounded\"\n// // //               >\n// // //                 {loading.submit ? \"Submitting...\" : \"Submit\"}\n// // //               </button>\n// // //             </div>\n// // //           </div>\n// // //         </div>\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default EnhancedWallet;   \n\n// // import React, { useState, useEffect } from \"react\";\n// // import {\n// //   ArrowUp,\n// //   Clock,\n// //   CheckCircle,\n// //   X,\n// //   Plus,\n// //   Minus,\n// // } from \"lucide-react\";\n// // import userWalletAPI from \"../../services/userWalletApi\"; // âœ… updated import\n\n// // const EnhancedWallet = () => {\n// //   const [wallet, setWallet] = useState({ balance: 0, transactions: [] });\n// //   const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n// //   const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n// //   const [loading, setLoading] = useState({ wallet: false, withdrawals: false, submit: false });\n// //   const [error, setError] = useState(\"\");\n// //   const [success, setSuccess] = useState(\"\");\n// //   const [activeTab, setActiveTab] = useState(\"transactions\");\n\n// //   const [withdrawalForm, setWithdrawalForm] = useState({\n// //     bankName: \"\",\n// //     accountNumber: \"\",\n// //     ifscCode: \"\",\n// //     mobileNumber: \"\",\n// //     amount: \"\",\n// //   });\n\n// //   const [formErrors, setFormErrors] = useState({});\n\n// //   const userId = localStorage.getItem(\"userId\");\n\n// //   const loadWallet = async () => {\n// //     if (!userId) return;\n// //     try {\n// //       setLoading((prev) => ({ ...prev, wallet: true }));\n// //       const res = await userWalletAPI.getWallet(userId); // âœ… updated\n// //       setWallet({\n// //         balance: res.data.balance || 0,\n// //         transactions: res.data.transactions || [],\n// //       });\n// //     } catch (err) {\n// //       setError(err.response?.data?.message || \"Failed to fetch wallet\");\n// //     } finally {\n// //       setLoading((prev) => ({ ...prev, wallet: false }));\n// //     }\n// //   };\n\n// //   const loadRequests = async () => {\n// //     if (!userId) return;\n// //     try {\n// //       setLoading((prev) => ({ ...prev, withdrawals: true }));\n// //       const res = await userWalletAPI.getWithdrawals(userId); // âœ… updated\n// //       setWithdrawalRequests(res.data || []);\n// //     } catch (err) {\n// //       setError(err.response?.data?.message || \"Failed to fetch withdrawals\");\n// //     } finally {\n// //       setLoading((prev) => ({ ...prev, withdrawals: false }));\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     if (userId) {\n// //       loadWallet();\n// //       loadRequests();\n// //     }\n// //   }, [userId]);\n\n// //   const validateForm = () => {\n// //     const errors = {};\n// //     let isValid = true;\n\n// //     if (!withdrawalForm.bankName.trim()) {\n// //       errors.bankName = \"Bank name is required\";\n// //       isValid = false;\n// //     }\n// //     if (!withdrawalForm.accountNumber.trim() || !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)) {\n// //       errors.accountNumber = \"Valid account number is required (9-18 digits)\";\n// //       isValid = false;\n// //     }\n// //     if (!withdrawalForm.ifscCode.trim() || !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)) {\n// //       errors.ifscCode = \"Valid IFSC code is required\";\n// //       isValid = false;\n// //     }\n// //     if (!withdrawalForm.mobileNumber.trim() || !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)) {\n// //       errors.mobileNumber = \"Valid Indian mobile number is required\";\n// //       isValid = false;\n// //     }\n// //     if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n// //       errors.amount = \"Minimum withdrawal amount is â‚¹1000\";\n// //       isValid = false;\n// //     } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n// //       errors.amount = \"Insufficient balance\";\n// //       isValid = false;\n// //     }\n\n// //     setFormErrors(errors);\n// //     return isValid;\n// //   };\n\n// //   const handleWithdrawalSubmit = async () => {\n// //     if (!validateForm()) return;\n\n// //     setLoading((prev) => ({ ...prev, submit: true }));\n// //     setError(\"\");\n// //     setSuccess(\"\");\n\n// //     try {\n// //       await userWalletAPI.requestWithdrawal( // âœ… updated\n// //         userId,\n// //         withdrawalForm.amount,\n// //         withdrawalForm\n// //       );\n// //       setSuccess(\"Withdrawal request submitted successfully!\");\n// //       setShowWithdrawForm(false);\n// //       await Promise.all([loadWallet(), loadRequests()]);\n// //     } catch (err) {\n// //       setError(err.response?.data?.message || \"Withdrawal failed\");\n// //     } finally {\n// //       setLoading((prev) => ({ ...prev, submit: false }));\n// //     }\n// //   };\n\n// //   const handleInputChange = (e) => {\n// //     const { name, value } = e.target;\n// //     setWithdrawalForm((prev) => ({ ...prev, [name]: value }));\n// //     if (formErrors[name]) {\n// //       setFormErrors((prev) => ({ ...prev, [name]: \"\" }));\n// //     }\n// //   };\n\n// //   const getStatusIcon = (status) => {\n// //     switch (status) {\n// //       case \"Pending\": return <Clock className=\"h-5 w-5 text-yellow-500\" />;\n// //       case \"Completed\": return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n// //       case \"Rejected\": return <X className=\"h-5 w-5 text-red-500\" />;\n// //       default: return <Clock className=\"h-5 w-5 text-gray-500\" />;\n// //     }\n// //   };\n\n// //   const getStatusColor = (status) => {\n// //     switch (status) {\n// //       case \"Pending\": return \"text-yellow-600 bg-yellow-50\";\n// //       case \"Completed\": return \"text-green-600 bg-green-50\";\n// //       case \"Rejected\": return \"text-red-600 bg-red-50\";\n// //       default: return \"text-gray-600 bg-gray-50\";\n// //     }\n// //   };\n\n// //   const formatDate = (dateString) => {\n// //     const options = { day: \"numeric\", month: \"short\", year: \"numeric\" };\n// //     return new Date(dateString).toLocaleDateString(\"en-IN\", options);\n// //   };\n\n// //   return (\n// //     <div className=\"p-4 md:p-6 max-w-6xl mx-auto\">\n// //       {/* Wallet balance, tabs, forms, transactions, etc... */}\n// //       {/* â€”â€”â€” Your existing JSX continues here â€”â€”â€” */}\n// //     </div>\n// //   );\n// // };\n\n// // export default EnhancedWallet;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import {\n//   ArrowUp,\n//   Clock,\n//   CheckCircle,\n//   X,\n//   Plus,\n//   Wallet as WalletIcon,\n//   IndianRupee,\n// } from \"lucide-react\";\n// import userWalletAPI from \"../../services/userWalletApi\"; // âœ… API service\n\n// const EnhancedWallet = () => {\n//   const { userId } = useParams();\n//   const [wallet, setWallet] = useState({ balance: 0, transactions: [] });\n//   const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n//   const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n//   const [loading, setLoading] = useState({\n//     wallet: false,\n//     withdrawals: false,\n//     submit: false,\n//   });\n//   const [error, setError] = useState(\"\");\n//   const [success, setSuccess] = useState(\"\");\n//   const [activeTab, setActiveTab] = useState(\"transactions\");\n\n//   const [withdrawalForm, setWithdrawalForm] = useState({\n//     bankName: \"\",\n//     accountNumber: \"\",\n//     ifscCode: \"\",\n//     mobileNumber: \"\",\n//     amount: \"\",\n//   });\n\n//   const [formErrors, setFormErrors] = useState({});\n\n//   // ðŸ”¹ Fetch Wallet Balance\n//   const loadWallet = async () => {\n//     if (!userId) return;\n//     try {\n//       setLoading((prev) => ({ ...prev, wallet: true }));\n//       const res = await userWalletAPI.getWallet(userId);\n//       setWallet({\n//         balance: res.data.balance || 0,\n//         transactions: res.data.transactions || [],\n//       });\n//     } catch (err) {\n//       setError(err.response?.data?.message || \"Failed to fetch wallet\");\n//     } finally {\n//       setLoading((prev) => ({ ...prev, wallet: false }));\n//     }\n//   };\n\n//   // ðŸ”¹ Fetch Withdrawals\n//   const loadRequests = async () => {\n//     if (!userId) return;\n//     try {\n//       setLoading((prev) => ({ ...prev, withdrawals: true }));\n//       const res = await userWalletAPI.getWithdrawals(userId);\n//       setWithdrawalRequests(res.data || []);\n//     } catch (err) {\n//       setError(err.response?.data?.message || \"Failed to fetch withdrawals\");\n//     } finally {\n//       setLoading((prev) => ({ ...prev, withdrawals: false }));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (userId) {\n//       loadWallet();\n//       loadRequests();\n//     }\n//   }, [userId]);\n\n//   // ðŸ”¹ Form Validation\n//   const validateForm = () => {\n//     const errors = {};\n//     let isValid = true;\n\n//     if (!withdrawalForm.bankName.trim()) {\n//       errors.bankName = \"Bank name is required\";\n//       isValid = false;\n//     }\n//     if (\n//       !withdrawalForm.accountNumber.trim() ||\n//       !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)\n//     ) {\n//       errors.accountNumber = \"Valid account number is required (9-18 digits)\";\n//       isValid = false;\n//     }\n//     if (\n//       !withdrawalForm.ifscCode.trim() ||\n//       !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)\n//     ) {\n//       errors.ifscCode = \"Valid IFSC code is required\";\n//       isValid = false;\n//     }\n//     if (\n//       !withdrawalForm.mobileNumber.trim() ||\n//       !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)\n//     ) {\n//       errors.mobileNumber = \"Valid Indian mobile number is required\";\n//       isValid = false;\n//     }\n//     if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n//       errors.amount = \"Minimum withdrawal amount is â‚¹1000\";\n//       isValid = false;\n//     } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n//       errors.amount = \"Insufficient balance\";\n//       isValid = false;\n//     }\n\n//     setFormErrors(errors);\n//     return isValid;\n//   };\n\n//   // ðŸ”¹ Withdrawal Submit\n//   const handleWithdrawalSubmit = async () => {\n//     if (!validateForm()) return;\n\n//     setLoading((prev) => ({ ...prev, submit: true }));\n//     setError(\"\");\n//     setSuccess(\"\");\n\n//     try {\n//       await userWalletAPI.requestWithdrawal(userId, withdrawalForm.amount, withdrawalForm);\n//       setSuccess(\"Withdrawal request submitted successfully!\");\n//       setShowWithdrawForm(false);\n//       setWithdrawalForm({\n//         bankName: \"\",\n//         accountNumber: \"\",\n//         ifscCode: \"\",\n//         mobileNumber: \"\",\n//         amount: \"\",\n//       });\n//       await Promise.all([loadWallet(), loadRequests()]);\n//     } catch (err) {\n//       setError(err.response?.data?.message || \"Withdrawal failed\");\n//     } finally {\n//       setLoading((prev) => ({ ...prev, submit: false }));\n//     }\n//   };\n\n//   // ðŸ”¹ Input Change\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setWithdrawalForm((prev) => ({ ...prev, [name]: value }));\n//     if (formErrors[name]) {\n//       setFormErrors((prev) => ({ ...prev, [name]: \"\" }));\n//     }\n//   };\n\n//   // ðŸ”¹ Status UI\n//   const getStatusIcon = (status) => {\n//     switch (status) {\n//       case \"Pending\":\n//         return <Clock className=\"h-4 w-4 text-yellow-500\" />;\n//       case \"Completed\":\n//         return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n//       case \"Rejected\":\n//         return <X className=\"h-4 w-4 text-red-500\" />;\n//       default:\n//         return <Clock className=\"h-4 w-4 text-gray-500\" />;\n//     }\n//   };\n\n//   const getStatusColor = (status) => {\n//     switch (status) {\n//       case \"Pending\":\n//         return \"bg-yellow-100 text-yellow-700\";\n//       case \"Completed\":\n//         return \"bg-green-100 text-green-700\";\n//       case \"Rejected\":\n//         return \"bg-red-100 text-red-700\";\n//       default:\n//         return \"bg-gray-100 text-gray-700\";\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     const options = { day: \"numeric\", month: \"short\", year: \"numeric\" };\n//     return new Date(dateString).toLocaleDateString(\"en-IN\", options);\n//   };\n\n//   return (\n//     <div className=\"p-4 md:p-6 max-w-5xl mx-auto\">\n//       {/* Wallet Balance */}\n//       <div className=\"bg-gradient-to-r from-indigo-500 to-blue-600 text-white rounded-2xl p-6 flex items-center justify-between shadow-lg\">\n//         <div>\n//           <h2 className=\"text-lg font-semibold\">Wallet Balance</h2>\n//           <p className=\"text-3xl font-bold flex items-center gap-2 mt-2\">\n//             <IndianRupee size={24} /> {wallet.balance.toFixed(2)}\n//           </p>\n//         </div>\n//         <WalletIcon size={50} className=\"opacity-70\" />\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"mt-6 flex gap-4 border-b\">\n//         <button\n//           onClick={() => setActiveTab(\"transactions\")}\n//           className={`pb-2 px-4 ${\n//             activeTab === \"transactions\"\n//               ? \"border-b-2 border-blue-600 font-semibold text-blue-600\"\n//               : \"text-gray-600\"\n//           }`}\n//         >\n//           Transactions\n//         </button>\n//         <button\n//           onClick={() => setActiveTab(\"withdrawals\")}\n//           className={`pb-2 px-4 ${\n//             activeTab === \"withdrawals\"\n//               ? \"border-b-2 border-blue-600 font-semibold text-blue-600\"\n//               : \"text-gray-600\"\n//           }`}\n//         >\n//           Withdrawals\n//         </button>\n//       </div>\n\n//       {/* Success / Error */}\n//       {error && <p className=\"mt-4 text-red-600 bg-red-50 p-2 rounded\">{error}</p>}\n//       {success && <p className=\"mt-4 text-green-600 bg-green-50 p-2 rounded\">{success}</p>}\n\n//       {/* Transactions */}\n//       {activeTab === \"transactions\" && (\n//         <div className=\"mt-6 space-y-3\">\n//           {wallet.transactions.length === 0 ? (\n//             <p className=\"text-gray-500 text-center\">No transactions yet.</p>\n//           ) : (\n//             wallet.transactions.map((t, i) => (\n//               <div\n//                 key={i}\n//                 className=\"flex justify-between items-center bg-white shadow-sm p-3 rounded-lg\"\n//               >\n//                 <div>\n//                   <p className=\"font-medium\">{t.type}</p>\n//                   <p className=\"text-sm text-gray-500\">{formatDate(t.date)}</p>\n//                 </div>\n//                 <p\n//                   className={`font-semibold ${\n//                     t.type === \"Credit\" ? \"text-green-600\" : \"text-red-600\"\n//                   }`}\n//                 >\n//                   {t.type === \"Credit\" ? \"+\" : \"-\"} â‚¹{t.amount}\n//                 </p>\n//               </div>\n//             ))\n//           )}\n//         </div>\n//       )}\n\n//       {/* Withdrawals */}\n//       {activeTab === \"withdrawals\" && (\n//         <div className=\"mt-6 space-y-3\">\n//           <button\n//             onClick={() => setShowWithdrawForm(!showWithdrawForm)}\n//             className=\"bg-blue-600 text-white px-4 py-2 rounded-lg shadow hover:bg-blue-700\"\n//           >\n//             + New Withdrawal\n//           </button>\n\n//           {showWithdrawForm && (\n//             <div className=\"mt-4 bg-white shadow rounded-xl p-4 space-y-4\">\n//               {[\"bankName\", \"accountNumber\", \"ifscCode\", \"mobileNumber\", \"amount\"].map((field) => (\n//                 <div key={field}>\n//                   <input\n//                     type={field === \"amount\" ? \"number\" : \"text\"}\n//                     name={field}\n//                     placeholder={\n//                       field === \"bankName\"\n//                         ? \"Bank Name\"\n//                         : field === \"accountNumber\"\n//                         ? \"Account Number\"\n//                         : field === \"ifscCode\"\n//                         ? \"IFSC Code\"\n//                         : field === \"mobileNumber\"\n//                         ? \"Mobile Number\"\n//                         : \"Amount\"\n//                     }\n//                     value={withdrawalForm[field]}\n//                     onChange={handleInputChange}\n//                     className={`w-full border rounded-lg px-3 py-2 ${\n//                       formErrors[field] ? \"border-red-500\" : \"border-gray-300\"\n//                     }`}\n//                   />\n//                   {formErrors[field] && (\n//                     <p className=\"text-red-500 text-sm mt-1\">{formErrors[field]}</p>\n//                   )}\n//                 </div>\n//               ))}\n//               <button\n//                 onClick={handleWithdrawalSubmit}\n//                 disabled={loading.submit}\n//                 className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 disabled:opacity-50\"\n//               >\n//                 {loading.submit ? \"Submitting...\" : \"Submit Withdrawal\"}\n//               </button>\n//             </div>\n//           )}\n\n//           <div className=\"space-y-3\">\n//             {withdrawalRequests.length === 0 ? (\n//               <p className=\"text-gray-500 text-center\">No withdrawal requests yet.</p>\n//             ) : (\n//               withdrawalRequests.map((req, i) => (\n//                 <div\n//                   key={i}\n//                   className=\"flex justify-between items-center bg-white shadow-sm p-3 rounded-lg\"\n//                 >\n//                   <div>\n//                     <p className=\"font-medium\">â‚¹{req.amount}</p>\n//                     <p className=\"text-sm text-gray-500\">{formatDate(req.date)}</p>\n//                   </div>\n//                   <span\n//                     className={`flex items-center gap-1 text-sm px-2 py-1 rounded-full ${getStatusColor(\n//                       req.status\n//                     )}`}\n//                   >\n//                     {getStatusIcon(req.status)}\n//                     {req.status}\n//                   </span>\n//                 </div>\n//               ))\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default EnhancedWallet;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ArrowUp, Clock, CheckCircle, X, Plus, Wallet as WalletIcon, IndianRupee } from \"lucide-react\";\nimport userWalletAPI from \"../../services/userWalletApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnhancedWallet = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [wallet, setWallet] = useState({\n    balance: 0,\n    transactions: []\n  });\n  const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n  const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n  const [loading, setLoading] = useState({\n    wallet: false,\n    withdrawals: false,\n    submit: false\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"transactions\");\n  const [withdrawalForm, setWithdrawalForm] = useState({\n    bankName: \"\",\n    accountNumber: \"\",\n    ifscCode: \"\",\n    mobileNumber: \"\",\n    amount: \"\"\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const loadWallet = async () => {\n    if (!userId) return;\n    try {\n      setLoading(prev => ({\n        ...prev,\n        wallet: true\n      }));\n      const res = await userWalletAPI.getWallet(userId);\n      setWallet({\n        balance: res.data.balance || 0,\n        transactions: res.data.transactions || []\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to fetch wallet\");\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        wallet: false\n      }));\n    }\n  };\n  const loadRequests = async () => {\n    if (!userId) return;\n    try {\n      setLoading(prev => ({\n        ...prev,\n        withdrawals: true\n      }));\n      const res = await userWalletAPI.getWithdrawals(userId);\n      setWithdrawalRequests(res.data || []);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to fetch withdrawals\");\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        withdrawals: false\n      }));\n    }\n  };\n  useEffect(() => {\n    if (userId) {\n      loadWallet();\n      loadRequests();\n    }\n  }, [userId]);\n  const validateForm = () => {\n    const errors = {};\n    let isValid = true;\n    if (!withdrawalForm.bankName.trim()) {\n      errors.bankName = \"Bank name is required\";\n      isValid = false;\n    }\n    if (!withdrawalForm.accountNumber.trim() || !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)) {\n      errors.accountNumber = \"Valid account number is required (9-18 digits)\";\n      isValid = false;\n    }\n    if (!withdrawalForm.ifscCode.trim() || !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)) {\n      errors.ifscCode = \"Valid IFSC code is required\";\n      isValid = false;\n    }\n    if (!withdrawalForm.mobileNumber.trim() || !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)) {\n      errors.mobileNumber = \"Valid Indian mobile number is required\";\n      isValid = false;\n    }\n    if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n      errors.amount = \"Minimum withdrawal amount is â‚¹1000\";\n      isValid = false;\n    } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n      errors.amount = \"Insufficient balance\";\n      isValid = false;\n    }\n    setFormErrors(errors);\n    return isValid;\n  };\n  const handleWithdrawalSubmit = async () => {\n    if (!validateForm()) return;\n    setLoading(prev => ({\n      ...prev,\n      submit: true\n    }));\n    setError(\"\");\n    setSuccess(\"\");\n    try {\n      // âœ… Correct API call\n      await userWalletAPI.requestWithdrawal(userId, withdrawalForm);\n      setSuccess(\"Withdrawal request submitted successfully!\");\n      setShowWithdrawForm(false);\n      setWithdrawalForm({\n        bankName: \"\",\n        accountNumber: \"\",\n        ifscCode: \"\",\n        mobileNumber: \"\",\n        amount: \"\"\n      });\n      await Promise.all([loadWallet(), loadRequests()]);\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Withdrawal failed\");\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        submit: false\n      }));\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setWithdrawalForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (formErrors[name]) {\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: \"\"\n      }));\n    }\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case \"Pending\":\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"h-4 w-4 text-yellow-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2110,\n          columnNumber: 16\n        }, this);\n      case \"Completed\":\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"h-4 w-4 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2112,\n          columnNumber: 16\n        }, this);\n      case \"Rejected\":\n        return /*#__PURE__*/_jsxDEV(X, {\n          className: \"h-4 w-4 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2114,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"h-4 w-4 text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2116,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case \"Pending\":\n        return \"bg-yellow-100 text-yellow-700\";\n      case \"Completed\":\n        return \"bg-green-100 text-green-700\";\n      case \"Rejected\":\n        return \"bg-red-100 text-red-700\";\n      default:\n        return \"bg-gray-100 text-gray-700\";\n    }\n  };\n  const formatDate = dateString => {\n    const options = {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\"\n    };\n    return new Date(dateString).toLocaleDateString(\"en-IN\", options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 md:p-6 max-w-5xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gradient-to-r from-indigo-500 to-blue-600 text-white rounded-2xl p-6 flex items-center justify-between shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold\",\n          children: \"Wallet Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-3xl font-bold flex items-center gap-2 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(IndianRupee, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2144,\n            columnNumber: 13\n          }, this), \" \", wallet.balance.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WalletIcon, {\n        size: 50,\n        className: \"opacity-70\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 flex gap-4 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(\"transactions\"),\n        className: `pb-2 px-4 ${activeTab === \"transactions\" ? \"border-b-2 border-blue-600 font-semibold text-blue-600\" : \"text-gray-600\"}`,\n        children: \"Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(\"withdrawals\"),\n        className: `pb-2 px-4 ${activeTab === \"withdrawals\" ? \"border-b-2 border-blue-600 font-semibold text-blue-600\" : \"text-gray-600\"}`,\n        children: \"Withdrawals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2150,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-red-600 bg-red-50 p-2 rounded\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2173,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-green-600 bg-green-50 p-2 rounded\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2174,\n      columnNumber: 19\n    }, this), activeTab === \"transactions\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 space-y-3\",\n      children: wallet.transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-center\",\n        children: \"No transactions yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2179,\n        columnNumber: 13\n      }, this) : wallet.transactions.map((t, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center bg-white shadow-sm p-3 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium\",\n            children: t.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2187,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: formatDate(t.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2188,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2186,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `font-semibold ${t.type === \"Credit\" ? \"text-green-600\" : \"text-red-600\"}`,\n          children: [t.type === \"Credit\" ? \"+\" : \"-\", \" \\u20B9\", t.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2190,\n          columnNumber: 17\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2182,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2177,\n      columnNumber: 9\n    }, this), activeTab === \"withdrawals\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 space-y-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowWithdrawForm(!showWithdrawForm),\n        className: \"bg-blue-600 text-white px-4 py-2 rounded-lg shadow hover:bg-blue-700\",\n        children: \"+ New Withdrawal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2205,\n        columnNumber: 11\n      }, this), showWithdrawForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 bg-white shadow rounded-xl p-4 space-y-4\",\n        children: [[\"bankName\", \"accountNumber\", \"ifscCode\", \"mobileNumber\", \"amount\"].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: field === \"amount\" ? \"number\" : \"text\",\n            name: field,\n            placeholder: field === \"bankName\" ? \"Bank Name\" : field === \"accountNumber\" ? \"Account Number\" : field === \"ifscCode\" ? \"IFSC Code\" : field === \"mobileNumber\" ? \"Mobile Number\" : \"Amount\",\n            value: withdrawalForm[field],\n            onChange: handleInputChange,\n            className: `w-full border rounded-lg px-3 py-2 ${formErrors[field] ? \"border-red-500\" : \"border-gray-300\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2216,\n            columnNumber: 19\n          }, this), formErrors[field] && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: formErrors[field]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2237,\n            columnNumber: 21\n          }, this)]\n        }, field, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2215,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleWithdrawalSubmit,\n          disabled: loading.submit,\n          className: \"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 disabled:opacity-50\",\n          children: loading.submit ? \"Submitting...\" : \"Submit Withdrawal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2241,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: withdrawalRequests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-center\",\n          children: \"No withdrawal requests yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2253,\n          columnNumber: 15\n        }, this) : withdrawalRequests.map((req, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center bg-white shadow-sm p-3 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-medium\",\n              children: [\"\\u20B9\", req.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2261,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: formatDate(req.date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2262,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2260,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `flex items-center gap-1 text-sm px-2 py-1 rounded-full ${getStatusColor(req.status)}`,\n            children: [getStatusIcon(req.status), req.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2264,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2256,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2139,\n    columnNumber: 5\n  }, this);\n};\n_s(EnhancedWallet, \"I/PjQx2lZQbP6MRyOMWZrIHlvoM=\", false, function () {\n  return [useParams];\n});\n_c = EnhancedWallet;\nexport default EnhancedWallet;\nvar _c;\n$RefreshReg$(_c, \"EnhancedWallet\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ArrowUp","Clock","CheckCircle","X","Plus","Wallet","WalletIcon","IndianRupee","userWalletAPI","jsxDEV","_jsxDEV","EnhancedWallet","_s","userId","wallet","setWallet","balance","transactions","withdrawalRequests","setWithdrawalRequests","showWithdrawForm","setShowWithdrawForm","loading","setLoading","withdrawals","submit","error","setError","success","setSuccess","activeTab","setActiveTab","withdrawalForm","setWithdrawalForm","bankName","accountNumber","ifscCode","mobileNumber","amount","formErrors","setFormErrors","loadWallet","prev","res","getWallet","data","err","_err$response","_err$response$data","response","message","loadRequests","getWithdrawals","_err$response2","_err$response2$data","validateForm","errors","isValid","trim","test","parseFloat","handleWithdrawalSubmit","requestWithdrawal","Promise","all","_err$response3","_err$response3$data","handleInputChange","e","name","value","target","getStatusIcon","status","className","fileName","_jsxFileName","lineNumber","columnNumber","getStatusColor","formatDate","dateString","options","day","month","year","Date","toLocaleDateString","children","size","toFixed","onClick","length","map","t","i","type","date","field","placeholder","onChange","disabled","req","_c","$RefreshReg$"],"sources":["C:/Users/moazz/Downloads/Ecommerce-MLM-Chain-main/Ecommerce-MLM-Chain-main/frontend/frontend/src/components/dashboard/Wallet.jsx"],"sourcesContent":["// // // // // import React, { useState, useEffect, useCallback } from 'react';\n// // // // // import { ArrowUp, Clock, CheckCircle, X, Loader, Banknote, Plus, Minus } from 'lucide-react';\n\n// // // // // const EnhancedWallet = ({ userId: propUserId, userToken: propUserToken }) => {\n// // // // //   const [wallet, setWallet] = useState({ balance: 0, transactions: [] });\n// // // // //   const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n// // // // //   const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n// // // // //   const [loading, setLoading] = useState({ wallet: false, withdrawals: false, submit: false });\n// // // // //   const [error, setError] = useState('');\n// // // // //   const [success, setSuccess] = useState('');\n// // // // //   const [activeTab, setActiveTab] = useState('transactions'); // 'transactions' or 'withdrawals'\n\n// // // // //   // Withdrawal form state\n// // // // //   const [withdrawalForm, setWithdrawalForm] = useState({\n// // // // //     bankName: '',\n// // // // //     accountNumber: '',\n// // // // //     ifscCode: '',\n// // // // //     mobileNumber: '',\n// // // // //     amount: ''\n// // // // //   });\n\n// // // // //   // Form validation state\n// // // // //   const [formErrors, setFormErrors] = useState({\n// // // // //     bankName: '',\n// // // // //     accountNumber: '',\n// // // // //     ifscCode: '',\n// // // // //     mobileNumber: '',\n// // // // //     amount: ''\n// // // // //   });\n\n// // // // //   // helper: parse JWT to extract userId if token contains it\n// // // // //   const parseJwt = (token) => {\n// // // // //     if (!token) return null;\n// // // // //     try {\n// // // // //       const payload = JSON.parse(atob(token.split('.')[1]));\n// // // // //       return payload.userId || payload.sub || null;\n// // // // //     } catch (e) {\n// // // // //       return null;\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Resolve token and userId (prop -> localStorage.authData -> token)\n// // // // //   const resolvedToken = propUserToken\n// // // // //     || localStorage.getItem('token')\n// // // // //     || JSON.parse(localStorage.getItem('authData') || '{}')?.token\n// // // // //     || '';\n\n// // // // //   const resolvedUserId = propUserId\n// // // // //     || JSON.parse(localStorage.getItem('authData') || '{}')?.userId\n// // // // //     || parseJwt(resolvedToken)\n// // // // //     || null;\n\n// // // // //   const userAuthHeaders = () => {\n// // // // //     const token = resolvedToken;\n// // // // //     return {\n// // // // //       'Content-Type': 'application/json',\n// // // // //       Authorization: token ? `Bearer ${token}` : '',\n// // // // //     };\n// // // // //   };\n\n// // // // //   const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// // // // //   // fetch functions wrapped with useCallback so they can be safely used in useEffect deps\n// // // // //   const fetchWalletData = useCallback(async () => {\n// // // // //     if (!resolvedUserId) return;\n// // // // //     try {\n// // // // //       const res = await fetch(`${API_URL}/wallet/user/${resolvedUserId}`, { headers: userAuthHeaders() });\n// // // // //       const data = await res.json();\n// // // // //       if (!res.ok) throw new Error(data?.message || 'Failed to load wallet');\n// // // // //       setWallet({ balance: data.wallet?.balance || 0, transactions: data.wallet?.transactions || [] });\n// // // // //     } catch (err) {\n// // // // //       setError('Failed to fetch wallet data');\n// // // // //     }\n// // // // //   }, [resolvedUserId, resolvedToken]);\n\n// // // // //   const fetchWithdrawalHistory = useCallback(async () => {\n// // // // //     if (!resolvedUserId) return;\n// // // // //     try {\n// // // // //       const res = await fetch(`${API_URL}/wallet/withdrawal-requests/user/${resolvedUserId}`, { headers: userAuthHeaders() });\n// // // // //       const data = await res.json();\n// // // // //       if (!res.ok) throw new Error(data?.message || 'Failed to load withdrawal history');\n// // // // //       setWithdrawalRequests(data.withdrawalRequests || []);\n// // // // //     } catch (err) {\n// // // // //       setError('Failed to fetch withdrawal history');\n// // // // //     }\n// // // // //   }, [resolvedUserId, resolvedToken]);\n\n// // // // //   // Fetch data with error handling: skip requests if no userId/token\n// // // // //   useEffect(() => {\n// // // // //     const fetchData = async () => {\n// // // // //       if (!resolvedUserId) {\n// // // // //         setError('User not authenticated. Please login.');\n// // // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // // //         return;\n// // // // //       }\n// // // // //       if (!resolvedToken) {\n// // // // //         setError('Missing auth token. Please login again.');\n// // // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // // //         return;\n// // // // //       }\n\n// // // // //       try {\n// // // // //         setLoading(prev => ({ ...prev, wallet: true, withdrawals: true }));\n// // // // //         await Promise.all([fetchWalletData(), fetchWithdrawalHistory()]);\n// // // // //       } catch (err) {\n// // // // //         setError('Failed to load wallet data. Please try again.');\n// // // // //       } finally {\n// // // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // // //       }\n// // // // //     };\n\n// // // // //     fetchData();\n// // // // //   }, [resolvedUserId, resolvedToken, fetchWalletData, fetchWithdrawalHistory]); // <-- use resolved values\n\n// // // // //   const validateForm = () => {\n// // // // //     const errors = {};\n// // // // //     let isValid = true;\n\n// // // // //     if (!withdrawalForm.bankName.trim()) {\n// // // // //       errors.bankName = 'Bank name is required';\n// // // // //       isValid = false;\n// // // // //     }\n\n// // // // //     if (!withdrawalForm.accountNumber.trim() || !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)) {\n// // // // //       errors.accountNumber = 'Valid account number is required (9-18 digits)';\n// // // // //       isValid = false;\n// // // // //     }\n\n// // // // //     if (!withdrawalForm.ifscCode.trim() || !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)) {\n// // // // //       errors.ifscCode = 'Valid IFSC code is required';\n// // // // //       isValid = false;\n// // // // //     }\n\n// // // // //     if (!withdrawalForm.mobileNumber.trim() || !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)) {\n// // // // //       errors.mobileNumber = 'Valid Indian mobile number is required';\n// // // // //       isValid = false;\n// // // // //     }\n\n// // // // //     if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n// // // // //       errors.amount = 'Minimum withdrawal amount is â‚¹1000';\n// // // // //       isValid = false;\n// // // // //     } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n// // // // //       errors.amount = 'Insufficient balance';\n// // // // //       isValid = false;\n// // // // //     }\n\n// // // // //     setFormErrors(errors);\n// // // // //     return isValid;\n// // // // //   };\n\n// // // // //   const handleWithdrawalSubmit = async () => {\n// // // // //     if (!validateForm()) return;\n\n// // // // //     setLoading(prev => ({ ...prev, submit: true }));\n// // // // //     setError('');\n// // // // //     setSuccess('');\n\n// // // // //     try {\n// // // // //       const body = {\n// // // // //         userId: userId,\n// // // // //         amount: parseFloat(withdrawalForm.amount),\n// // // // //         bankName: withdrawalForm.bankName,\n// // // // //         accountNumber: withdrawalForm.accountNumber,\n// // // // //         ifscCode: withdrawalForm.ifscCode,\n// // // // //         mobileNumber: withdrawalForm.mobileNumber,\n// // // // //       };\n\n// // // // //       const res = await fetch(`${API_URL}/wallet/withdraw`, {\n// // // // //         method: 'POST',\n// // // // //         headers: userAuthHeaders(),\n// // // // //         body: JSON.stringify(body),\n// // // // //       });\n// // // // //       const data = await res.json();\n// // // // //       if (!data.success) throw new Error(data.message || 'Withdrawal failed');\n\n// // // // //       // refresh UI\n// // // // //       await Promise.all([fetchWalletData(), fetchWithdrawalHistory()]);\n// // // // //       setSuccess('Withdrawal request submitted successfully!');\n// // // // //       setShowWithdrawForm(false);\n// // // // //       setLoading(prev => ({ ...prev, submit: false }));\n// // // // //     } catch (err) {\n// // // // //       setError('Failed to submit withdrawal request. Please try again.');\n// // // // //     } finally {\n// // // // //       setLoading(prev => ({ ...prev, submit: false }));\n// // // // //     }\n// // // // //   };\n\n// // // // //   const handleInputChange = (e) => {\n// // // // //     const { name, value } = e.target;\n// // // // //     setWithdrawalForm(prev => ({\n// // // // //       ...prev,\n// // // // //       [name]: value\n// // // // //     }));\n    \n// // // // //     // Clear error when user starts typing\n// // // // //     if (formErrors[name]) {\n// // // // //       setFormErrors(prev => ({\n// // // // //         ...prev,\n// // // // //         [name]: ''\n// // // // //       }));\n// // // // //     }\n// // // // //   };\n\n// // // // //   const getStatusIcon = (status) => {\n// // // // //     switch (status) {\n// // // // //       case 'Pending':\n// // // // //         return <Clock className=\"h-5 w-5 text-yellow-500\" />;\n// // // // //       case 'Completed':\n// // // // //         return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n// // // // //       case 'Rejected':\n// // // // //         return <X className=\"h-5 w-5 text-red-500\" />;\n// // // // //       default:\n// // // // //         return <Clock className=\"h-5 w-5 text-gray-500\" />;\n// // // // //     }\n// // // // //   };\n\n// // // // //   const getStatusColor = (status) => {\n// // // // //     switch (status) {\n// // // // //       case 'Pending':\n// // // // //         return 'text-yellow-600 bg-yellow-50';\n// // // // //       case 'Completed':\n// // // // //         return 'text-green-600 bg-green-50';\n// // // // //       case 'Rejected':\n// // // // //         return 'text-red-600 bg-red-50';\n// // // // //       default:\n// // // // //         return 'text-gray-600 bg-gray-50';\n// // // // //     }\n// // // // //   };\n\n// // // // //   const formatDate = (dateString) => {\n// // // // //     const options = { day: 'numeric', month: 'short', year: 'numeric' };\n// // // // //     return new Date(dateString).toLocaleDateString('en-IN', options);\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <div className=\"p-4 md:p-6 max-w-6xl mx-auto\">\n// // // // //       <div className=\"mb-6\">\n// // // // //         <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900\">Wallet Dashboard</h2>\n// // // // //         <p className=\"text-gray-600\">Manage your earnings and withdrawals</p>\n// // // // //       </div>\n\n// // // // //       {/* Notifications */}\n// // // // //       {error && (\n// // // // //         <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg flex items-start gap-3\">\n// // // // //           <X className=\"h-5 w-5 text-red-500 mt-0.5 flex-shrink-0\" />\n// // // // //           <p className=\"text-red-600\">{error}</p>\n// // // // //         </div>\n// // // // //       )}\n\n// // // // //       {success && (\n// // // // //         <div className=\"mb-4 p-4 bg-green-50 border border-green-200 rounded-lg flex items-start gap-3\">\n// // // // //           <CheckCircle className=\"h-5 w-5 text-green-500 mt-0.5 flex-shrink-0\" />\n// // // // //           <p className=\"text-green-600\">{success}</p>\n// // // // //         </div>\n// // // // //       )}\n\n// // // // //       {/* Balance Card */}\n// // // // //       <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl shadow-lg p-6 mb-6 text-white\">\n// // // // //         <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n// // // // //           <div>\n// // // // //             <p className=\"text-blue-100 text-sm\">Available Balance</p>\n// // // // //             <p className=\"text-3xl md:text-4xl font-bold\">â‚¹{wallet.balance.toLocaleString('en-IN')}</p>\n// // // // //             <p className=\"text-blue-100 text-sm mt-2\">\n// // // // //               {wallet.balance >= 1000 ? (\n// // // // //                 'Eligible for withdrawal'\n// // // // //               ) : (\n// // // // //                 <>\n// // // // //                   <span className=\"font-medium\">â‚¹{(1000 - wallet.balance).toLocaleString('en-IN')}</span> more needed for withdrawal\n// // // // //                 </>\n// // // // //               )}\n// // // // //             </p>\n// // // // //           </div>\n// // // // //           <div className=\"flex gap-3 w-full md:w-auto\">\n// // // // //             <button\n// // // // //               onClick={() => setShowWithdrawForm(true)}\n// // // // //               disabled={wallet.balance < 1000}\n// // // // //               className={`flex items-center gap-2 px-4 py-2 rounded-lg font-medium transition-colors w-full md:w-auto justify-center ${\n// // // // //                 wallet.balance >= 1000\n// // // // //                   ? 'bg-white text-blue-600 hover:bg-blue-50'\n// // // // //                   : 'bg-gray-400 text-gray-200 cursor-not-allowed'\n// // // // //               }`}\n// // // // //             >\n// // // // //               <ArrowUp className=\"h-5 w-5\" />\n// // // // //               <span>Withdraw</span>\n// // // // //             </button>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Tabs */}\n// // // // //       <div className=\"flex border-b border-gray-200 mb-6\">\n// // // // //         <button\n// // // // //           className={`py-3 px-6 font-medium text-sm border-b-2 transition-colors ${\n// // // // //             activeTab === 'transactions'\n// // // // //               ? 'border-blue-500 text-blue-600'\n// // // // //               : 'border-transparent text-gray-500 hover:text-gray-700'\n// // // // //           }`}\n// // // // //           onClick={() => setActiveTab('transactions')}\n// // // // //         >\n// // // // //           Transactions\n// // // // //         </button>\n// // // // //         <button\n// // // // //           className={`py-3 px-6 font-medium text-sm border-b-2 transition-colors ${\n// // // // //             activeTab === 'withdrawals'\n// // // // //               ? 'border-blue-500 text-blue-600'\n// // // // //               : 'border-transparent text-gray-500 hover:text-gray-700'\n// // // // //           }`}\n// // // // //           onClick={() => setActiveTab('withdrawals')}\n// // // // //         >\n// // // // //           Withdrawals\n// // // // //         </button>\n// // // // //       </div>\n\n// // // // //       {/* Content based on active tab */}\n// // // // //       {activeTab === 'transactions' ? (\n// // // // //         <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n// // // // //           <div className=\"p-4 border-b border-gray-200 flex justify-between items-center\">\n// // // // //             <h3 className=\"text-lg font-semibold text-gray-900\">Transaction History</h3>\n// // // // //             <div className=\"text-sm text-gray-500\">\n// // // // //               {wallet.transactions.length} records\n// // // // //             </div>\n// // // // //           </div>\n// // // // //           <div className=\"max-h-[500px] overflow-y-auto\">\n// // // // //             {loading.wallet ? (\n// // // // //               <div className=\"p-8 text-center\">\n// // // // //                 <Loader className=\"h-8 w-8 mx-auto animate-spin text-blue-500\" />\n// // // // //                 <p className=\"mt-2 text-gray-500\">Loading transactions...</p>\n// // // // //               </div>\n// // // // //             ) : wallet.transactions.length === 0 ? (\n// // // // //               <div className=\"p-8 text-center text-gray-500\">\n// // // // //                 <Banknote className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n// // // // //                 <p>No transactions yet</p>\n// // // // //               </div>\n// // // // //             ) : (\n// // // // //               <div className=\"divide-y divide-gray-200\">\n// // // // //                 {wallet.transactions.map((txn) => (\n// // // // //                   <div key={txn.id} className=\"p-4 hover:bg-gray-50 transition-colors\">\n// // // // //                     <div className=\"flex justify-between items-center\">\n// // // // //                       <div className=\"flex items-center gap-4\">\n// // // // //                         <div className={`p-3 rounded-full ${txn.amount > 0 ? 'bg-green-100' : 'bg-red-100'}`}>\n// // // // //                           {txn.amount > 0 ? (\n// // // // //                             <Plus className=\"h-5 w-5 text-green-600\" />\n// // // // //                           ) : (\n// // // // //                             <Minus className=\"h-5 w-5 text-red-600\" />\n// // // // //                           )}\n// // // // //                         </div>\n// // // // //                         <div>\n// // // // //                           <p className=\"font-medium text-gray-900\">{txn.type}</p>\n// // // // //                           <p className=\"text-sm text-gray-500\">{txn.description}</p>\n// // // // //                           <p className=\"text-xs text-gray-400\">{formatDate(txn.date)}</p>\n// // // // //                         </div>\n// // // // //                       </div>\n// // // // //                       <div className=\"text-right\">\n// // // // //                         <p className={`font-semibold ${txn.amount > 0 ? 'text-green-600' : 'text-red-600'}`}>\n// // // // //                           {txn.amount > 0 ? '+' : ''}â‚¹{Math.abs(txn.amount).toLocaleString('en-IN')}\n// // // // //                         </p>\n// // // // //                         <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(txn.status)}`}>\n// // // // //                           {txn.status}\n// // // // //                         </span>\n// // // // //                       </div>\n// // // // //                     </div>\n// // // // //                   </div>\n// // // // //                 ))}\n// // // // //               </div>\n// // // // //             )}\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       ) : (\n// // // // //         <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n// // // // //           <div className=\"p-4 border-b border-gray-200 flex justify-between items-center\">\n// // // // //             <h3 className=\"text-lg font-semibold text-gray-900\">Withdrawal History</h3>\n// // // // //             <div className=\"text-sm text-gray-500\">\n// // // // //               {withdrawalRequests.length} requests\n// // // // //             </div>\n// // // // //           </div>\n// // // // //           <div className=\"max-h-[500px] overflow-y-auto\">\n// // // // //             {loading.withdrawals ? (\n// // // // //               <div className=\"p-8 text-center\">\n// // // // //                 <Loader className=\"h-8 w-8 mx-auto animate-spin text-blue-500\" />\n// // // // //                 <p className=\"mt-2 text-gray-500\">Loading withdrawals...</p>\n// // // // //               </div>\n// // // // //             ) : withdrawalRequests.length === 0 ? (\n// // // // //               <div className=\"p-8 text-center text-gray-500\">\n// // // // //                 <ArrowUp className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n// // // // //                 <p>No withdrawal requests yet</p>\n// // // // //                 <button\n// // // // //                   onClick={() => setShowWithdrawForm(true)}\n// // // // //                   className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n// // // // //                 >\n// // // // //                   Make your first withdrawal\n// // // // //                 </button>\n// // // // //               </div>\n// // // // //             ) : (\n// // // // //               <div className=\"divide-y divide-gray-200\">\n// // // // //                 {withdrawalRequests.map((request) => (\n// // // // //                   <div key={request.id} className=\"p-4 hover:bg-gray-50 transition-colors\">\n// // // // //                     <div className=\"flex justify-between items-start\">\n// // // // //                       <div className=\"flex items-start gap-3\">\n// // // // //                         {getStatusIcon(request.status)}\n// // // // //                         <div>\n// // // // //                           <p className=\"font-medium text-gray-900\">â‚¹{request.amount.toLocaleString('en-IN')}</p>\n// // // // //                           <p className=\"text-sm text-gray-600\">{request.bankName}</p>\n// // // // //                           <p className=\"text-xs text-gray-500\">Account: {request.accountNumber}</p>\n// // // // //                           <p className=\"text-xs text-gray-500\">IFSC: {request.ifscCode}</p>\n// // // // //                           <p className=\"text-xs text-gray-400\">{formatDate(request.date)}</p>\n// // // // //                         </div>\n// // // // //                       </div>\n// // // // //                       <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(request.status)}`}>\n// // // // //                         {request.status}\n// // // // //                       </span>\n// // // // //                     </div>\n// // // // //                   </div>\n// // // // //                 ))}\n// // // // //               </div>\n// // // // //             )}\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       )}\n\n// // // // //       {/* Withdrawal Form Modal */}\n// // // // //       {showWithdrawForm && (\n// // // // //         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n// // // // //           <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full max-h-[90vh] overflow-y-auto\">\n// // // // //             <div className=\"p-6\">\n// // // // //               <div className=\"flex justify-between items-center mb-4\">\n// // // // //                 <h3 className=\"text-lg font-semibold text-gray-900\">Withdraw Money</h3>\n// // // // //                 <button\n// // // // //                   onClick={() => setShowWithdrawForm(false)}\n// // // // //                   className=\"text-gray-400 hover:text-gray-600\"\n// // // // //                   disabled={loading.submit}\n// // // // //                 >\n// // // // //                   <X className=\"h-6 w-6\" />\n// // // // //                 </button>\n// // // // //               </div>\n\n// // // // //               <div className=\"space-y-4\">\n// // // // //                 <div>\n// // // // //                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// // // // //                     Bank Name <span className=\"text-red-500\">*</span>\n// // // // //                   </label>\n// // // // //                   <input\n// // // // //                     type=\"text\"\n// // // // //                     name=\"bankName\"\n// // // // //                     value={withdrawalForm.bankName}\n// // // // //                     onChange={handleInputChange}\n// // // // //                     required\n// // // // //                     className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\n// // // // //                       formErrors.bankName ? 'border-red-500' : 'border-gray-300'\n// // // // //                     }`}\n// // // // //                     placeholder=\"Enter bank name\"\n// // // // //                     disabled={loading.submit}\n// // // // //                   />\n// // // // //                   {formErrors.bankName && (\n// // // // //                     <p className=\"mt-1 text-sm text-red-600\">{formErrors.bankName}</p>\n// // // // //                   )}\n// // // // //                 </div>\n\n// // // // //                 <div>\n// // // // //                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// // // // //                     Account Number <span className=\"text-red-500\">*</span>\n// // // // //                   </label>\n// // // // //                   <input\n// // // // //                     type=\"text\"\n// // // // //                     name=\"accountNumber\"\n// // // // //                     value={withdrawalForm.accountNumber}\n// // // // //                     onChange={handleInputChange}\n// // // // //                     required\n// // // // //                     className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\n// // // // //                       formErrors.accountNumber ? 'border-red-500' : 'border-gray-300'\n// // // // //                     }`}\n// // // // //                     placeholder=\"Enter account number\"\n// // // // //                     disabled={loading.submit}\n// // // // //                   />\n// // // // //                   {formErrors.accountNumber && (\n// // // // //                     <p className=\"mt-1 text-sm text-red-600\">{formErrors.accountNumber}</p>\n// // // // //                   )}\n// // // // //                 </div>\n\n// // // // //                 <div>\n// // // // //                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// // // // //                     IFSC Code <span className=\"text-red-500\">*</span>\n// // // // //                   </label>\n// // // // //                   <input\n// // // // //                     type=\"text\"\n// // // // //                     name=\"ifscCode\"\n// // // // //                     value={withdrawalForm.ifscCode}\n// // // // //                     onChange={handleInputChange}\n// // // // //                     required\n// // // // //                     className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\n// // // // //                       formErrors.ifscCode ? 'border-red-500' : 'border-gray-300'\n// // // // //                     }`}\n// // // // //                     placeholder=\"Enter IFSC code\"\n// // // // //                     disabled={loading.submit}\n// // // // //                   />\n// // // // //                   {formErrors.ifscCode && (\n// // // // //                     <p className=\"mt-1 text-sm text-red-600\">{formErrors.ifscCode}</p>\n// // // // //                   )}\n// // // // //                 </div>\n\n// // // // //                 <div>\n// // // // //                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// // // // //                     Mobile Number <span className=\"text-red-500\">*</span>\n// // // // //                   </label>\n// // // // //                   <input\n// // // // //                     type=\"tel\"\n// // // // //                     name=\"mobileNumber\"\n// // // // //                     value={withdrawalForm.mobileNumber}\n// // // // //                     onChange={handleInputChange}\n// // // // //                     required\n// // // // //                     className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\n// // // // //                       formErrors.mobileNumber ? 'border-red-500' : 'border-gray-300'\n// // // // //                     }`}\n// // // // //                     placeholder=\"Enter mobile number\"\n// // // // //                     disabled={loading.submit}\n// // // // //                   />\n// // // // //                   {formErrors.mobileNumber && (\n// // // // //                     <p className=\"mt-1 text-sm text-red-600\">{formErrors.mobileNumber}</p>\n// // // // //                   )}\n// // // // //                 </div>\n\n// // // // //                 <div>\n// // // // //                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// // // // //                     Amount (â‚¹) <span className=\"text-red-500\">*</span>\n// // // // //                   </label>\n// // // // //                   <input\n// // // // //                     type=\"number\"\n// // // // //                     name=\"amount\"\n// // // // //                     value={withdrawalForm.amount}\n// // // // //                     onChange={handleInputChange}\n// // // // //                     required\n// // // // //                     min=\"1000\"\n// // // // //                     max={wallet.balance}\n// // // // //                     className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\n// // // // //                       formErrors.amount ? 'border-red-500' : 'border-gray-300'\n// // // // //                     }`}\n// // // // //                     placeholder=\"Minimum â‚¹1000\"\n// // // // //                     disabled={loading.submit}\n// // // // //                   />\n// // // // //                   {formErrors.amount && (\n// // // // //                     <p className=\"mt-1 text-sm text-red-600\">{formErrors.amount}</p>\n// // // // //                   )}\n// // // // //                   <p className=\"text-xs text-gray-500 mt-1\">\n// // // // //                     Available: â‚¹{wallet.balance.toLocaleString('en-IN')} | Minimum: â‚¹1,000\n// // // // //                   </p>\n// // // // //                 </div>\n\n// // // // //                 <div className=\"flex gap-3 pt-4\">\n// // // // //                   <button\n// // // // //                     type=\"button\"\n// // // // //                     onClick={() => setShowWithdrawForm(false)}\n// // // // //                     disabled={loading.submit}\n// // // // //                     className=\"flex-1 py-3 px-4 border border-gray-300 rounded-lg text-gray-700 font-medium hover:bg-gray-50 disabled:opacity-50\"\n// // // // //                   >\n// // // // //                     Cancel\n// // // // //                   </button>\n// // // // //                   <button\n// // // // //                     type=\"button\"\n// // // // //                     onClick={handleWithdrawalSubmit}\n// // // // //                     disabled={loading.submit}\n// // // // //                     className=\"flex-1 py-3 px-4 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\n// // // // //                   >\n// // // // //                     {loading.submit ? (\n// // // // //                       <>\n// // // // //                         <Loader className=\"h-4 w-4 animate-spin\" />\n// // // // //                         Processing...\n// // // // //                       </>\n// // // // //                     ) : (\n// // // // //                       'Submit Request'\n// // // // //                     )}\n// // // // //                   </button>\n// // // // //                 </div>\n// // // // //               </div>\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // export default EnhancedWallet;\n\n\n// // // // import React, { useState, useEffect, useCallback } from 'react';\n// // // // import { ArrowUp, Clock, CheckCircle, X, Loader, Banknote, Plus, Minus } from 'lucide-react';\n\n// // // // const EnhancedWallet = ({ userId: propUserId, userToken: propUserToken }) => {\n// // // //   const [wallet, setWallet] = useState({ balance: 0, transactions: [] });\n// // // //   const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n// // // //   const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n// // // //   const [loading, setLoading] = useState({ wallet: false, withdrawals: false, submit: false });\n// // // //   const [error, setError] = useState('');\n// // // //   const [success, setSuccess] = useState('');\n// // // //   const [activeTab, setActiveTab] = useState('transactions');\n\n// // // //   const [withdrawalForm, setWithdrawalForm] = useState({\n// // // //     bankName: '',\n// // // //     accountNumber: '',\n// // // //     ifscCode: '',\n// // // //     mobileNumber: '',\n// // // //     amount: ''\n// // // //   });\n\n// // // //   const [formErrors, setFormErrors] = useState({\n// // // //     bankName: '',\n// // // //     accountNumber: '',\n// // // //     ifscCode: '',\n// // // //     mobileNumber: '',\n// // // //     amount: ''\n// // // //   });\n\n// // // //   const parseJwt = (token) => {\n// // // //     if (!token) return null;\n// // // //     try {\n// // // //       const payload = JSON.parse(atob(token.split('.')[1]));\n// // // //       return payload.userId || payload.sub || null;\n// // // //     } catch {\n// // // //       return null;\n// // // //     }\n// // // //   };\n\n// // // //   const resolvedToken = propUserToken\n// // // //     || localStorage.getItem('token')\n// // // //     || JSON.parse(localStorage.getItem('authData') || '{}')?.token\n// // // //     || '';\n\n// // // //   const resolvedUserId = propUserId\n// // // //     || JSON.parse(localStorage.getItem('authData') || '{}')?.userId\n// // // //     || parseJwt(resolvedToken)\n// // // //     || null;\n\n// // // //   const userAuthHeaders = () => {\n// // // //     const token = resolvedToken;\n// // // //     return {\n// // // //       'Content-Type': 'application/json',\n// // // //       Authorization: token ? `Bearer ${token}` : '',\n// // // //     };\n// // // //   };\n\n// // // //   const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// // // //   const fetchWalletData = useCallback(async () => {\n// // // //     if (!resolvedUserId) return;\n// // // //     try {\n// // // //       const res = await fetch(`${API_URL}/wallet/user/${resolvedUserId}`, { headers: userAuthHeaders() });\n// // // //       const data = await res.json();\n// // // //       if (!res.ok) throw new Error(data?.message || 'Failed to load wallet');\n// // // //       setWallet({ balance: data.wallet?.balance || 0, transactions: data.wallet?.transactions || [] });\n// // // //     } catch {\n// // // //       setError('Failed to fetch wallet data');\n// // // //     }\n// // // //   }, [resolvedUserId, resolvedToken]);\n\n// // // //   const fetchWithdrawalHistory = useCallback(async () => {\n// // // //     if (!resolvedUserId) return;\n// // // //     try {\n// // // //       const res = await fetch(`${API_URL}/wallet/withdrawal-requests/user/${resolvedUserId}`, { headers: userAuthHeaders() });\n// // // //       const data = await res.json();\n// // // //       if (!res.ok) throw new Error(data?.message || 'Failed to load withdrawal history');\n// // // //       setWithdrawalRequests(data.withdrawalRequests || []);\n// // // //     } catch {\n// // // //       setError('Failed to fetch withdrawal history');\n// // // //     }\n// // // //   }, [resolvedUserId, resolvedToken]);\n\n// // // //   useEffect(() => {\n// // // //     const fetchData = async () => {\n// // // //       if (!resolvedUserId) {\n// // // //         setError('User not authenticated. Please login.');\n// // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // //         return;\n// // // //       }\n// // // //       if (!resolvedToken) {\n// // // //         setError('Missing auth token. Please login again.');\n// // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // //         return;\n// // // //       }\n\n// // // //       try {\n// // // //         setLoading(prev => ({ ...prev, wallet: true, withdrawals: true }));\n// // // //         await Promise.all([fetchWalletData(), fetchWithdrawalHistory()]);\n// // // //       } catch {\n// // // //         setError('Failed to load wallet data. Please try again.');\n// // // //       } finally {\n// // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // //       }\n// // // //     };\n\n// // // //     fetchData();\n// // // //   }, [resolvedUserId, resolvedToken, fetchWalletData, fetchWithdrawalHistory]);\n\n// // // //   const validateForm = () => {\n// // // //     const errors = {};\n// // // //     let isValid = true;\n\n// // // //     if (!withdrawalForm.bankName.trim()) {\n// // // //       errors.bankName = 'Bank name is required';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.accountNumber.trim() || !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)) {\n// // // //       errors.accountNumber = 'Valid account number is required (9-18 digits)';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.ifscCode.trim() || !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)) {\n// // // //       errors.ifscCode = 'Valid IFSC code is required';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.mobileNumber.trim() || !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)) {\n// // // //       errors.mobileNumber = 'Valid Indian mobile number is required';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n// // // //       errors.amount = 'Minimum withdrawal amount is â‚¹1000';\n// // // //       isValid = false;\n// // // //     } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n// // // //       errors.amount = 'Insufficient balance';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     setFormErrors(errors);\n// // // //     return isValid;\n// // // //   };\n\n// // // //   const handleWithdrawalSubmit = async () => {\n// // // //     if (!validateForm()) return;\n\n// // // //     setLoading(prev => ({ ...prev, submit: true }));\n// // // //     setError('');\n// // // //     setSuccess('');\n\n// // // //     try {\n// // // //       const body = {\n// // // //         userId: resolvedUserId, // âœ… fixed here\n// // // //         amount: parseFloat(withdrawalForm.amount),\n// // // //         bankName: withdrawalForm.bankName,\n// // // //         accountNumber: withdrawalForm.accountNumber,\n// // // //         ifscCode: withdrawalForm.ifscCode,\n// // // //         mobileNumber: withdrawalForm.mobileNumber,\n// // // //       };\n\n// // // //       const res = await fetch(`${API_URL}/wallet/withdraw`, {\n// // // //         method: 'POST',\n// // // //         headers: userAuthHeaders(),\n// // // //         body: JSON.stringify(body),\n// // // //       });\n// // // //       const data = await res.json();\n// // // //       if (!data.success) throw new Error(data.message || 'Withdrawal failed');\n\n// // // //       await Promise.all([fetchWalletData(), fetchWithdrawalHistory()]);\n// // // //       setSuccess('Withdrawal request submitted successfully!');\n// // // //       setShowWithdrawForm(false);\n// // // //     } catch {\n// // // //       setError('Failed to submit withdrawal request. Please try again.');\n// // // //     } finally {\n// // // //       setLoading(prev => ({ ...prev, submit: false }));\n// // // //     }\n// // // //   };\n\n// // // //   const handleInputChange = (e) => {\n// // // //     const { name, value } = e.target;\n// // // //     setWithdrawalForm(prev => ({\n// // // //       ...prev,\n// // // //       [name]: value\n// // // //     }));\n\n// // // //     if (formErrors[name]) {\n// // // //       setFormErrors(prev => ({\n// // // //         ...prev,\n// // // //         [name]: ''\n// // // //       }));\n// // // //     }\n// // // //   };\n\n// // // //   const getStatusIcon = (status) => {\n// // // //     switch (status) {\n// // // //       case 'Pending': return <Clock className=\"h-5 w-5 text-yellow-500\" />;\n// // // //       case 'Completed': return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n// // // //       case 'Rejected': return <X className=\"h-5 w-5 text-red-500\" />;\n// // // //       default: return <Clock className=\"h-5 w-5 text-gray-500\" />;\n// // // //     }\n// // // //   };\n\n// // // //   const getStatusColor = (status) => {\n// // // //     switch (status) {\n// // // //       case 'Pending': return 'text-yellow-600 bg-yellow-50';\n// // // //       case 'Completed': return 'text-green-600 bg-green-50';\n// // // //       case 'Rejected': return 'text-red-600 bg-red-50';\n// // // //       default: return 'text-gray-600 bg-gray-50';\n// // // //     }\n// // // //   };\n\n// // // //   const formatDate = (dateString) => {\n// // // //     const options = { day: 'numeric', month: 'short', year: 'numeric' };\n// // // //     return new Date(dateString).toLocaleDateString('en-IN', options);\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"p-4 md:p-6 max-w-6xl mx-auto\">\n// // // //       {/* UI code remains same â€” I kept all your JSX untouched */}\n// // // //       {/* ... */}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default EnhancedWallet;\n\n\n// // // // import React, { useState, useEffect, useCallback } from 'react';\n// // // // import { ArrowUp, Clock, CheckCircle, X, Loader, Banknote, Plus, Minus } from 'lucide-react';\n\n// // // // const EnhancedWallet = ({ userId: propUserId, userToken: propUserToken }) => {\n// // // //   const [wallet, setWallet] = useState({ balance: 0, transactions: [] });\n// // // //   const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n// // // //   const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n// // // //   const [loading, setLoading] = useState({ wallet: false, withdrawals: false, submit: false });\n// // // //   const [error, setError] = useState('');\n// // // //   const [success, setSuccess] = useState('');\n// // // //   const [activeTab, setActiveTab] = useState('transactions');\n\n// // // //   const [withdrawalForm, setWithdrawalForm] = useState({\n// // // //     bankName: '',\n// // // //     accountNumber: '',\n// // // //     ifscCode: '',\n// // // //     mobileNumber: '',\n// // // //     amount: ''\n// // // //   });\n\n// // // //   const [formErrors, setFormErrors] = useState({\n// // // //     bankName: '',\n// // // //     accountNumber: '',\n// // // //     ifscCode: '',\n// // // //     mobileNumber: '',\n// // // //     amount: ''\n// // // //   });\n\n// // // //   const parseJwt = (token) => {\n// // // //     if (!token) return null;\n// // // //     try {\n// // // //       const payload = JSON.parse(atob(token.split('.')[1]));\n// // // //       return payload.userId || payload.sub || null;\n// // // //     } catch {\n// // // //       return null;\n// // // //     }\n// // // //   };\n\n// // // //   const resolvedToken = propUserToken\n// // // //     || localStorage.getItem('token')\n// // // //     || JSON.parse(localStorage.getItem('authData') || '{}')?.token\n// // // //     || '';\n\n// // // //   const resolvedUserId = propUserId\n// // // //     || JSON.parse(localStorage.getItem('authData') || '{}')?.userId\n// // // //     || parseJwt(resolvedToken)\n// // // //     || null;\n\n// // // //   const userAuthHeaders = () => {\n// // // //     const token = resolvedToken;\n// // // //     return {\n// // // //       'Content-Type': 'application/json',\n// // // //       Authorization: token ? `Bearer ${token}` : '',\n// // // //     };\n// // // //   };\n\n// // // //   const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// // // //   const fetchWalletData = useCallback(async () => {\n// // // //     if (!resolvedUserId) return;\n// // // //     try {\n// // // //       const res = await fetch(`${API_URL}/wallet/user/${resolvedUserId}`, { headers: userAuthHeaders() });\n// // // //       const data = await res.json();\n// // // //       if (!res.ok) throw new Error(data?.message || 'Failed to load wallet');\n// // // //       setWallet({ balance: data.wallet?.balance || 0, transactions: data.wallet?.transactions || [] });\n// // // //     } catch {\n// // // //       setError('Failed to fetch wallet data');\n// // // //     }\n// // // //   }, [resolvedUserId, resolvedToken]);\n\n// // // //   const fetchWithdrawalHistory = useCallback(async () => {\n// // // //     if (!resolvedUserId) return;\n// // // //     try {\n// // // //       const res = await fetch(`${API_URL}/wallet/withdrawal-requests/user/${resolvedUserId}`, { headers: userAuthHeaders() });\n// // // //       const data = await res.json();\n// // // //       if (!res.ok) throw new Error(data?.message || 'Failed to load withdrawal history');\n// // // //       setWithdrawalRequests(data.withdrawalRequests || []);\n// // // //     } catch {\n// // // //       setError('Failed to fetch withdrawal history');\n// // // //     }\n// // // //   }, [resolvedUserId, resolvedToken]);\n\n// // // //   useEffect(() => {\n// // // //     const fetchData = async () => {\n// // // //       if (!resolvedUserId) {\n// // // //         setError('User not authenticated. Please login.');\n// // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // //         return;\n// // // //       }\n// // // //       if (!resolvedToken) {\n// // // //         setError('Missing auth token. Please login again.');\n// // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // //         return;\n// // // //       }\n\n// // // //       try {\n// // // //         setLoading(prev => ({ ...prev, wallet: true, withdrawals: true }));\n// // // //         await Promise.all([fetchWalletData(), fetchWithdrawalHistory()]);\n// // // //       } catch {\n// // // //         setError('Failed to load wallet data. Please try again.');\n// // // //       } finally {\n// // // //         setLoading(prev => ({ ...prev, wallet: false, withdrawals: false }));\n// // // //       }\n// // // //     };\n\n// // // //     fetchData();\n// // // //   }, [resolvedUserId, resolvedToken, fetchWalletData, fetchWithdrawalHistory]);\n\n// // // //   const validateForm = () => {\n// // // //     const errors = {};\n// // // //     let isValid = true;\n\n// // // //     if (!withdrawalForm.bankName.trim()) {\n// // // //       errors.bankName = 'Bank name is required';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.accountNumber.trim() || !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)) {\n// // // //       errors.accountNumber = 'Valid account number is required (9-18 digits)';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.ifscCode.trim() || !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)) {\n// // // //       errors.ifscCode = 'Valid IFSC code is required';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.mobileNumber.trim() || !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)) {\n// // // //       errors.mobileNumber = 'Valid Indian mobile number is required';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n// // // //       errors.amount = 'Minimum withdrawal amount is â‚¹1000';\n// // // //       isValid = false;\n// // // //     } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n// // // //       errors.amount = 'Insufficient balance';\n// // // //       isValid = false;\n// // // //     }\n\n// // // //     setFormErrors(errors);\n// // // //     return isValid;\n// // // //   };\n\n// // // //   const handleWithdrawalSubmit = async () => {\n// // // //     if (!validateForm()) return;\n\n// // // //     setLoading(prev => ({ ...prev, submit: true }));\n// // // //     setError('');\n// // // //     setSuccess('');\n\n// // // //     try {\n// // // //       const body = {\n// // // //         userId: resolvedUserId, // âœ… fixed here\n// // // //         amount: parseFloat(withdrawalForm.amount),\n// // // //         bankName: withdrawalForm.bankName,\n// // // //         accountNumber: withdrawalForm.accountNumber,\n// // // //         ifscCode: withdrawalForm.ifscCode,\n// // // //         mobileNumber: withdrawalForm.mobileNumber,\n// // // //       };\n\n// // // //       const res = await fetch(`${API_URL}/wallet/withdraw`, {\n// // // //         method: 'POST',\n// // // //         headers: userAuthHeaders(),\n// // // //         body: JSON.stringify(body),\n// // // //       });\n// // // //       const data = await res.json();\n// // // //       if (!data.success) throw new Error(data.message || 'Withdrawal failed');\n\n// // // //       await Promise.all([fetchWalletData(), fetchWithdrawalHistory()]);\n// // // //       setSuccess('Withdrawal request submitted successfully!');\n// // // //       setShowWithdrawForm(false);\n// // // //     } catch {\n// // // //       setError('Failed to submit withdrawal request. Please try again.');\n// // // //     } finally {\n// // // //       setLoading(prev => ({ ...prev, submit: false }));\n// // // //     }\n// // // //   };\n\n// // // //   const handleInputChange = (e) => {\n// // // //     const { name, value } = e.target;\n// // // //     setWithdrawalForm(prev => ({\n// // // //       ...prev,\n// // // //       [name]: value\n// // // //     }));\n\n// // // //     if (formErrors[name]) {\n// // // //       setFormErrors(prev => ({\n// // // //         ...prev,\n// // // //         [name]: ''\n// // // //       }));\n// // // //     }\n// // // //   };\n\n// // // //   const getStatusIcon = (status) => {\n// // // //     switch (status) {\n// // // //       case 'Pending': return <Clock className=\"h-5 w-5 text-yellow-500\" />;\n// // // //       case 'Completed': return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n// // // //       case 'Rejected': return <X className=\"h-5 w-5 text-red-500\" />;\n// // // //       default: return <Clock className=\"h-5 w-5 text-gray-500\" />;\n// // // //     }\n// // // //   };\n\n// // // //   const getStatusColor = (status) => {\n// // // //     switch (status) {\n// // // //       case 'Pending': return 'text-yellow-600 bg-yellow-50';\n// // // //       case 'Completed': return 'text-green-600 bg-green-50';\n// // // //       case 'Rejected': return 'text-red-600 bg-red-50';\n// // // //       default: return 'text-gray-600 bg-gray-50';\n// // // //     }\n// // // //   };\n\n// // // //   const formatDate = (dateString) => {\n// // // //     const options = { day: 'numeric', month: 'short', year: 'numeric' };\n// // // //     return new Date(dateString).toLocaleDateString('en-IN', options);\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"p-4 md:p-6 max-w-6xl mx-auto\">\n// // // //       {/* Balance Card */}\n// // // //       <div className=\"bg-white shadow-md rounded-lg p-6 mb-6 flex items-center justify-between\">\n// // // //         <div>\n// // // //           <h2 className=\"text-lg font-semibold text-gray-700\">Wallet Balance</h2>\n// // // //           <p className=\"text-3xl font-bold text-gray-900\">â‚¹{wallet.balance}</p>\n// // // //         </div>\n// // // //         <button\n// // // //           onClick={() => setShowWithdrawForm(true)}\n// // // //           className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center\"\n// // // //         >\n// // // //           <ArrowUp className=\"h-5 w-5 mr-2\" /> Withdraw\n// // // //         </button>\n// // // //       </div>\n\n// // // //       {/* Tabs */}\n// // // //       <div className=\"flex space-x-4 border-b mb-4\">\n// // // //         <button\n// // // //           onClick={() => setActiveTab('transactions')}\n// // // //           className={`pb-2 ${activeTab === 'transactions' ? 'border-b-2 border-blue-600 text-blue-600' : 'text-gray-600'}`}\n// // // //         >\n// // // //           Transactions\n// // // //         </button>\n// // // //         <button\n// // // //           onClick={() => setActiveTab('withdrawals')}\n// // // //           className={`pb-2 ${activeTab === 'withdrawals' ? 'border-b-2 border-blue-600 text-blue-600' : 'text-gray-600'}`}\n// // // //         >\n// // // //           Withdrawals\n// // // //         </button>\n// // // //       </div>\n\n// // // //       {/* Error / Success Messages */}\n// // // //       {error && <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">{error}</div>}\n// // // //       {success && <div className=\"mb-4 p-3 bg-green-100 text-green-700 rounded\">{success}</div>}\n\n// // // //       {/* Transactions Tab */}\n// // // //       {activeTab === 'transactions' && (\n// // // //         <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n// // // //           {wallet.transactions.length > 0 ? (\n// // // //             <ul>\n// // // //               {wallet.transactions.map((txn, index) => (\n// // // //                 <li key={index} className=\"flex justify-between p-4 border-b\">\n// // // //                   <div className=\"flex items-center\">\n// // // //                     {txn.type === 'credit' ? (\n// // // //                       <Plus className=\"h-5 w-5 text-green-500 mr-2\" />\n// // // //                     ) : (\n// // // //                       <Minus className=\"h-5 w-5 text-red-500 mr-2\" />\n// // // //                     )}\n// // // //                     <span>{txn.description || txn.type}</span>\n// // // //                   </div>\n// // // //                   <div className=\"text-right\">\n// // // //                     <p className={txn.type === 'credit' ? 'text-green-600' : 'text-red-600'}>\n// // // //                       â‚¹{txn.amount}\n// // // //                     </p>\n// // // //                     <small className=\"text-gray-500\">{formatDate(txn.date)}</small>\n// // // //                   </div>\n// // // //                 </li>\n// // // //               ))}\n// // // //             </ul>\n// // // //           ) : (\n// // // //             <p className=\"p-4 text-gray-500\">No transactions found.</p>\n// // // //           )}\n// // // //         </div>\n// // // //       )}\n\n// // // //       {/* Withdrawals Tab */}\n// // // //       {activeTab === 'withdrawals' && (\n// // // //         <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n// // // //           {withdrawalRequests.length > 0 ? (\n// // // //             <ul>\n// // // //               {withdrawalRequests.map((req, index) => (\n// // // //                 <li key={index} className=\"flex justify-between p-4 border-b\">\n// // // //                   <div className=\"flex items-center\">\n// // // //                     {getStatusIcon(req.status)}\n// // // //                     <span className=\"ml-2\">{req.bankName} - â‚¹{req.amount}</span>\n// // // //                   </div>\n// // // //                   <div className={`px-2 py-1 rounded text-sm ${getStatusColor(req.status)}`}>\n// // // //                     {req.status}\n// // // //                   </div>\n// // // //                 </li>\n// // // //               ))}\n// // // //             </ul>\n// // // //           ) : (\n// // // //             <p className=\"p-4 text-gray-500\">No withdrawal requests found.</p>\n// // // //           )}\n// // // //         </div>\n// // // //       )}\n\n// // // //       {/* Withdraw Form Modal */}\n// // // //       {showWithdrawForm && (\n// // // //         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\">\n// // // //           <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n// // // //             <h3 className=\"text-lg font-semibold mb-4\">Withdraw Funds</h3>\n// // // //             {Object.keys(withdrawalForm).map((field) => (\n// // // //               <div key={field} className=\"mb-3\">\n// // // //                 <input\n// // // //                   type={field === 'amount' ? 'number' : 'text'}\n// // // //                   name={field}\n// // // //                   value={withdrawalForm[field]}\n// // // //                   onChange={handleInputChange}\n// // // //                   placeholder={field.replace(/([A-Z])/g, ' $1')}\n// // // //                   className=\"w-full border rounded p-2\"\n// // // //                 />\n// // // //                 {formErrors[field] && <p className=\"text-red-500 text-sm\">{formErrors[field]}</p>}\n// // // //               </div>\n// // // //             ))}\n// // // //             <div className=\"flex justify-end space-x-2\">\n// // // //               <button onClick={() => setShowWithdrawForm(false)} className=\"px-4 py-2 bg-gray-300 rounded\">Cancel</button>\n// // // //               <button\n// // // //                 onClick={handleWithdrawalSubmit}\n// // // //                 disabled={loading.submit}\n// // // //                 className=\"px-4 py-2 bg-blue-600 text-white rounded\"\n// // // //               >\n// // // //                 {loading.submit ? 'Submitting...' : 'Submit'}\n// // // //               </button>\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default EnhancedWallet;\n\n\n\n\n// // // // import React, { useState, useEffect } from \"react\";\n\n\n// // // // import { walletAPI } from \"../../services/api\";\n\n// // // // const { getUserWallet, getUserWithdrawalRequests, requestWithdrawal } = walletAPI;\n\n// // // // import {\n// // // //   ArrowUp,\n// // // //   Clock,\n// // // //   CheckCircle,\n// // // //   X,\n// // // //   Plus,\n// // // //   Minus,\n// // // // } from \"lucide-react\";\n\n\n// // // import React, { useState, useEffect } from \"react\";\n// // // import {\n// // //   ArrowUp,\n// // //   Clock,\n// // //   CheckCircle,\n// // //   X,\n// // //   Plus,\n// // //   Minus,\n// // // } from \"lucide-react\";\n// // // // import { walletAPI } from \"../../services/api\";\n// // // import userWalletAPI from \"../../services/userWalletApi\";\n\n// // // const { getUserWallet, getUserWithdrawalRequests, requestWithdrawal } = walletAPI;\n\n\n// // // const EnhancedWallet = () => {\n// // //   const [wallet, setWallet] = useState({ balance: 0, transactions: [] });\n// // //   const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n// // //   const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n// // //   const [loading, setLoading] = useState({ wallet: false, withdrawals: false, submit: false });\n// // //   const [error, setError] = useState(\"\");\n// // //   const [success, setSuccess] = useState(\"\");\n// // //   const [activeTab, setActiveTab] = useState(\"transactions\");\n\n// // //   const [withdrawalForm, setWithdrawalForm] = useState({\n// // //     bankName: \"\",\n// // //     accountNumber: \"\",\n// // //     ifscCode: \"\",\n// // //     mobileNumber: \"\",\n// // //     amount: \"\",\n// // //   });\n\n// // //   const [formErrors, setFormErrors] = useState({});\n\n// // //   const userId = localStorage.getItem(\"userId\");\n\n// // //   const loadWallet = async () => {\n// // //     if (!userId) return;\n// // //     try {\n// // //       setLoading((prev) => ({ ...prev, wallet: true }));\n// // //       const res = await getUserWallet(userId);\n// // //       setWallet({\n// // //         balance: res.data.balance || 0,\n// // //         transactions: res.data.transactions || [],\n// // //       });\n// // //     } catch (err) {\n// // //       setError(err.response?.data?.message || \"Failed to fetch wallet\");\n// // //     } finally {\n// // //       setLoading((prev) => ({ ...prev, wallet: false }));\n// // //     }\n// // //   };\n\n// // //   const loadRequests = async () => {\n// // //     if (!userId) return;\n// // //     try {\n// // //       setLoading((prev) => ({ ...prev, withdrawals: true }));\n// // //       const res = await getUserWithdrawalRequests(userId);\n// // //       setWithdrawalRequests(res.data || []);\n// // //     } catch (err) {\n// // //       setError(err.response?.data?.message || \"Failed to fetch withdrawals\");\n// // //     } finally {\n// // //       setLoading((prev) => ({ ...prev, withdrawals: false }));\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     if (userId) {\n// // //       loadWallet();\n// // //       loadRequests();\n// // //     }\n// // //   }, [userId]);\n\n// // //   const validateForm = () => {\n// // //     const errors = {};\n// // //     let isValid = true;\n\n// // //     if (!withdrawalForm.bankName.trim()) {\n// // //       errors.bankName = \"Bank name is required\";\n// // //       isValid = false;\n// // //     }\n// // //     if (!withdrawalForm.accountNumber.trim() || !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)) {\n// // //       errors.accountNumber = \"Valid account number is required (9-18 digits)\";\n// // //       isValid = false;\n// // //     }\n// // //     if (!withdrawalForm.ifscCode.trim() || !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)) {\n// // //       errors.ifscCode = \"Valid IFSC code is required\";\n// // //       isValid = false;\n// // //     }\n// // //     if (!withdrawalForm.mobileNumber.trim() || !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)) {\n// // //       errors.mobileNumber = \"Valid Indian mobile number is required\";\n// // //       isValid = false;\n// // //     }\n// // //     if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n// // //       errors.amount = \"Minimum withdrawal amount is â‚¹1000\";\n// // //       isValid = false;\n// // //     } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n// // //       errors.amount = \"Insufficient balance\";\n// // //       isValid = false;\n// // //     }\n\n// // //     setFormErrors(errors);\n// // //     return isValid;\n// // //   };\n\n// // //   const handleWithdrawalSubmit = async () => {\n// // //     if (!validateForm()) return;\n\n// // //     setLoading((prev) => ({ ...prev, submit: true }));\n// // //     setError(\"\");\n// // //     setSuccess(\"\");\n\n// // //     try {\n// // //       await requestWithdrawal(userId, withdrawalForm.amount, withdrawalForm);\n// // //       setSuccess(\"Withdrawal request submitted successfully!\");\n// // //       setShowWithdrawForm(false);\n// // //       await Promise.all([loadWallet(), loadRequests()]);\n// // //     } catch (err) {\n// // //       setError(err.response?.data?.message || \"Withdrawal failed\");\n// // //     } finally {\n// // //       setLoading((prev) => ({ ...prev, submit: false }));\n// // //     }\n// // //   };\n\n// // //   const handleInputChange = (e) => {\n// // //     const { name, value } = e.target;\n// // //     setWithdrawalForm((prev) => ({ ...prev, [name]: value }));\n// // //     if (formErrors[name]) {\n// // //       setFormErrors((prev) => ({ ...prev, [name]: \"\" }));\n// // //     }\n// // //   };\n\n// // //   const getStatusIcon = (status) => {\n// // //     switch (status) {\n// // //       case \"Pending\": return <Clock className=\"h-5 w-5 text-yellow-500\" />;\n// // //       case \"Completed\": return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n// // //       case \"Rejected\": return <X className=\"h-5 w-5 text-red-500\" />;\n// // //       default: return <Clock className=\"h-5 w-5 text-gray-500\" />;\n// // //     }\n// // //   };\n\n// // //   const getStatusColor = (status) => {\n// // //     switch (status) {\n// // //       case \"Pending\": return \"text-yellow-600 bg-yellow-50\";\n// // //       case \"Completed\": return \"text-green-600 bg-green-50\";\n// // //       case \"Rejected\": return \"text-red-600 bg-red-50\";\n// // //       default: return \"text-gray-600 bg-gray-50\";\n// // //     }\n// // //   };\n\n// // //   const formatDate = (dateString) => {\n// // //     const options = { day: \"numeric\", month: \"short\", year: \"numeric\" };\n// // //     return new Date(dateString).toLocaleDateString(\"en-IN\", options);\n// // //   };\n\n// // //   return (\n// // //     <div className=\"p-4 md:p-6 max-w-6xl mx-auto\">\n// // //       {/* Balance Card */}\n// // //       <div className=\"bg-white shadow-md rounded-lg p-6 mb-6 flex items-center justify-between\">\n// // //         <div>\n// // //           <h2 className=\"text-lg font-semibold text-gray-700\">Wallet Balance</h2>\n// // //           <p className=\"text-3xl font-bold text-gray-900\">â‚¹{wallet.balance}</p>\n// // //         </div>\n// // //         <button\n// // //           onClick={() => setShowWithdrawForm(true)}\n// // //           className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center\"\n// // //         >\n// // //           <ArrowUp className=\"h-5 w-5 mr-2\" /> Withdraw\n// // //         </button>\n// // //       </div>\n\n// // //       {/* Tabs */}\n// // //       <div className=\"flex space-x-4 border-b mb-4\">\n// // //         <button\n// // //           onClick={() => setActiveTab(\"transactions\")}\n// // //           className={`pb-2 ${activeTab === \"transactions\" ? \"border-b-2 border-blue-600 text-blue-600\" : \"text-gray-600\"}`}\n// // //         >\n// // //           Transactions\n// // //         </button>\n// // //         <button\n// // //           onClick={() => setActiveTab(\"withdrawals\")}\n// // //           className={`pb-2 ${activeTab === \"withdrawals\" ? \"border-b-2 border-blue-600 text-blue-600\" : \"text-gray-600\"}`}\n// // //         >\n// // //           Withdrawals\n// // //         </button>\n// // //       </div>\n\n// // //       {/* Error / Success Messages */}\n// // //       {error && <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">{error}</div>}\n// // //       {success && <div className=\"mb-4 p-3 bg-green-100 text-green-700 rounded\">{success}</div>}\n\n// // //       {/* Transactions Tab */}\n// // //       {activeTab === \"transactions\" && (\n// // //         <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n// // //           {wallet.transactions.length > 0 ? (\n// // //             <ul>\n// // //               {wallet.transactions.map((txn, index) => (\n// // //                 <li key={index} className=\"flex justify-between p-4 border-b\">\n// // //                   <div className=\"flex items-center\">\n// // //                     {txn.type === \"credit\" ? (\n// // //                       <Plus className=\"h-5 w-5 text-green-500 mr-2\" />\n// // //                     ) : (\n// // //                       <Minus className=\"h-5 w-5 text-red-500 mr-2\" />\n// // //                     )}\n// // //                     <span>{txn.description || txn.type}</span>\n// // //                   </div>\n// // //                   <div className=\"text-right\">\n// // //                     <p className={txn.type === \"credit\" ? \"text-green-600\" : \"text-red-600\"}>\n// // //                       â‚¹{txn.amount}\n// // //                     </p>\n// // //                     <small className=\"text-gray-500\">{formatDate(txn.date)}</small>\n// // //                   </div>\n// // //                 </li>\n// // //               ))}\n// // //             </ul>\n// // //           ) : (\n// // //             <p className=\"p-4 text-gray-500\">No transactions found.</p>\n// // //           )}\n// // //         </div>\n// // //       )}\n\n// // //       {/* Withdrawals Tab */}\n// // //       {activeTab === \"withdrawals\" && (\n// // //         <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n// // //           {withdrawalRequests.length > 0 ? (\n// // //             <ul>\n// // //               {withdrawalRequests.map((req, index) => (\n// // //                 <li key={index} className=\"flex justify-between p-4 border-b\">\n// // //                   <div className=\"flex items-center\">\n// // //                     {getStatusIcon(req.status)}\n// // //                     <span className=\"ml-2\">{req.bankName} - â‚¹{req.amount}</span>\n// // //                   </div>\n// // //                   <div className={`px-2 py-1 rounded text-sm ${getStatusColor(req.status)}`}>\n// // //                     {req.status}\n// // //                   </div>\n// // //                 </li>\n// // //               ))}\n// // //             </ul>\n// // //           ) : (\n// // //             <p className=\"p-4 text-gray-500\">No withdrawal requests found.</p>\n// // //           )}\n// // //         </div>\n// // //       )}\n\n// // //       {/* Withdraw Form Modal */}\n// // //       {showWithdrawForm && (\n// // //         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\">\n// // //           <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n// // //             <h3 className=\"text-lg font-semibold mb-4\">Withdraw Funds</h3>\n// // //             {Object.keys(withdrawalForm).map((field) => (\n// // //               <div key={field} className=\"mb-3\">\n// // //                 <input\n// // //                   type={field === \"amount\" ? \"number\" : \"text\"}\n// // //                   name={field}\n// // //                   value={withdrawalForm[field]}\n// // //                   onChange={handleInputChange}\n// // //                   placeholder={field.replace(/([A-Z])/g, \" $1\")}\n// // //                   className=\"w-full border rounded p-2\"\n// // //                 />\n// // //                 {formErrors[field] && <p className=\"text-red-500 text-sm\">{formErrors[field]}</p>}\n// // //               </div>\n// // //             ))}\n// // //             <div className=\"flex justify-end space-x-2\">\n// // //               <button onClick={() => setShowWithdrawForm(false)} className=\"px-4 py-2 bg-gray-300 rounded\">Cancel</button>\n// // //               <button\n// // //                 onClick={handleWithdrawalSubmit}\n// // //                 disabled={loading.submit}\n// // //                 className=\"px-4 py-2 bg-blue-600 text-white rounded\"\n// // //               >\n// // //                 {loading.submit ? \"Submitting...\" : \"Submit\"}\n// // //               </button>\n// // //             </div>\n// // //           </div>\n// // //         </div>\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default EnhancedWallet;   \n\n\n// // import React, { useState, useEffect } from \"react\";\n// // import {\n// //   ArrowUp,\n// //   Clock,\n// //   CheckCircle,\n// //   X,\n// //   Plus,\n// //   Minus,\n// // } from \"lucide-react\";\n// // import userWalletAPI from \"../../services/userWalletApi\"; // âœ… updated import\n\n// // const EnhancedWallet = () => {\n// //   const [wallet, setWallet] = useState({ balance: 0, transactions: [] });\n// //   const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n// //   const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n// //   const [loading, setLoading] = useState({ wallet: false, withdrawals: false, submit: false });\n// //   const [error, setError] = useState(\"\");\n// //   const [success, setSuccess] = useState(\"\");\n// //   const [activeTab, setActiveTab] = useState(\"transactions\");\n\n// //   const [withdrawalForm, setWithdrawalForm] = useState({\n// //     bankName: \"\",\n// //     accountNumber: \"\",\n// //     ifscCode: \"\",\n// //     mobileNumber: \"\",\n// //     amount: \"\",\n// //   });\n\n// //   const [formErrors, setFormErrors] = useState({});\n\n// //   const userId = localStorage.getItem(\"userId\");\n\n// //   const loadWallet = async () => {\n// //     if (!userId) return;\n// //     try {\n// //       setLoading((prev) => ({ ...prev, wallet: true }));\n// //       const res = await userWalletAPI.getWallet(userId); // âœ… updated\n// //       setWallet({\n// //         balance: res.data.balance || 0,\n// //         transactions: res.data.transactions || [],\n// //       });\n// //     } catch (err) {\n// //       setError(err.response?.data?.message || \"Failed to fetch wallet\");\n// //     } finally {\n// //       setLoading((prev) => ({ ...prev, wallet: false }));\n// //     }\n// //   };\n\n// //   const loadRequests = async () => {\n// //     if (!userId) return;\n// //     try {\n// //       setLoading((prev) => ({ ...prev, withdrawals: true }));\n// //       const res = await userWalletAPI.getWithdrawals(userId); // âœ… updated\n// //       setWithdrawalRequests(res.data || []);\n// //     } catch (err) {\n// //       setError(err.response?.data?.message || \"Failed to fetch withdrawals\");\n// //     } finally {\n// //       setLoading((prev) => ({ ...prev, withdrawals: false }));\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     if (userId) {\n// //       loadWallet();\n// //       loadRequests();\n// //     }\n// //   }, [userId]);\n\n// //   const validateForm = () => {\n// //     const errors = {};\n// //     let isValid = true;\n\n// //     if (!withdrawalForm.bankName.trim()) {\n// //       errors.bankName = \"Bank name is required\";\n// //       isValid = false;\n// //     }\n// //     if (!withdrawalForm.accountNumber.trim() || !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)) {\n// //       errors.accountNumber = \"Valid account number is required (9-18 digits)\";\n// //       isValid = false;\n// //     }\n// //     if (!withdrawalForm.ifscCode.trim() || !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)) {\n// //       errors.ifscCode = \"Valid IFSC code is required\";\n// //       isValid = false;\n// //     }\n// //     if (!withdrawalForm.mobileNumber.trim() || !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)) {\n// //       errors.mobileNumber = \"Valid Indian mobile number is required\";\n// //       isValid = false;\n// //     }\n// //     if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n// //       errors.amount = \"Minimum withdrawal amount is â‚¹1000\";\n// //       isValid = false;\n// //     } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n// //       errors.amount = \"Insufficient balance\";\n// //       isValid = false;\n// //     }\n\n// //     setFormErrors(errors);\n// //     return isValid;\n// //   };\n\n// //   const handleWithdrawalSubmit = async () => {\n// //     if (!validateForm()) return;\n\n// //     setLoading((prev) => ({ ...prev, submit: true }));\n// //     setError(\"\");\n// //     setSuccess(\"\");\n\n// //     try {\n// //       await userWalletAPI.requestWithdrawal( // âœ… updated\n// //         userId,\n// //         withdrawalForm.amount,\n// //         withdrawalForm\n// //       );\n// //       setSuccess(\"Withdrawal request submitted successfully!\");\n// //       setShowWithdrawForm(false);\n// //       await Promise.all([loadWallet(), loadRequests()]);\n// //     } catch (err) {\n// //       setError(err.response?.data?.message || \"Withdrawal failed\");\n// //     } finally {\n// //       setLoading((prev) => ({ ...prev, submit: false }));\n// //     }\n// //   };\n\n// //   const handleInputChange = (e) => {\n// //     const { name, value } = e.target;\n// //     setWithdrawalForm((prev) => ({ ...prev, [name]: value }));\n// //     if (formErrors[name]) {\n// //       setFormErrors((prev) => ({ ...prev, [name]: \"\" }));\n// //     }\n// //   };\n\n// //   const getStatusIcon = (status) => {\n// //     switch (status) {\n// //       case \"Pending\": return <Clock className=\"h-5 w-5 text-yellow-500\" />;\n// //       case \"Completed\": return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n// //       case \"Rejected\": return <X className=\"h-5 w-5 text-red-500\" />;\n// //       default: return <Clock className=\"h-5 w-5 text-gray-500\" />;\n// //     }\n// //   };\n\n// //   const getStatusColor = (status) => {\n// //     switch (status) {\n// //       case \"Pending\": return \"text-yellow-600 bg-yellow-50\";\n// //       case \"Completed\": return \"text-green-600 bg-green-50\";\n// //       case \"Rejected\": return \"text-red-600 bg-red-50\";\n// //       default: return \"text-gray-600 bg-gray-50\";\n// //     }\n// //   };\n\n// //   const formatDate = (dateString) => {\n// //     const options = { day: \"numeric\", month: \"short\", year: \"numeric\" };\n// //     return new Date(dateString).toLocaleDateString(\"en-IN\", options);\n// //   };\n\n// //   return (\n// //     <div className=\"p-4 md:p-6 max-w-6xl mx-auto\">\n// //       {/* Wallet balance, tabs, forms, transactions, etc... */}\n// //       {/* â€”â€”â€” Your existing JSX continues here â€”â€”â€” */}\n// //     </div>\n// //   );\n// // };\n\n// // export default EnhancedWallet;\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import {\n//   ArrowUp,\n//   Clock,\n//   CheckCircle,\n//   X,\n//   Plus,\n//   Wallet as WalletIcon,\n//   IndianRupee,\n// } from \"lucide-react\";\n// import userWalletAPI from \"../../services/userWalletApi\"; // âœ… API service\n\n// const EnhancedWallet = () => {\n//   const { userId } = useParams();\n//   const [wallet, setWallet] = useState({ balance: 0, transactions: [] });\n//   const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n//   const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n//   const [loading, setLoading] = useState({\n//     wallet: false,\n//     withdrawals: false,\n//     submit: false,\n//   });\n//   const [error, setError] = useState(\"\");\n//   const [success, setSuccess] = useState(\"\");\n//   const [activeTab, setActiveTab] = useState(\"transactions\");\n\n//   const [withdrawalForm, setWithdrawalForm] = useState({\n//     bankName: \"\",\n//     accountNumber: \"\",\n//     ifscCode: \"\",\n//     mobileNumber: \"\",\n//     amount: \"\",\n//   });\n\n//   const [formErrors, setFormErrors] = useState({});\n\n//   // ðŸ”¹ Fetch Wallet Balance\n//   const loadWallet = async () => {\n//     if (!userId) return;\n//     try {\n//       setLoading((prev) => ({ ...prev, wallet: true }));\n//       const res = await userWalletAPI.getWallet(userId);\n//       setWallet({\n//         balance: res.data.balance || 0,\n//         transactions: res.data.transactions || [],\n//       });\n//     } catch (err) {\n//       setError(err.response?.data?.message || \"Failed to fetch wallet\");\n//     } finally {\n//       setLoading((prev) => ({ ...prev, wallet: false }));\n//     }\n//   };\n\n//   // ðŸ”¹ Fetch Withdrawals\n//   const loadRequests = async () => {\n//     if (!userId) return;\n//     try {\n//       setLoading((prev) => ({ ...prev, withdrawals: true }));\n//       const res = await userWalletAPI.getWithdrawals(userId);\n//       setWithdrawalRequests(res.data || []);\n//     } catch (err) {\n//       setError(err.response?.data?.message || \"Failed to fetch withdrawals\");\n//     } finally {\n//       setLoading((prev) => ({ ...prev, withdrawals: false }));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (userId) {\n//       loadWallet();\n//       loadRequests();\n//     }\n//   }, [userId]);\n\n//   // ðŸ”¹ Form Validation\n//   const validateForm = () => {\n//     const errors = {};\n//     let isValid = true;\n\n//     if (!withdrawalForm.bankName.trim()) {\n//       errors.bankName = \"Bank name is required\";\n//       isValid = false;\n//     }\n//     if (\n//       !withdrawalForm.accountNumber.trim() ||\n//       !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)\n//     ) {\n//       errors.accountNumber = \"Valid account number is required (9-18 digits)\";\n//       isValid = false;\n//     }\n//     if (\n//       !withdrawalForm.ifscCode.trim() ||\n//       !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)\n//     ) {\n//       errors.ifscCode = \"Valid IFSC code is required\";\n//       isValid = false;\n//     }\n//     if (\n//       !withdrawalForm.mobileNumber.trim() ||\n//       !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)\n//     ) {\n//       errors.mobileNumber = \"Valid Indian mobile number is required\";\n//       isValid = false;\n//     }\n//     if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n//       errors.amount = \"Minimum withdrawal amount is â‚¹1000\";\n//       isValid = false;\n//     } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n//       errors.amount = \"Insufficient balance\";\n//       isValid = false;\n//     }\n\n//     setFormErrors(errors);\n//     return isValid;\n//   };\n\n//   // ðŸ”¹ Withdrawal Submit\n//   const handleWithdrawalSubmit = async () => {\n//     if (!validateForm()) return;\n\n//     setLoading((prev) => ({ ...prev, submit: true }));\n//     setError(\"\");\n//     setSuccess(\"\");\n\n//     try {\n//       await userWalletAPI.requestWithdrawal(userId, withdrawalForm.amount, withdrawalForm);\n//       setSuccess(\"Withdrawal request submitted successfully!\");\n//       setShowWithdrawForm(false);\n//       setWithdrawalForm({\n//         bankName: \"\",\n//         accountNumber: \"\",\n//         ifscCode: \"\",\n//         mobileNumber: \"\",\n//         amount: \"\",\n//       });\n//       await Promise.all([loadWallet(), loadRequests()]);\n//     } catch (err) {\n//       setError(err.response?.data?.message || \"Withdrawal failed\");\n//     } finally {\n//       setLoading((prev) => ({ ...prev, submit: false }));\n//     }\n//   };\n\n//   // ðŸ”¹ Input Change\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setWithdrawalForm((prev) => ({ ...prev, [name]: value }));\n//     if (formErrors[name]) {\n//       setFormErrors((prev) => ({ ...prev, [name]: \"\" }));\n//     }\n//   };\n\n//   // ðŸ”¹ Status UI\n//   const getStatusIcon = (status) => {\n//     switch (status) {\n//       case \"Pending\":\n//         return <Clock className=\"h-4 w-4 text-yellow-500\" />;\n//       case \"Completed\":\n//         return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n//       case \"Rejected\":\n//         return <X className=\"h-4 w-4 text-red-500\" />;\n//       default:\n//         return <Clock className=\"h-4 w-4 text-gray-500\" />;\n//     }\n//   };\n\n//   const getStatusColor = (status) => {\n//     switch (status) {\n//       case \"Pending\":\n//         return \"bg-yellow-100 text-yellow-700\";\n//       case \"Completed\":\n//         return \"bg-green-100 text-green-700\";\n//       case \"Rejected\":\n//         return \"bg-red-100 text-red-700\";\n//       default:\n//         return \"bg-gray-100 text-gray-700\";\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     const options = { day: \"numeric\", month: \"short\", year: \"numeric\" };\n//     return new Date(dateString).toLocaleDateString(\"en-IN\", options);\n//   };\n\n//   return (\n//     <div className=\"p-4 md:p-6 max-w-5xl mx-auto\">\n//       {/* Wallet Balance */}\n//       <div className=\"bg-gradient-to-r from-indigo-500 to-blue-600 text-white rounded-2xl p-6 flex items-center justify-between shadow-lg\">\n//         <div>\n//           <h2 className=\"text-lg font-semibold\">Wallet Balance</h2>\n//           <p className=\"text-3xl font-bold flex items-center gap-2 mt-2\">\n//             <IndianRupee size={24} /> {wallet.balance.toFixed(2)}\n//           </p>\n//         </div>\n//         <WalletIcon size={50} className=\"opacity-70\" />\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"mt-6 flex gap-4 border-b\">\n//         <button\n//           onClick={() => setActiveTab(\"transactions\")}\n//           className={`pb-2 px-4 ${\n//             activeTab === \"transactions\"\n//               ? \"border-b-2 border-blue-600 font-semibold text-blue-600\"\n//               : \"text-gray-600\"\n//           }`}\n//         >\n//           Transactions\n//         </button>\n//         <button\n//           onClick={() => setActiveTab(\"withdrawals\")}\n//           className={`pb-2 px-4 ${\n//             activeTab === \"withdrawals\"\n//               ? \"border-b-2 border-blue-600 font-semibold text-blue-600\"\n//               : \"text-gray-600\"\n//           }`}\n//         >\n//           Withdrawals\n//         </button>\n//       </div>\n\n//       {/* Success / Error */}\n//       {error && <p className=\"mt-4 text-red-600 bg-red-50 p-2 rounded\">{error}</p>}\n//       {success && <p className=\"mt-4 text-green-600 bg-green-50 p-2 rounded\">{success}</p>}\n\n//       {/* Transactions */}\n//       {activeTab === \"transactions\" && (\n//         <div className=\"mt-6 space-y-3\">\n//           {wallet.transactions.length === 0 ? (\n//             <p className=\"text-gray-500 text-center\">No transactions yet.</p>\n//           ) : (\n//             wallet.transactions.map((t, i) => (\n//               <div\n//                 key={i}\n//                 className=\"flex justify-between items-center bg-white shadow-sm p-3 rounded-lg\"\n//               >\n//                 <div>\n//                   <p className=\"font-medium\">{t.type}</p>\n//                   <p className=\"text-sm text-gray-500\">{formatDate(t.date)}</p>\n//                 </div>\n//                 <p\n//                   className={`font-semibold ${\n//                     t.type === \"Credit\" ? \"text-green-600\" : \"text-red-600\"\n//                   }`}\n//                 >\n//                   {t.type === \"Credit\" ? \"+\" : \"-\"} â‚¹{t.amount}\n//                 </p>\n//               </div>\n//             ))\n//           )}\n//         </div>\n//       )}\n\n//       {/* Withdrawals */}\n//       {activeTab === \"withdrawals\" && (\n//         <div className=\"mt-6 space-y-3\">\n//           <button\n//             onClick={() => setShowWithdrawForm(!showWithdrawForm)}\n//             className=\"bg-blue-600 text-white px-4 py-2 rounded-lg shadow hover:bg-blue-700\"\n//           >\n//             + New Withdrawal\n//           </button>\n\n//           {showWithdrawForm && (\n//             <div className=\"mt-4 bg-white shadow rounded-xl p-4 space-y-4\">\n//               {[\"bankName\", \"accountNumber\", \"ifscCode\", \"mobileNumber\", \"amount\"].map((field) => (\n//                 <div key={field}>\n//                   <input\n//                     type={field === \"amount\" ? \"number\" : \"text\"}\n//                     name={field}\n//                     placeholder={\n//                       field === \"bankName\"\n//                         ? \"Bank Name\"\n//                         : field === \"accountNumber\"\n//                         ? \"Account Number\"\n//                         : field === \"ifscCode\"\n//                         ? \"IFSC Code\"\n//                         : field === \"mobileNumber\"\n//                         ? \"Mobile Number\"\n//                         : \"Amount\"\n//                     }\n//                     value={withdrawalForm[field]}\n//                     onChange={handleInputChange}\n//                     className={`w-full border rounded-lg px-3 py-2 ${\n//                       formErrors[field] ? \"border-red-500\" : \"border-gray-300\"\n//                     }`}\n//                   />\n//                   {formErrors[field] && (\n//                     <p className=\"text-red-500 text-sm mt-1\">{formErrors[field]}</p>\n//                   )}\n//                 </div>\n//               ))}\n//               <button\n//                 onClick={handleWithdrawalSubmit}\n//                 disabled={loading.submit}\n//                 className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 disabled:opacity-50\"\n//               >\n//                 {loading.submit ? \"Submitting...\" : \"Submit Withdrawal\"}\n//               </button>\n//             </div>\n//           )}\n\n//           <div className=\"space-y-3\">\n//             {withdrawalRequests.length === 0 ? (\n//               <p className=\"text-gray-500 text-center\">No withdrawal requests yet.</p>\n//             ) : (\n//               withdrawalRequests.map((req, i) => (\n//                 <div\n//                   key={i}\n//                   className=\"flex justify-between items-center bg-white shadow-sm p-3 rounded-lg\"\n//                 >\n//                   <div>\n//                     <p className=\"font-medium\">â‚¹{req.amount}</p>\n//                     <p className=\"text-sm text-gray-500\">{formatDate(req.date)}</p>\n//                   </div>\n//                   <span\n//                     className={`flex items-center gap-1 text-sm px-2 py-1 rounded-full ${getStatusColor(\n//                       req.status\n//                     )}`}\n//                   >\n//                     {getStatusIcon(req.status)}\n//                     {req.status}\n//                   </span>\n//                 </div>\n//               ))\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default EnhancedWallet;\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  ArrowUp,\n  Clock,\n  CheckCircle,\n  X,\n  Plus,\n  Wallet as WalletIcon,\n  IndianRupee,\n} from \"lucide-react\";\nimport userWalletAPI from \"../../services/userWalletApi\";\n\nconst EnhancedWallet = () => {\n  const { userId } = useParams();\n  const [wallet, setWallet] = useState({ balance: 0, transactions: [] });\n  const [withdrawalRequests, setWithdrawalRequests] = useState([]);\n  const [showWithdrawForm, setShowWithdrawForm] = useState(false);\n  const [loading, setLoading] = useState({\n    wallet: false,\n    withdrawals: false,\n    submit: false,\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"transactions\");\n\n  const [withdrawalForm, setWithdrawalForm] = useState({\n    bankName: \"\",\n    accountNumber: \"\",\n    ifscCode: \"\",\n    mobileNumber: \"\",\n    amount: \"\",\n  });\n\n  const [formErrors, setFormErrors] = useState({});\n\n  const loadWallet = async () => {\n    if (!userId) return;\n    try {\n      setLoading((prev) => ({ ...prev, wallet: true }));\n      const res = await userWalletAPI.getWallet(userId);\n      setWallet({\n        balance: res.data.balance || 0,\n        transactions: res.data.transactions || [],\n      });\n    } catch (err) {\n      setError(err.response?.data?.message || \"Failed to fetch wallet\");\n    } finally {\n      setLoading((prev) => ({ ...prev, wallet: false }));\n    }\n  };\n\n  const loadRequests = async () => {\n    if (!userId) return;\n    try {\n      setLoading((prev) => ({ ...prev, withdrawals: true }));\n      const res = await userWalletAPI.getWithdrawals(userId);\n      setWithdrawalRequests(res.data || []);\n    } catch (err) {\n      setError(err.response?.data?.message || \"Failed to fetch withdrawals\");\n    } finally {\n      setLoading((prev) => ({ ...prev, withdrawals: false }));\n    }\n  };\n\n  useEffect(() => {\n    if (userId) {\n      loadWallet();\n      loadRequests();\n    }\n  }, [userId]);\n\n  const validateForm = () => {\n    const errors = {};\n    let isValid = true;\n\n    if (!withdrawalForm.bankName.trim()) {\n      errors.bankName = \"Bank name is required\";\n      isValid = false;\n    }\n    if (\n      !withdrawalForm.accountNumber.trim() ||\n      !/^\\d{9,18}$/.test(withdrawalForm.accountNumber)\n    ) {\n      errors.accountNumber = \"Valid account number is required (9-18 digits)\";\n      isValid = false;\n    }\n    if (\n      !withdrawalForm.ifscCode.trim() ||\n      !/^[A-Za-z]{4}0[A-Za-z0-9]{6}$/.test(withdrawalForm.ifscCode)\n    ) {\n      errors.ifscCode = \"Valid IFSC code is required\";\n      isValid = false;\n    }\n    if (\n      !withdrawalForm.mobileNumber.trim() ||\n      !/^[6-9]\\d{9}$/.test(withdrawalForm.mobileNumber)\n    ) {\n      errors.mobileNumber = \"Valid Indian mobile number is required\";\n      isValid = false;\n    }\n    if (!withdrawalForm.amount || parseFloat(withdrawalForm.amount) < 1000) {\n      errors.amount = \"Minimum withdrawal amount is â‚¹1000\";\n      isValid = false;\n    } else if (parseFloat(withdrawalForm.amount) > wallet.balance) {\n      errors.amount = \"Insufficient balance\";\n      isValid = false;\n    }\n\n    setFormErrors(errors);\n    return isValid;\n  };\n\n  const handleWithdrawalSubmit = async () => {\n    if (!validateForm()) return;\n\n    setLoading((prev) => ({ ...prev, submit: true }));\n    setError(\"\");\n    setSuccess(\"\");\n\n    try {\n      // âœ… Correct API call\n      await userWalletAPI.requestWithdrawal(userId, withdrawalForm);\n      setSuccess(\"Withdrawal request submitted successfully!\");\n      setShowWithdrawForm(false);\n      setWithdrawalForm({\n        bankName: \"\",\n        accountNumber: \"\",\n        ifscCode: \"\",\n        mobileNumber: \"\",\n        amount: \"\",\n      });\n      await Promise.all([loadWallet(), loadRequests()]);\n    } catch (err) {\n      setError(err.response?.data?.message || \"Withdrawal failed\");\n    } finally {\n      setLoading((prev) => ({ ...prev, submit: false }));\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setWithdrawalForm((prev) => ({ ...prev, [name]: value }));\n    if (formErrors[name]) {\n      setFormErrors((prev) => ({ ...prev, [name]: \"\" }));\n    }\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case \"Pending\":\n        return <Clock className=\"h-4 w-4 text-yellow-500\" />;\n      case \"Completed\":\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case \"Rejected\":\n        return <X className=\"h-4 w-4 text-red-500\" />;\n      default:\n        return <Clock className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case \"Pending\":\n        return \"bg-yellow-100 text-yellow-700\";\n      case \"Completed\":\n        return \"bg-green-100 text-green-700\";\n      case \"Rejected\":\n        return \"bg-red-100 text-red-700\";\n      default:\n        return \"bg-gray-100 text-gray-700\";\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const options = { day: \"numeric\", month: \"short\", year: \"numeric\" };\n    return new Date(dateString).toLocaleDateString(\"en-IN\", options);\n  };\n\n  return (\n    <div className=\"p-4 md:p-6 max-w-5xl mx-auto\">\n      <div className=\"bg-gradient-to-r from-indigo-500 to-blue-600 text-white rounded-2xl p-6 flex items-center justify-between shadow-lg\">\n        <div>\n          <h2 className=\"text-lg font-semibold\">Wallet Balance</h2>\n          <p className=\"text-3xl font-bold flex items-center gap-2 mt-2\">\n            <IndianRupee size={24} /> {wallet.balance.toFixed(2)}\n          </p>\n        </div>\n        <WalletIcon size={50} className=\"opacity-70\" />\n      </div>\n\n      <div className=\"mt-6 flex gap-4 border-b\">\n        <button\n          onClick={() => setActiveTab(\"transactions\")}\n          className={`pb-2 px-4 ${\n            activeTab === \"transactions\"\n              ? \"border-b-2 border-blue-600 font-semibold text-blue-600\"\n              : \"text-gray-600\"\n          }`}\n        >\n          Transactions\n        </button>\n        <button\n          onClick={() => setActiveTab(\"withdrawals\")}\n          className={`pb-2 px-4 ${\n            activeTab === \"withdrawals\"\n              ? \"border-b-2 border-blue-600 font-semibold text-blue-600\"\n              : \"text-gray-600\"\n          }`}\n        >\n          Withdrawals\n        </button>\n      </div>\n\n      {error && <p className=\"mt-4 text-red-600 bg-red-50 p-2 rounded\">{error}</p>}\n      {success && <p className=\"mt-4 text-green-600 bg-green-50 p-2 rounded\">{success}</p>}\n\n      {activeTab === \"transactions\" && (\n        <div className=\"mt-6 space-y-3\">\n          {wallet.transactions.length === 0 ? (\n            <p className=\"text-gray-500 text-center\">No transactions yet.</p>\n          ) : (\n            wallet.transactions.map((t, i) => (\n              <div\n                key={i}\n                className=\"flex justify-between items-center bg-white shadow-sm p-3 rounded-lg\"\n              >\n                <div>\n                  <p className=\"font-medium\">{t.type}</p>\n                  <p className=\"text-sm text-gray-500\">{formatDate(t.date)}</p>\n                </div>\n                <p\n                  className={`font-semibold ${\n                    t.type === \"Credit\" ? \"text-green-600\" : \"text-red-600\"\n                  }`}\n                >\n                  {t.type === \"Credit\" ? \"+\" : \"-\"} â‚¹{t.amount}\n                </p>\n              </div>\n            ))\n          )}\n        </div>\n      )}\n\n      {activeTab === \"withdrawals\" && (\n        <div className=\"mt-6 space-y-3\">\n          <button\n            onClick={() => setShowWithdrawForm(!showWithdrawForm)}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg shadow hover:bg-blue-700\"\n          >\n            + New Withdrawal\n          </button>\n\n          {showWithdrawForm && (\n            <div className=\"mt-4 bg-white shadow rounded-xl p-4 space-y-4\">\n              {[\"bankName\", \"accountNumber\", \"ifscCode\", \"mobileNumber\", \"amount\"].map((field) => (\n                <div key={field}>\n                  <input\n                    type={field === \"amount\" ? \"number\" : \"text\"}\n                    name={field}\n                    placeholder={\n                      field === \"bankName\"\n                        ? \"Bank Name\"\n                        : field === \"accountNumber\"\n                        ? \"Account Number\"\n                        : field === \"ifscCode\"\n                        ? \"IFSC Code\"\n                        : field === \"mobileNumber\"\n                        ? \"Mobile Number\"\n                        : \"Amount\"\n                    }\n                    value={withdrawalForm[field]}\n                    onChange={handleInputChange}\n                    className={`w-full border rounded-lg px-3 py-2 ${\n                      formErrors[field] ? \"border-red-500\" : \"border-gray-300\"\n                    }`}\n                  />\n                  {formErrors[field] && (\n                    <p className=\"text-red-500 text-sm mt-1\">{formErrors[field]}</p>\n                  )}\n                </div>\n              ))}\n              <button\n                onClick={handleWithdrawalSubmit}\n                disabled={loading.submit}\n                className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 disabled:opacity-50\"\n              >\n                {loading.submit ? \"Submitting...\" : \"Submit Withdrawal\"}\n              </button>\n            </div>\n          )}\n\n          <div className=\"space-y-3\">\n            {withdrawalRequests.length === 0 ? (\n              <p className=\"text-gray-500 text-center\">No withdrawal requests yet.</p>\n            ) : (\n              withdrawalRequests.map((req, i) => (\n                <div\n                  key={i}\n                  className=\"flex justify-between items-center bg-white shadow-sm p-3 rounded-lg\"\n                >\n                  <div>\n                    <p className=\"font-medium\">â‚¹{req.amount}</p>\n                    <p className=\"text-sm text-gray-500\">{formatDate(req.date)}</p>\n                  </div>\n                  <span\n                    className={`flex items-center gap-1 text-sm px-2 py-1 rounded-full ${getStatusColor(\n                      req.status\n                    )}`}\n                  >\n                    {getStatusIcon(req.status)}\n                    {req.status}\n                  </span>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EnhancedWallet;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SACEC,OAAO,EACPC,KAAK,EACLC,WAAW,EACXC,CAAC,EACDC,IAAI,EACJC,MAAM,IAAIC,UAAU,EACpBC,WAAW,QACN,cAAc;AACrB,OAAOC,aAAa,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAO,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC;IAAEmB,OAAO,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAG,CAAC,CAAC;EACtE,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACuB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC;IACrCiB,MAAM,EAAE,KAAK;IACbU,WAAW,EAAE,KAAK;IAClBC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC+B,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,cAAc,CAAC;EAE1D,MAAM,CAACmC,cAAc,EAAEC,iBAAiB,CAAC,GAAGpC,QAAQ,CAAC;IACnDqC,QAAQ,EAAE,EAAE;IACZC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG3C,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhD,MAAM4C,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAC5B,MAAM,EAAE;IACb,IAAI;MACFU,UAAU,CAAEmB,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE5B,MAAM,EAAE;MAAK,CAAC,CAAC,CAAC;MACjD,MAAM6B,GAAG,GAAG,MAAMnC,aAAa,CAACoC,SAAS,CAAC/B,MAAM,CAAC;MACjDE,SAAS,CAAC;QACRC,OAAO,EAAE2B,GAAG,CAACE,IAAI,CAAC7B,OAAO,IAAI,CAAC;QAC9BC,YAAY,EAAE0B,GAAG,CAACE,IAAI,CAAC5B,YAAY,IAAI;MACzC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAO6B,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZrB,QAAQ,CAAC,EAAAoB,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,wBAAwB,CAAC;IACnE,CAAC,SAAS;MACR3B,UAAU,CAAEmB,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE5B,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;IACpD;EACF,CAAC;EAED,MAAMqC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACtC,MAAM,EAAE;IACb,IAAI;MACFU,UAAU,CAAEmB,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAElB,WAAW,EAAE;MAAK,CAAC,CAAC,CAAC;MACtD,MAAMmB,GAAG,GAAG,MAAMnC,aAAa,CAAC4C,cAAc,CAACvC,MAAM,CAAC;MACtDM,qBAAqB,CAACwB,GAAG,CAACE,IAAI,IAAI,EAAE,CAAC;IACvC,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAO,cAAA,EAAAC,mBAAA;MACZ3B,QAAQ,CAAC,EAAA0B,cAAA,GAAAP,GAAG,CAACG,QAAQ,cAAAI,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcR,IAAI,cAAAS,mBAAA,uBAAlBA,mBAAA,CAAoBJ,OAAO,KAAI,6BAA6B,CAAC;IACxE,CAAC,SAAS;MACR3B,UAAU,CAAEmB,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAElB,WAAW,EAAE;MAAM,CAAC,CAAC,CAAC;IACzD;EACF,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd,IAAIe,MAAM,EAAE;MACV4B,UAAU,CAAC,CAAC;MACZU,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACtC,MAAM,CAAC,CAAC;EAEZ,MAAM0C,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjB,IAAIC,OAAO,GAAG,IAAI;IAElB,IAAI,CAACzB,cAAc,CAACE,QAAQ,CAACwB,IAAI,CAAC,CAAC,EAAE;MACnCF,MAAM,CAACtB,QAAQ,GAAG,uBAAuB;MACzCuB,OAAO,GAAG,KAAK;IACjB;IACA,IACE,CAACzB,cAAc,CAACG,aAAa,CAACuB,IAAI,CAAC,CAAC,IACpC,CAAC,YAAY,CAACC,IAAI,CAAC3B,cAAc,CAACG,aAAa,CAAC,EAChD;MACAqB,MAAM,CAACrB,aAAa,GAAG,gDAAgD;MACvEsB,OAAO,GAAG,KAAK;IACjB;IACA,IACE,CAACzB,cAAc,CAACI,QAAQ,CAACsB,IAAI,CAAC,CAAC,IAC/B,CAAC,8BAA8B,CAACC,IAAI,CAAC3B,cAAc,CAACI,QAAQ,CAAC,EAC7D;MACAoB,MAAM,CAACpB,QAAQ,GAAG,6BAA6B;MAC/CqB,OAAO,GAAG,KAAK;IACjB;IACA,IACE,CAACzB,cAAc,CAACK,YAAY,CAACqB,IAAI,CAAC,CAAC,IACnC,CAAC,cAAc,CAACC,IAAI,CAAC3B,cAAc,CAACK,YAAY,CAAC,EACjD;MACAmB,MAAM,CAACnB,YAAY,GAAG,wCAAwC;MAC9DoB,OAAO,GAAG,KAAK;IACjB;IACA,IAAI,CAACzB,cAAc,CAACM,MAAM,IAAIsB,UAAU,CAAC5B,cAAc,CAACM,MAAM,CAAC,GAAG,IAAI,EAAE;MACtEkB,MAAM,CAAClB,MAAM,GAAG,oCAAoC;MACpDmB,OAAO,GAAG,KAAK;IACjB,CAAC,MAAM,IAAIG,UAAU,CAAC5B,cAAc,CAACM,MAAM,CAAC,GAAGxB,MAAM,CAACE,OAAO,EAAE;MAC7DwC,MAAM,CAAClB,MAAM,GAAG,sBAAsB;MACtCmB,OAAO,GAAG,KAAK;IACjB;IAEAjB,aAAa,CAACgB,MAAM,CAAC;IACrB,OAAOC,OAAO;EAChB,CAAC;EAED,MAAMI,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI,CAACN,YAAY,CAAC,CAAC,EAAE;IAErBhC,UAAU,CAAEmB,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEjB,MAAM,EAAE;IAAK,CAAC,CAAC,CAAC;IACjDE,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IAEd,IAAI;MACF;MACA,MAAMrB,aAAa,CAACsD,iBAAiB,CAACjD,MAAM,EAAEmB,cAAc,CAAC;MAC7DH,UAAU,CAAC,4CAA4C,CAAC;MACxDR,mBAAmB,CAAC,KAAK,CAAC;MAC1BY,iBAAiB,CAAC;QAChBC,QAAQ,EAAE,EAAE;QACZC,aAAa,EAAE,EAAE;QACjBC,QAAQ,EAAE,EAAE;QACZC,YAAY,EAAE,EAAE;QAChBC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMyB,OAAO,CAACC,GAAG,CAAC,CAACvB,UAAU,CAAC,CAAC,EAAEU,YAAY,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC,OAAOL,GAAG,EAAE;MAAA,IAAAmB,cAAA,EAAAC,mBAAA;MACZvC,QAAQ,CAAC,EAAAsC,cAAA,GAAAnB,GAAG,CAACG,QAAQ,cAAAgB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcpB,IAAI,cAAAqB,mBAAA,uBAAlBA,mBAAA,CAAoBhB,OAAO,KAAI,mBAAmB,CAAC;IAC9D,CAAC,SAAS;MACR3B,UAAU,CAAEmB,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAEjB,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;IACpD;EACF,CAAC;EAED,MAAM0C,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCtC,iBAAiB,CAAES,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAAC2B,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;IACzD,IAAI/B,UAAU,CAAC8B,IAAI,CAAC,EAAE;MACpB7B,aAAa,CAAEE,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAAC2B,IAAI,GAAG;MAAG,CAAC,CAAC,CAAC;IACpD;EACF,CAAC;EAED,MAAMG,aAAa,GAAIC,MAAM,IAAK;IAChC,QAAQA,MAAM;MACZ,KAAK,SAAS;QACZ,oBAAO/D,OAAA,CAACT,KAAK;UAACyE,SAAS,EAAC;QAAyB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACtD,KAAK,WAAW;QACd,oBAAOpE,OAAA,CAACR,WAAW;UAACwE,SAAS,EAAC;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC3D,KAAK,UAAU;QACb,oBAAOpE,OAAA,CAACP,CAAC;UAACuE,SAAS,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC/C;QACE,oBAAOpE,OAAA,CAACT,KAAK;UAACyE,SAAS,EAAC;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IACtD;EACF,CAAC;EAED,MAAMC,cAAc,GAAIN,MAAM,IAAK;IACjC,QAAQA,MAAM;MACZ,KAAK,SAAS;QACZ,OAAO,+BAA+B;MACxC,KAAK,WAAW;QACd,OAAO,6BAA6B;MACtC,KAAK,UAAU;QACb,OAAO,yBAAyB;MAClC;QACE,OAAO,2BAA2B;IACtC;EACF,CAAC;EAED,MAAMO,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,OAAO,GAAG;MAAEC,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAU,CAAC;IACnE,OAAO,IAAIC,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAAC,OAAO,EAAEL,OAAO,CAAC;EAClE,CAAC;EAED,oBACExE,OAAA;IAAKgE,SAAS,EAAC,8BAA8B;IAAAc,QAAA,gBAC3C9E,OAAA;MAAKgE,SAAS,EAAC,qHAAqH;MAAAc,QAAA,gBAClI9E,OAAA;QAAA8E,QAAA,gBACE9E,OAAA;UAAIgE,SAAS,EAAC,uBAAuB;UAAAc,QAAA,EAAC;QAAc;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzDpE,OAAA;UAAGgE,SAAS,EAAC,iDAAiD;UAAAc,QAAA,gBAC5D9E,OAAA,CAACH,WAAW;YAACkF,IAAI,EAAE;UAAG;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC,EAAChE,MAAM,CAACE,OAAO,CAAC0E,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNpE,OAAA,CAACJ,UAAU;QAACmF,IAAI,EAAE,EAAG;QAACf,SAAS,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAENpE,OAAA;MAAKgE,SAAS,EAAC,0BAA0B;MAAAc,QAAA,gBACvC9E,OAAA;QACEiF,OAAO,EAAEA,CAAA,KAAM5D,YAAY,CAAC,cAAc,CAAE;QAC5C2C,SAAS,EAAE,aACT5C,SAAS,KAAK,cAAc,GACxB,wDAAwD,GACxD,eAAe,EAClB;QAAA0D,QAAA,EACJ;MAED;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpE,OAAA;QACEiF,OAAO,EAAEA,CAAA,KAAM5D,YAAY,CAAC,aAAa,CAAE;QAC3C2C,SAAS,EAAE,aACT5C,SAAS,KAAK,aAAa,GACvB,wDAAwD,GACxD,eAAe,EAClB;QAAA0D,QAAA,EACJ;MAED;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELpD,KAAK,iBAAIhB,OAAA;MAAGgE,SAAS,EAAC,yCAAyC;MAAAc,QAAA,EAAE9D;IAAK;MAAAiD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3ElD,OAAO,iBAAIlB,OAAA;MAAGgE,SAAS,EAAC,6CAA6C;MAAAc,QAAA,EAAE5D;IAAO;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEnFhD,SAAS,KAAK,cAAc,iBAC3BpB,OAAA;MAAKgE,SAAS,EAAC,gBAAgB;MAAAc,QAAA,EAC5B1E,MAAM,CAACG,YAAY,CAAC2E,MAAM,KAAK,CAAC,gBAC/BlF,OAAA;QAAGgE,SAAS,EAAC,2BAA2B;QAAAc,QAAA,EAAC;MAAoB;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEjEhE,MAAM,CAACG,YAAY,CAAC4E,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAC3BrF,OAAA;QAEEgE,SAAS,EAAC,qEAAqE;QAAAc,QAAA,gBAE/E9E,OAAA;UAAA8E,QAAA,gBACE9E,OAAA;YAAGgE,SAAS,EAAC,aAAa;YAAAc,QAAA,EAAEM,CAAC,CAACE;UAAI;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvCpE,OAAA;YAAGgE,SAAS,EAAC,uBAAuB;YAAAc,QAAA,EAAER,UAAU,CAACc,CAAC,CAACG,IAAI;UAAC;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC,eACNpE,OAAA;UACEgE,SAAS,EAAE,iBACToB,CAAC,CAACE,IAAI,KAAK,QAAQ,GAAG,gBAAgB,GAAG,cAAc,EACtD;UAAAR,QAAA,GAEFM,CAAC,CAACE,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,EAAC,SAAE,EAACF,CAAC,CAACxD,MAAM;QAAA;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA,GAbCiB,CAAC;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcH,CACN;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,EAEAhD,SAAS,KAAK,aAAa,iBAC1BpB,OAAA;MAAKgE,SAAS,EAAC,gBAAgB;MAAAc,QAAA,gBAC7B9E,OAAA;QACEiF,OAAO,EAAEA,CAAA,KAAMtE,mBAAmB,CAAC,CAACD,gBAAgB,CAAE;QACtDsD,SAAS,EAAC,sEAAsE;QAAAc,QAAA,EACjF;MAED;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAER1D,gBAAgB,iBACfV,OAAA;QAAKgE,SAAS,EAAC,+CAA+C;QAAAc,QAAA,GAC3D,CAAC,UAAU,EAAE,eAAe,EAAE,UAAU,EAAE,cAAc,EAAE,QAAQ,CAAC,CAACK,GAAG,CAAEK,KAAK,iBAC7ExF,OAAA;UAAA8E,QAAA,gBACE9E,OAAA;YACEsF,IAAI,EAAEE,KAAK,KAAK,QAAQ,GAAG,QAAQ,GAAG,MAAO;YAC7C7B,IAAI,EAAE6B,KAAM;YACZC,WAAW,EACTD,KAAK,KAAK,UAAU,GAChB,WAAW,GACXA,KAAK,KAAK,eAAe,GACzB,gBAAgB,GAChBA,KAAK,KAAK,UAAU,GACpB,WAAW,GACXA,KAAK,KAAK,cAAc,GACxB,eAAe,GACf,QACL;YACD5B,KAAK,EAAEtC,cAAc,CAACkE,KAAK,CAAE;YAC7BE,QAAQ,EAAEjC,iBAAkB;YAC5BO,SAAS,EAAE,sCACTnC,UAAU,CAAC2D,KAAK,CAAC,GAAG,gBAAgB,GAAG,iBAAiB;UACvD;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,EACDvC,UAAU,CAAC2D,KAAK,CAAC,iBAChBxF,OAAA;YAAGgE,SAAS,EAAC,2BAA2B;YAAAc,QAAA,EAAEjD,UAAU,CAAC2D,KAAK;UAAC;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAChE;QAAA,GAvBOoB,KAAK;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwBV,CACN,CAAC,eACFpE,OAAA;UACEiF,OAAO,EAAE9B,sBAAuB;UAChCwC,QAAQ,EAAE/E,OAAO,CAACG,MAAO;UACzBiD,SAAS,EAAC,uFAAuF;UAAAc,QAAA,EAEhGlE,OAAO,CAACG,MAAM,GAAG,eAAe,GAAG;QAAmB;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN,eAEDpE,OAAA;QAAKgE,SAAS,EAAC,WAAW;QAAAc,QAAA,EACvBtE,kBAAkB,CAAC0E,MAAM,KAAK,CAAC,gBAC9BlF,OAAA;UAAGgE,SAAS,EAAC,2BAA2B;UAAAc,QAAA,EAAC;QAA2B;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,GAExE5D,kBAAkB,CAAC2E,GAAG,CAAC,CAACS,GAAG,EAAEP,CAAC,kBAC5BrF,OAAA;UAEEgE,SAAS,EAAC,qEAAqE;UAAAc,QAAA,gBAE/E9E,OAAA;YAAA8E,QAAA,gBACE9E,OAAA;cAAGgE,SAAS,EAAC,aAAa;cAAAc,QAAA,GAAC,QAAC,EAACc,GAAG,CAAChE,MAAM;YAAA;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5CpE,OAAA;cAAGgE,SAAS,EAAC,uBAAuB;cAAAc,QAAA,EAAER,UAAU,CAACsB,GAAG,CAACL,IAAI;YAAC;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC,eACNpE,OAAA;YACEgE,SAAS,EAAE,0DAA0DK,cAAc,CACjFuB,GAAG,CAAC7B,MACN,CAAC,EAAG;YAAAe,QAAA,GAEHhB,aAAa,CAAC8B,GAAG,CAAC7B,MAAM,CAAC,EACzB6B,GAAG,CAAC7B,MAAM;UAAA;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA,GAdFiB,CAAC;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeH,CACN;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClE,EAAA,CArTID,cAAc;EAAA,QACCZ,SAAS;AAAA;AAAAwG,EAAA,GADxB5F,cAAc;AAuTpB,eAAeA,cAAc;AAAC,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}