{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\Ecommerce-MLM-Chain-main\\\\Ecommerce-MLM-Chain-main\\\\frontend\\\\frontend\\\\src\\\\pages\\\\ForgotPassword.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { useNavigate } from 'react-router-dom';\n// // import { NavLink } from 'react-router-dom';\n// // import { authAPI } from '../services/api';\n// // import { API_URL } from '../config';\n\n// // const ForgotPassword = () => {\n// //   const [step, setStep] = useState(1); // 1: mobile, 2: otp, 3: reset\n// //   const [mobile, setMobile] = useState('');\n// //   const [otp, setOtp] = useState('');\n// //   const [otpError, setOtpError] = useState('');\n// //   const [otpMessage, setOtpMessage] = useState('');\n// //   const [isOtpLoading, setIsOtpLoading] = useState(false);\n// //   const [newPassword, setNewPassword] = useState('');\n// //   const [confirmPassword, setConfirmPassword] = useState('');\n// //   const [resetError, setResetError] = useState('');\n// //   const [resetMessage, setResetMessage] = useState('');\n// //   const navigate = useNavigate();\n\n// //   const sendOtp = async () => {\n// //     setIsOtpLoading(true);\n// //     setOtpError('');\n// //     setOtpMessage('');\n// //     try {\n// //       // Using fetch with API_URL from config\n// //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/send-otp`, {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify({ mobile }),\n// //       });\n// //       const data = await response.json();\n// //       if (!response.ok) {\n// //         throw new Error(data.error || 'Failed to send OTP');\n// //       }\n// //       setOtpMessage('OTP sent to your mobile number.');\n// //       setStep(2);\n// //     } catch (err) {\n// //       setOtpError(err.message || 'Failed to send OTP');\n// //     } finally {\n// //       setIsOtpLoading(false);\n// //     }\n// //   };\n\n// //   const verifyOtp = async () => {\n// //     setIsOtpLoading(true);\n// //     setOtpError('');\n// //     setOtpMessage('');\n// //     try {\n// //       // Using fetch with API_URL from config\n// //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/verify-otp`, {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify({ mobile, otp }),\n// //       });\n// //       const data = await response.json();\n// //       if (!response.ok) {\n// //         throw new Error(data.error || 'OTP verification failed');\n// //       }\n// //       setStep(3);\n// //     } catch (err) {\n// //       setOtpError(err.message || 'OTP verification failed');\n// //     } finally {\n// //       setIsOtpLoading(false);\n// //     }\n// //   };\n\n// //   const handleResetPassword = async () => {\n// //     setResetError('');\n// //     setResetMessage('');\n// //     if (!newPassword || newPassword.length < 6) {\n// //       setResetError('Password must be at least 6 characters');\n// //       return;\n// //     }\n// //     if (newPassword !== confirmPassword) {\n// //       setResetError('Passwords do not match');\n// //       return;\n// //     }\n// //     try {\n// //       // Using fetch with API_URL from config\n// //       const response = await fetch(`${API_URL}/auth/reset-password`, {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify({ mobile, newPassword }),\n// //       });\n// //       const data = await response.json();\n// //       if (!response.ok) {\n// //         throw new Error(data.error || 'Password reset failed');\n// //       }\n// //       setResetMessage('Password reset successful! Redirecting to login...');\n// //       setTimeout(() => navigate('/login'), 2000);\n// //     } catch (err) {\n// //       setResetError(err.message || 'Password reset failed');\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //       <div className=\"max-w-md w-full space-y-8\">\n// //         <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Forgot Password</h2>\n// //         {step === 1 && (\n// //           <div className=\"space-y-4\">\n// //             <input\n// //               type=\"text\"\n// //               value={mobile}\n// //               onChange={e => setMobile(e.target.value)}\n// //               placeholder=\"Enter your mobile number\"\n// //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n// //             />\n// //             <button\n// //               onClick={sendOtp}\n// //               disabled={isOtpLoading || !mobile}\n// //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\n// //             >\n// //               {isOtpLoading ? 'Sending OTP...' : 'Send OTP'}\n// //             </button>\n// //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\n// //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\n// //           </div>\n// //         )}\n// //         {step === 2 && (\n// //           <div className=\"space-y-4\">\n// //             <input\n// //               type=\"text\"\n// //               value={otp}\n// //               onChange={e => setOtp(e.target.value)}\n// //               placeholder=\"Enter OTP\"\n// //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n// //             />\n// //             <button\n// //               onClick={verifyOtp}\n// //               disabled={isOtpLoading || !otp}\n// //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\n// //             >\n// //               {isOtpLoading ? 'Verifying...' : 'Verify OTP'}\n// //             </button>\n// //             <button\n// //               onClick={sendOtp}\n// //               disabled={isOtpLoading}\n// //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md\"\n// //             >\n// //               Resend OTP\n// //             </button>\n// //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\n// //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\n// //             <button onClick={() => setStep(1)} className=\"w-full py-2 px-4 text-indigo-600\">Back</button>\n// //           </div>\n// //         )}\n// //         {step === 3 && (\n// //           <div className=\"space-y-4\">\n// //             <input\n// //               type=\"password\"\n// //               value={newPassword}\n// //               onChange={e => setNewPassword(e.target.value)}\n// //               placeholder=\"Enter new password\"\n// //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n// //             />\n// //             <input\n// //               type=\"password\"\n// //               value={confirmPassword}\n// //               onChange={e => setConfirmPassword(e.target.value)}\n// //               placeholder=\"Confirm new password\"\n// //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n// //             />\n// //             <button\n// //               onClick={handleResetPassword}\n// //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\n// //             >\n// //               Reset Password\n// //             </button>\n// //             {resetMessage && <div className=\"text-green-600 text-sm\">{resetMessage}</div>}\n// //             {resetError && <div className=\"text-red-600 text-sm\">{resetError}</div>}\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default ForgotPassword;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// import { \n//   auth, \n//   RecaptchaVerifier, \n//   signInWithPhoneNumber,\n//   updatePassword \n// } from '../firebase';\n\n// const ForgotPasswordForm = () => {\n//   const [mobile, setMobile] = useState('');\n//   const [otp, setOtp] = useState('');\n//   const [newPassword, setNewPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [step, setStep] = useState(1); // 1: enter mobile, 2: enter OTP, 3: enter new password\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   const setUpRecaptcha = () => {\n//     const recaptchaVerifier = new RecaptchaVerifier(\n//       'recaptcha-container', \n//       { size: 'invisible' }, \n//       auth\n//     );\n//     return recaptchaVerifier;\n//   };\n\n//   const sendOtp = async () => {\n//     setLoading(true);\n//     setError('');\n//     setMessage('');\n//     try {\n//       const appVerifier = setUpRecaptcha();\n//       const phoneNumber = `+${mobile.replace(/\\D/g, '')}`;\n\n//       const confirmationResult = await auth().signInWithPhoneNumber(\n//         phoneNumber, \n//         appVerifier\n//       );\n\n//       window.confirmationResult = confirmationResult;\n//       setStep(2);\n//       setMessage('OTP sent to your mobile number.');\n//     } catch (err) {\n//       setError(err.message || 'Failed to send OTP');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const verifyOtp = async () => {\n//     setLoading(true);\n//     setError('');\n//     setMessage('');\n//     try {\n//       const result = await window.confirmationResult.confirm(otp);\n//       // Store the user credential for password update\n//       window.passwordResetUser = result.user;\n//       setStep(3);\n//       setMessage('OTP verified. Please set your new password.');\n//     } catch (err) {\n//       setError(err.message || 'Invalid OTP');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleResetPassword = async () => {\n//     setLoading(true);\n//     setError('');\n//     setMessage('');\n\n//     // Client-side validation\n//     if (!newPassword || newPassword.length < 6) {\n//       setError('Password must be at least 6 characters');\n//       setLoading(false);\n//       return;\n//     }\n//     if (newPassword !== confirmPassword) {\n//       setError('Passwords do not match');\n//       setLoading(false);\n//       return;\n//     }\n\n//     try {\n//       // Update password using Firebase\n//       await updatePassword(window.passwordResetUser, newPassword);\n//       setMessage('Password reset successfully! Redirecting to login...');\n//       setTimeout(() => navigate('/login'), 2000);\n//     } catch (err) {\n//       setError(err.message || 'Password reset failed');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n//       <div className=\"max-w-md w-full space-y-8\">\n//         <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n//           {step === 1 && 'Reset Password'}\n//           {step === 2 && 'Verify OTP'}\n//           {step === 3 && 'Set New Password'}\n//         </h2>\n\n//         {message && (\n//           <div className=\"rounded-md bg-green-50 p-4\">\n//             <div className=\"flex\">\n//               <div className=\"ml-3\">\n//                 <p className=\"text-sm font-medium text-green-800\">{message}</p>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n\n//         {error && (\n//           <div className=\"rounded-md bg-red-50 p-4\">\n//             <div className=\"flex\">\n//               <div className=\"ml-3\">\n//                 <p className=\"text-sm font-medium text-red-800\">{error}</p>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n\n//         {step === 1 && (\n//           <div className=\"space-y-4\">\n//             <div>\n//               <label htmlFor=\"mobile\" className=\"block text-sm font-medium text-gray-700\">\n//                 Mobile Number\n//               </label>\n//               <input\n//                 id=\"mobile\"\n//                 name=\"mobile\"\n//                 type=\"tel\"\n//                 value={mobile}\n//                 onChange={(e) => setMobile(e.target.value)}\n//                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n//                 placeholder=\"Enter your mobile number\"\n//               />\n//             </div>\n//             <button\n//               onClick={sendOtp}\n//               disabled={loading || !mobile}\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n//             >\n//               {loading ? 'Sending...' : 'Send OTP'}\n//             </button>\n//           </div>\n//         )}\n\n//         {step === 2 && (\n//           <div className=\"space-y-4\">\n//             <div>\n//               <label htmlFor=\"otp\" className=\"block text-sm font-medium text-gray-700\">\n//                 OTP\n//               </label>\n//               <input\n//                 id=\"otp\"\n//                 name=\"otp\"\n//                 type=\"text\"\n//                 value={otp}\n//                 onChange={(e) => setOtp(e.target.value)}\n//                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n//                 placeholder=\"Enter OTP\"\n//               />\n//             </div>\n//             <button\n//               onClick={verifyOtp}\n//               disabled={loading || !otp}\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n//             >\n//               {loading ? 'Verifying...' : 'Verify OTP'}\n//             </button>\n//             <button\n//               onClick={sendOtp}\n//               disabled={loading}\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-indigo-600 hover:text-indigo-500\"\n//             >\n//               Resend OTP\n//             </button>\n//             <button \n//               onClick={() => setStep(1)}\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-gray-600 hover:text-gray-500\"\n//             >\n//               Back\n//             </button>\n//           </div>\n//         )}\n\n//         {step === 3 && (\n//           <div className=\"space-y-4\">\n//             <div>\n//               <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700\">\n//                 New Password\n//               </label>\n//               <input\n//                 id=\"newPassword\"\n//                 name=\"newPassword\"\n//                 type=\"password\"\n//                 value={newPassword}\n//                 onChange={(e) => setNewPassword(e.target.value)}\n//                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n//                 placeholder=\"Enter new password\"\n//               />\n//             </div>\n//             <div>\n//               <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n//                 Confirm Password\n//               </label>\n//               <input\n//                 id=\"confirmPassword\"\n//                 name=\"confirmPassword\"\n//                 type=\"password\"\n//                 value={confirmPassword}\n//                 onChange={(e) => setConfirmPassword(e.target.value)}\n//                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n//                 placeholder=\"Confirm new password\"\n//               />\n//             </div>\n//             <button\n//               onClick={handleResetPassword}\n//               disabled={loading || !newPassword || !confirmPassword}\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n//             >\n//               {loading ? 'Resetting...' : 'Reset Password'}\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ForgotPasswordForm;\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber, updatePassword } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [mobile, setMobile] = useState('');\n  const [otp, setOtp] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [step, setStep] = useState(1); // 1: mobile, 2: otp, 3: reset\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n      size: 'invisible'\n    }, auth);\n    return () => {\n      if (window.recaptchaVerifier) {\n        window.recaptchaVerifier.clear();\n      }\n    };\n  }, []);\n  const sendOtp = async () => {\n    setLoading(true);\n    setError('');\n    setMessage('');\n    try {\n      const phoneNumber = `+91${mobile}`;\n      const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, window.recaptchaVerifier);\n      window.confirmationResult = confirmationResult;\n      setMessage('OTP sent to your mobile number.');\n      setStep(2);\n    } catch (err) {\n      setError(err.message || 'Failed to send OTP');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const verifyOtp = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      await window.confirmationResult.confirm(otp);\n      setMessage('OTP verified. Please set your new password.');\n      setStep(3);\n    } catch (err) {\n      setError(err.message || 'Invalid OTP');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleResetPassword = async () => {\n    if (newPassword !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    if (newPassword.length < 6) {\n      setError('Password must be at least 6 characters');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const user = auth.currentUser;\n      await updatePassword(user, newPassword);\n      setMessage('Password reset successfully! Redirecting to login...');\n      setTimeout(() => navigate('/login'), 2000);\n    } catch (err) {\n      setError(err.message || 'Failed to reset password');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mt-6 text-center text-3xl font-extrabold text-gray-900\",\n          children: [step === 1 && 'Reset Password', step === 2 && 'Verify OTP', step === 3 && 'Set New Password']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 bg-green-50 text-green-700 rounded-md text-sm\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 bg-red-50 text-red-700 rounded-md text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 11\n      }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"mobile\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Mobile Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 flex rounded-md shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\",\n              children: \"+91\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"mobile\",\n              name: \"mobile\",\n              type: \"tel\",\n              value: mobile,\n              onChange: e => setMobile(e.target.value.replace(/\\D/g, '').slice(0, 10)),\n              className: \"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n              placeholder: \"9876543210\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendOtp,\n          disabled: loading || mobile.length !== 10,\n          className: \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\",\n          children: loading ? 'Sending OTP...' : 'Send OTP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-sm\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"font-medium text-indigo-600 hover:text-indigo-500\",\n            children: \"Back to Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"otp\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"otp\",\n            name: \"otp\",\n            type: \"text\",\n            value: otp,\n            onChange: e => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6)),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\",\n            placeholder: \"Enter 6-digit OTP\",\n            inputMode: \"numeric\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: verifyOtp,\n          disabled: loading || otp.length !== 6,\n          className: \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\",\n          children: loading ? 'Verifying...' : 'Verify OTP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendOtp,\n          disabled: loading,\n          className: \"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\",\n          children: \"Resend OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 11\n      }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"newPassword\",\n            name: \"newPassword\",\n            type: \"password\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n            placeholder: \"Enter new password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n            placeholder: \"Confirm new password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetPassword,\n          disabled: loading || !newPassword || !confirmPassword,\n          className: \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\",\n          children: loading ? 'Resetting...' : 'Reset Password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 524,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"fF/Q7+wKjmyHVMwZRjsMjE6prEA=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","auth","RecaptchaVerifier","signInWithPhoneNumber","updatePassword","jsxDEV","_jsxDEV","ForgotPassword","_s","mobile","setMobile","otp","setOtp","newPassword","setNewPassword","confirmPassword","setConfirmPassword","step","setStep","loading","setLoading","error","setError","message","setMessage","navigate","window","recaptchaVerifier","size","clear","sendOtp","phoneNumber","confirmationResult","err","verifyOtp","confirm","handleResetPassword","length","user","currentUser","setTimeout","className","children","id","style","display","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","type","value","onChange","e","target","replace","slice","placeholder","onClick","disabled","to","inputMode","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/Ecommerce-MLM-Chain-main/Ecommerce-MLM-Chain-main/frontend/frontend/src/pages/ForgotPassword.jsx"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import { NavLink } from 'react-router-dom';\r\n// // import { authAPI } from '../services/api';\r\n// // import { API_URL } from '../config';\r\n\r\n// // const ForgotPassword = () => {\r\n// //   const [step, setStep] = useState(1); // 1: mobile, 2: otp, 3: reset\r\n// //   const [mobile, setMobile] = useState('');\r\n// //   const [otp, setOtp] = useState('');\r\n// //   const [otpError, setOtpError] = useState('');\r\n// //   const [otpMessage, setOtpMessage] = useState('');\r\n// //   const [isOtpLoading, setIsOtpLoading] = useState(false);\r\n// //   const [newPassword, setNewPassword] = useState('');\r\n// //   const [confirmPassword, setConfirmPassword] = useState('');\r\n// //   const [resetError, setResetError] = useState('');\r\n// //   const [resetMessage, setResetMessage] = useState('');\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const sendOtp = async () => {\r\n// //     setIsOtpLoading(true);\r\n// //     setOtpError('');\r\n// //     setOtpMessage('');\r\n// //     try {\r\n// //       // Using fetch with API_URL from config\r\n// //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/send-otp`, {\r\n// //         method: 'POST',\r\n// //         headers: {\r\n// //           'Content-Type': 'application/json',\r\n// //         },\r\n// //         body: JSON.stringify({ mobile }),\r\n// //       });\r\n// //       const data = await response.json();\r\n// //       if (!response.ok) {\r\n// //         throw new Error(data.error || 'Failed to send OTP');\r\n// //       }\r\n// //       setOtpMessage('OTP sent to your mobile number.');\r\n// //       setStep(2);\r\n// //     } catch (err) {\r\n// //       setOtpError(err.message || 'Failed to send OTP');\r\n// //     } finally {\r\n// //       setIsOtpLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   const verifyOtp = async () => {\r\n// //     setIsOtpLoading(true);\r\n// //     setOtpError('');\r\n// //     setOtpMessage('');\r\n// //     try {\r\n// //       // Using fetch with API_URL from config\r\n// //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/verify-otp`, {\r\n// //         method: 'POST',\r\n// //         headers: {\r\n// //           'Content-Type': 'application/json',\r\n// //         },\r\n// //         body: JSON.stringify({ mobile, otp }),\r\n// //       });\r\n// //       const data = await response.json();\r\n// //       if (!response.ok) {\r\n// //         throw new Error(data.error || 'OTP verification failed');\r\n// //       }\r\n// //       setStep(3);\r\n// //     } catch (err) {\r\n// //       setOtpError(err.message || 'OTP verification failed');\r\n// //     } finally {\r\n// //       setIsOtpLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleResetPassword = async () => {\r\n// //     setResetError('');\r\n// //     setResetMessage('');\r\n// //     if (!newPassword || newPassword.length < 6) {\r\n// //       setResetError('Password must be at least 6 characters');\r\n// //       return;\r\n// //     }\r\n// //     if (newPassword !== confirmPassword) {\r\n// //       setResetError('Passwords do not match');\r\n// //       return;\r\n// //     }\r\n// //     try {\r\n// //       // Using fetch with API_URL from config\r\n// //       const response = await fetch(`${API_URL}/auth/reset-password`, {\r\n// //         method: 'POST',\r\n// //         headers: {\r\n// //           'Content-Type': 'application/json',\r\n// //         },\r\n// //         body: JSON.stringify({ mobile, newPassword }),\r\n// //       });\r\n// //       const data = await response.json();\r\n// //       if (!response.ok) {\r\n// //         throw new Error(data.error || 'Password reset failed');\r\n// //       }\r\n// //       setResetMessage('Password reset successful! Redirecting to login...');\r\n// //       setTimeout(() => navigate('/login'), 2000);\r\n// //     } catch (err) {\r\n// //       setResetError(err.message || 'Password reset failed');\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// //       <div className=\"max-w-md w-full space-y-8\">\r\n// //         <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Forgot Password</h2>\r\n// //         {step === 1 && (\r\n// //           <div className=\"space-y-4\">\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               value={mobile}\r\n// //               onChange={e => setMobile(e.target.value)}\r\n// //               placeholder=\"Enter your mobile number\"\r\n// //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n// //             />\r\n// //             <button\r\n// //               onClick={sendOtp}\r\n// //               disabled={isOtpLoading || !mobile}\r\n// //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\r\n// //             >\r\n// //               {isOtpLoading ? 'Sending OTP...' : 'Send OTP'}\r\n// //             </button>\r\n// //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\r\n// //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\r\n// //           </div>\r\n// //         )}\r\n// //         {step === 2 && (\r\n// //           <div className=\"space-y-4\">\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               value={otp}\r\n// //               onChange={e => setOtp(e.target.value)}\r\n// //               placeholder=\"Enter OTP\"\r\n// //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n// //             />\r\n// //             <button\r\n// //               onClick={verifyOtp}\r\n// //               disabled={isOtpLoading || !otp}\r\n// //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\r\n// //             >\r\n// //               {isOtpLoading ? 'Verifying...' : 'Verify OTP'}\r\n// //             </button>\r\n// //             <button\r\n// //               onClick={sendOtp}\r\n// //               disabled={isOtpLoading}\r\n// //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md\"\r\n// //             >\r\n// //               Resend OTP\r\n// //             </button>\r\n// //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\r\n// //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\r\n// //             <button onClick={() => setStep(1)} className=\"w-full py-2 px-4 text-indigo-600\">Back</button>\r\n// //           </div>\r\n// //         )}\r\n// //         {step === 3 && (\r\n// //           <div className=\"space-y-4\">\r\n// //             <input\r\n// //               type=\"password\"\r\n// //               value={newPassword}\r\n// //               onChange={e => setNewPassword(e.target.value)}\r\n// //               placeholder=\"Enter new password\"\r\n// //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n// //             />\r\n// //             <input\r\n// //               type=\"password\"\r\n// //               value={confirmPassword}\r\n// //               onChange={e => setConfirmPassword(e.target.value)}\r\n// //               placeholder=\"Confirm new password\"\r\n// //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n// //             />\r\n// //             <button\r\n// //               onClick={handleResetPassword}\r\n// //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\r\n// //             >\r\n// //               Reset Password\r\n// //             </button>\r\n// //             {resetMessage && <div className=\"text-green-600 text-sm\">{resetMessage}</div>}\r\n// //             {resetError && <div className=\"text-red-600 text-sm\">{resetError}</div>}\r\n// //           </div>\r\n// //         )}\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default ForgotPassword;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// import { \r\n//   auth, \r\n//   RecaptchaVerifier, \r\n//   signInWithPhoneNumber,\r\n//   updatePassword \r\n// } from '../firebase';\r\n\r\n// const ForgotPasswordForm = () => {\r\n//   const [mobile, setMobile] = useState('');\r\n//   const [otp, setOtp] = useState('');\r\n//   const [newPassword, setNewPassword] = useState('');\r\n//   const [confirmPassword, setConfirmPassword] = useState('');\r\n//   const [step, setStep] = useState(1); // 1: enter mobile, 2: enter OTP, 3: enter new password\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const setUpRecaptcha = () => {\r\n//     const recaptchaVerifier = new RecaptchaVerifier(\r\n//       'recaptcha-container', \r\n//       { size: 'invisible' }, \r\n//       auth\r\n//     );\r\n//     return recaptchaVerifier;\r\n//   };\r\n\r\n//   const sendOtp = async () => {\r\n//     setLoading(true);\r\n//     setError('');\r\n//     setMessage('');\r\n//     try {\r\n//       const appVerifier = setUpRecaptcha();\r\n//       const phoneNumber = `+${mobile.replace(/\\D/g, '')}`;\r\n      \r\n//       const confirmationResult = await auth().signInWithPhoneNumber(\r\n//         phoneNumber, \r\n//         appVerifier\r\n//       );\r\n      \r\n//       window.confirmationResult = confirmationResult;\r\n//       setStep(2);\r\n//       setMessage('OTP sent to your mobile number.');\r\n//     } catch (err) {\r\n//       setError(err.message || 'Failed to send OTP');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const verifyOtp = async () => {\r\n//     setLoading(true);\r\n//     setError('');\r\n//     setMessage('');\r\n//     try {\r\n//       const result = await window.confirmationResult.confirm(otp);\r\n//       // Store the user credential for password update\r\n//       window.passwordResetUser = result.user;\r\n//       setStep(3);\r\n//       setMessage('OTP verified. Please set your new password.');\r\n//     } catch (err) {\r\n//       setError(err.message || 'Invalid OTP');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleResetPassword = async () => {\r\n//     setLoading(true);\r\n//     setError('');\r\n//     setMessage('');\r\n    \r\n//     // Client-side validation\r\n//     if (!newPassword || newPassword.length < 6) {\r\n//       setError('Password must be at least 6 characters');\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n//     if (newPassword !== confirmPassword) {\r\n//       setError('Passwords do not match');\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       // Update password using Firebase\r\n//       await updatePassword(window.passwordResetUser, newPassword);\r\n//       setMessage('Password reset successfully! Redirecting to login...');\r\n//       setTimeout(() => navigate('/login'), 2000);\r\n//     } catch (err) {\r\n//       setError(err.message || 'Password reset failed');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n//       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n//       <div className=\"max-w-md w-full space-y-8\">\r\n//         <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n//           {step === 1 && 'Reset Password'}\r\n//           {step === 2 && 'Verify OTP'}\r\n//           {step === 3 && 'Set New Password'}\r\n//         </h2>\r\n\r\n//         {message && (\r\n//           <div className=\"rounded-md bg-green-50 p-4\">\r\n//             <div className=\"flex\">\r\n//               <div className=\"ml-3\">\r\n//                 <p className=\"text-sm font-medium text-green-800\">{message}</p>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {error && (\r\n//           <div className=\"rounded-md bg-red-50 p-4\">\r\n//             <div className=\"flex\">\r\n//               <div className=\"ml-3\">\r\n//                 <p className=\"text-sm font-medium text-red-800\">{error}</p>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {step === 1 && (\r\n//           <div className=\"space-y-4\">\r\n//             <div>\r\n//               <label htmlFor=\"mobile\" className=\"block text-sm font-medium text-gray-700\">\r\n//                 Mobile Number\r\n//               </label>\r\n//               <input\r\n//                 id=\"mobile\"\r\n//                 name=\"mobile\"\r\n//                 type=\"tel\"\r\n//                 value={mobile}\r\n//                 onChange={(e) => setMobile(e.target.value)}\r\n//                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n//                 placeholder=\"Enter your mobile number\"\r\n//               />\r\n//             </div>\r\n//             <button\r\n//               onClick={sendOtp}\r\n//               disabled={loading || !mobile}\r\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n//             >\r\n//               {loading ? 'Sending...' : 'Send OTP'}\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {step === 2 && (\r\n//           <div className=\"space-y-4\">\r\n//             <div>\r\n//               <label htmlFor=\"otp\" className=\"block text-sm font-medium text-gray-700\">\r\n//                 OTP\r\n//               </label>\r\n//               <input\r\n//                 id=\"otp\"\r\n//                 name=\"otp\"\r\n//                 type=\"text\"\r\n//                 value={otp}\r\n//                 onChange={(e) => setOtp(e.target.value)}\r\n//                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n//                 placeholder=\"Enter OTP\"\r\n//               />\r\n//             </div>\r\n//             <button\r\n//               onClick={verifyOtp}\r\n//               disabled={loading || !otp}\r\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n//             >\r\n//               {loading ? 'Verifying...' : 'Verify OTP'}\r\n//             </button>\r\n//             <button\r\n//               onClick={sendOtp}\r\n//               disabled={loading}\r\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-indigo-600 hover:text-indigo-500\"\r\n//             >\r\n//               Resend OTP\r\n//             </button>\r\n//             <button \r\n//               onClick={() => setStep(1)}\r\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-gray-600 hover:text-gray-500\"\r\n//             >\r\n//               Back\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {step === 3 && (\r\n//           <div className=\"space-y-4\">\r\n//             <div>\r\n//               <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n//                 New Password\r\n//               </label>\r\n//               <input\r\n//                 id=\"newPassword\"\r\n//                 name=\"newPassword\"\r\n//                 type=\"password\"\r\n//                 value={newPassword}\r\n//                 onChange={(e) => setNewPassword(e.target.value)}\r\n//                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n//                 placeholder=\"Enter new password\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n//                 Confirm Password\r\n//               </label>\r\n//               <input\r\n//                 id=\"confirmPassword\"\r\n//                 name=\"confirmPassword\"\r\n//                 type=\"password\"\r\n//                 value={confirmPassword}\r\n//                 onChange={(e) => setConfirmPassword(e.target.value)}\r\n//                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n//                 placeholder=\"Confirm new password\"\r\n//               />\r\n//             </div>\r\n//             <button\r\n//               onClick={handleResetPassword}\r\n//               disabled={loading || !newPassword || !confirmPassword}\r\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n//             >\r\n//               {loading ? 'Resetting...' : 'Reset Password'}\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ForgotPasswordForm;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber, updatePassword } from '../firebase';\r\n\r\nconst ForgotPassword = () => {\r\n  const [mobile, setMobile] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [step, setStep] = useState(1); // 1: mobile, 2: otp, 3: reset\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    window.recaptchaVerifier = new RecaptchaVerifier(\r\n      'recaptcha-container',\r\n      { size: 'invisible' },\r\n      auth\r\n    );\r\n\r\n    return () => {\r\n      if (window.recaptchaVerifier) {\r\n        window.recaptchaVerifier.clear();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const sendOtp = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    setMessage('');\r\n    \r\n    try {\r\n      const phoneNumber = `+91${mobile}`;\r\n      const confirmationResult = await signInWithPhoneNumber(\r\n        auth,\r\n        phoneNumber,\r\n        window.recaptchaVerifier\r\n      );\r\n      \r\n      window.confirmationResult = confirmationResult;\r\n      setMessage('OTP sent to your mobile number.');\r\n      setStep(2);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to send OTP');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      await window.confirmationResult.confirm(otp);\r\n      setMessage('OTP verified. Please set your new password.');\r\n      setStep(3);\r\n    } catch (err) {\r\n      setError(err.message || 'Invalid OTP');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    if (newPassword !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 6) {\r\n      setError('Password must be at least 6 characters');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const user = auth.currentUser;\r\n      await updatePassword(user, newPassword);\r\n      setMessage('Password reset successfully! Redirecting to login...');\r\n      setTimeout(() => navigate('/login'), 2000);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to reset password');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            {step === 1 && 'Reset Password'}\r\n            {step === 2 && 'Verify OTP'}\r\n            {step === 3 && 'Set New Password'}\r\n          </h2>\r\n        </div>\r\n\r\n        {message && (\r\n          <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\r\n            {message}\r\n          </div>\r\n        )}\r\n\r\n        {error && (\r\n          <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {step === 1 && (\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"mobile\" className=\"block text-sm font-medium text-gray-700\">\r\n                Mobile Number\r\n              </label>\r\n              <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n                <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\r\n                  +91\r\n                </span>\r\n                <input\r\n                  id=\"mobile\"\r\n                  name=\"mobile\"\r\n                  type=\"tel\"\r\n                  value={mobile}\r\n                  onChange={(e) => setMobile(e.target.value.replace(/\\D/g, '').slice(0, 10))}\r\n                  className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                  placeholder=\"9876543210\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={sendOtp}\r\n              disabled={loading || mobile.length !== 10}\r\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Sending OTP...' : 'Send OTP'}\r\n            </button>\r\n            <div className=\"text-center text-sm\">\r\n              <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n                Back to Login\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {step === 2 && (\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"otp\" className=\"block text-sm font-medium text-gray-700\">\r\n                OTP\r\n              </label>\r\n              <input\r\n                id=\"otp\"\r\n                name=\"otp\"\r\n                type=\"text\"\r\n                value={otp}\r\n                onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\r\n                placeholder=\"Enter 6-digit OTP\"\r\n                inputMode=\"numeric\"\r\n                autoFocus\r\n              />\r\n            </div>\r\n            <button\r\n              onClick={verifyOtp}\r\n              disabled={loading || otp.length !== 6}\r\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Verifying...' : 'Verify OTP'}\r\n            </button>\r\n            <button\r\n              onClick={sendOtp}\r\n              disabled={loading}\r\n              className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\r\n            >\r\n              Resend OTP\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {step === 3 && (\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n                New Password\r\n              </label>\r\n              <input\r\n                id=\"newPassword\"\r\n                name=\"newPassword\"\r\n                type=\"password\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                placeholder=\"Enter new password\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n                Confirm Password\r\n              </label>\r\n              <input\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                placeholder=\"Confirm new password\"\r\n              />\r\n            </div>\r\n            <button\r\n              onClick={handleResetPassword}\r\n              disabled={loading || !newPassword || !confirmPassword}\r\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Resetting...' : 'Reset Password'}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}