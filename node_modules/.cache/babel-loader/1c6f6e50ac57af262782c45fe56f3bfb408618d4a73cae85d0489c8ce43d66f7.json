{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moazz\\\\Downloads\\\\Ecommerce-MLM-Chain-main\\\\Ecommerce-MLM-Chain-main\\\\frontend\\\\frontend\\\\src\\\\components\\\\auth\\\\LoginForm.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // import * as Yup from 'yup';\n// // import { authAPI } from '../../services/api';\n// // import { Link } from 'react-router-dom';\n\n// // const LoginForm = ({ onLoginSuccess, onSwitchToSignup }) => {\n// //   const [isLoading, setIsLoading] = useState(false);\n// //   const [error, setError] = useState('');\n// //   const [userIds, setUserIds] = useState([]);\n// //   const [showDashboard, setShowDashboard] = useState(false);\n\n// //   const validationSchema = Yup.object({\n// //     userId: Yup.string().matches(/^user([1-9]|10)$/, 'User ID must be user1 to user10').required('User ID is required'),\n// //     password: Yup.string().required('Password is required'),\n// //     parentMobile: Yup.string().matches(/^\\+?[\\d\\s\\-\\(\\)]{10,15}$/, 'Please enter a valid mobile number').required('Mobile number is required'),\n// //   });\n\n// //   const handleSubmit = async (values, { setSubmitting }) => {\n// //     setIsLoading(true);\n// //     setError('');\n// //     setUserIds([]);\n// //     setShowDashboard(false);\n// //     try {\n// //       const response = await authAPI.login({\n// //         userId: values.userId,\n// //         password: values.password,\n// //         parentMobile: values.parentMobile,\n// //       });\n// //       if (response.success) {\n// //         setUserIds(response.data.allUserIds);\n// //         setShowDashboard(true);\n// //         if (response.data.isAdmin) {\n// //           localStorage.setItem('isAdmin', 'true');\n// //         } else {\n// //           localStorage.removeItem('isAdmin');\n// //         }\n// //         onLoginSuccess && onLoginSuccess(response.data);\n// //       } else {\n// //         setError(response.message || 'Login failed');\n// //       }\n// //     } catch (err) {\n// //       setError(err.message || 'Login failed. Please try again.');\n// //     } finally {\n// //       setIsLoading(false);\n// //       setSubmitting(false);\n// //     }\n// //   };\n\n// //   if (showDashboard && userIds.length > 0) {\n// //     return (\n// //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //         <div className=\"max-w-md w-full space-y-8\">\n// //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\n// //           <ul className=\"mt-4 mb-6\">\n// //             {userIds.map((id) => (\n// //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\n// //             ))}\n// //           </ul>\n// //           <button onClick={() => setShowDashboard(false)} className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\">Login as another user</button>\n// //         </div>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //       <div className=\"max-w-md w-full space-y-8\">\n// //         <div>\n// //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\n// //           <p className=\"mt-2 text-center text-sm text-gray-600\">Enter your user ID, password, and mobile number</p>\n// //         </div>\n// //         <Formik\n// //           initialValues={{ userId: '', password: '', parentMobile: '' }}\n// //           validationSchema={validationSchema}\n// //           onSubmit={handleSubmit}\n// //         >\n// //           {({ isSubmitting }) => (\n// //             <Form className=\"mt-8 space-y-6\">\n// //               <div>\n// //                 <label htmlFor=\"userId\" className=\"block text-sm font-medium text-gray-700\">User ID</label>\n// //                 <Field id=\"userId\" name=\"userId\" type=\"text\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"user1, user2, ... user10\" />\n// //                 <ErrorMessage name=\"userId\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //               </div>\n// //               <div>\n// //                 <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\n// //                 <Field id=\"password\" name=\"password\" type=\"password\" autoComplete=\"current-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your password\" />\n// //                 <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 <div className=\"mt-2 text-right\">\n// //                   <Link to=\"/forgot-password\" className=\"text-sm text-indigo-600 hover:text-indigo-500\">Forgot your password?</Link>\n// //                 </div>\n// //               </div>\n// //               <div>\n// //                 <label htmlFor=\"parentMobile\" className=\"block text-sm font-medium text-gray-700\">Mobile Number</label>\n// //                 <Field id=\"parentMobile\" name=\"parentMobile\" type=\"tel\" autoComplete=\"tel\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your mobile number\" />\n// //                 <ErrorMessage name=\"parentMobile\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //               </div>\n// //               {error && (\n// //                 <div className=\"rounded-md bg-red-50 p-4\">\n// //                   <div className=\"flex\">\n// //                     <div className=\"ml-3\">\n// //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\n// //                     </div>\n// //                   </div>\n// //                 </div>\n// //               )}\n// //               <div>\n// //                 <button type=\"submit\" disabled={isSubmitting || isLoading} className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\">\n// //                   {isLoading ? 'Signing in...' : 'Sign in'}\n// //                 </button>\n// //               </div>\n// //               <div className=\"text-center\">\n// //                 <button type=\"button\" onClick={onSwitchToSignup} className=\"font-medium text-indigo-600 hover:text-indigo-500\">Don't have an account? Sign up</button>\n// //               </div>\n// //             </Form>\n// //           )}\n// //         </Formik>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default LoginForm; \n\n// import React, { useState } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { authAPI } from '../../services/api';\n// import { Link } from 'react-router-dom';\n\n// const LoginForm = ({ onLoginSuccess, onSwitchToSignup }) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [userIds, setUserIds] = useState([]);\n//   const [showDashboard, setShowDashboard] = useState(false);\n\n//   // âœ… Validation schema\n//   const validationSchema = Yup.object({\n//     userId: Yup.string()\n//       .matches(/^user([1-9]|10)$/, 'User ID must be user1 to user10')\n//       .required('User ID is required'),\n//     password: Yup.string().required('Password is required'),\n//     parentMobile: Yup.string()\n//       .matches(/^\\+?[\\d\\s\\-\\(\\)]{10,15}$/, 'Please enter a valid mobile number')\n//       .required('Mobile number is required'),\n//   });\n\n//   // âœ… Submit handler\n//   const handleSubmit = async (values, { setSubmitting }) => {\n//     setIsLoading(true);\n//     setError('');\n//     setUserIds([]);\n//     setShowDashboard(false);\n\n//     try {\n//       const response = await authAPI.login({\n//         userId: values.userId,\n//         password: values.password,\n//         parentMobile: values.parentMobile,\n//       });\n\n//       if (response.success) {\n//         // ðŸŸ¢ Save token and user details in localStorage\n//         if (response.data.token) {\n//           localStorage.setItem(\"userToken\", response.data.token);\n//         }\n//         if (response.data.user?._id) {\n//           localStorage.setItem(\"userId\", response.data.user._id);\n//         } else {\n//           localStorage.setItem(\"userId\", values.userId); // fallback if _id missing\n//         }\n\n//         setUserIds(response.data.allUserIds);\n//         setShowDashboard(true);\n\n//         // Admin check\n//         if (response.data.isAdmin) {\n//           localStorage.setItem(\"isAdmin\", \"true\");\n//         } else {\n//           localStorage.removeItem(\"isAdmin\");\n//         }\n\n//         onLoginSuccess && onLoginSuccess(response.data);\n//       } else {\n//         setError(response.message || 'Login failed');\n//       }\n//     } catch (err) {\n//       setError(err.message || 'Login failed. Please try again.');\n//     } finally {\n//       setIsLoading(false);\n//       setSubmitting(false);\n//     }\n//   };\n\n//   // âœ… Show all user IDs (if multiple accounts linked to same mobile)\n//   if (showDashboard && userIds.length > 0) {\n//     return (\n//       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//         <div className=\"max-w-md w-full space-y-8\">\n//           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\n//           <ul className=\"mt-4 mb-6\">\n//             {userIds.map((id) => (\n//               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\n//             ))}\n//           </ul>\n//           <button \n//             onClick={() => setShowDashboard(false)} \n//             className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\n//           >\n//             Login as another user\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   // âœ… Login form\n//   return (\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//       <div className=\"max-w-md w-full space-y-8\">\n//         <div>\n//           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n//             Sign in to your account\n//           </h2>\n//           <p className=\"mt-2 text-center text-sm text-gray-600\">\n//             Enter your user ID, password, and mobile number\n//           </p>\n//         </div>\n\n//         <Formik\n//           initialValues={{ userId: '', password: '', parentMobile: '' }}\n//           validationSchema={validationSchema}\n//           onSubmit={handleSubmit}\n//         >\n//           {({ isSubmitting }) => (\n//             <Form className=\"mt-8 space-y-6\">\n//               {/* User ID */}\n//               <div>\n//                 <label htmlFor=\"userId\" className=\"block text-sm font-medium text-gray-700\">\n//                   User ID\n//                 </label>\n//                 <Field\n//                   id=\"userId\"\n//                   name=\"userId\"\n//                   type=\"text\"\n//                   required\n//                   placeholder=\"user1, user2, ... user10\"\n//                   className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm \n//                              focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n//                 />\n//                 <ErrorMessage name=\"userId\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//               </div>\n\n//               {/* Password */}\n//               <div>\n//                 <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n//                   Password\n//                 </label>\n//                 <Field\n//                   id=\"password\"\n//                   name=\"password\"\n//                   type=\"password\"\n//                   required\n//                   placeholder=\"Enter your password\"\n//                   className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm \n//                              focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n//                 />\n//                 <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n\n//                 <div className=\"mt-2 text-right\">\n//                   <Link to=\"/forgot-password\" className=\"text-sm text-indigo-600 hover:text-indigo-500\">\n//                     Forgot your password?\n//                   </Link>\n//                 </div>\n//               </div>\n\n//               {/* Mobile */}\n//               <div>\n//                 <label htmlFor=\"parentMobile\" className=\"block text-sm font-medium text-gray-700\">\n//                   Mobile Number\n//                 </label>\n//                 <Field\n//                   id=\"parentMobile\"\n//                   name=\"parentMobile\"\n//                   type=\"tel\"\n//                   required\n//                   placeholder=\"Enter your mobile number\"\n//                   className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm \n//                              focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n//                 />\n//                 <ErrorMessage name=\"parentMobile\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//               </div>\n\n//               {/* Error message */}\n//               {error && (\n//                 <div className=\"rounded-md bg-red-50 p-4\">\n//                   <div className=\"text-sm font-medium text-red-800\">{error}</div>\n//                 </div>\n//               )}\n\n//               {/* Submit button */}\n//               <div>\n//                 <button\n//                   type=\"submit\"\n//                   disabled={isSubmitting || isLoading}\n//                   className=\"group relative w-full flex justify-center py-2 px-4 \n//                              border border-transparent text-sm font-medium rounded-md \n//                              text-white bg-indigo-600 hover:bg-indigo-700 \n//                              focus:outline-none focus:ring-2 focus:ring-offset-2 \n//                              focus:ring-indigo-500 disabled:opacity-50\"\n//                 >\n//                   {isLoading ? 'Signing in...' : 'Sign in'}\n//                 </button>\n//               </div>\n\n//               {/* Switch to signup */}\n//               <div className=\"text-center\">\n//                 <button\n//                   type=\"button\"\n//                   onClick={onSwitchToSignup}\n//                   className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n//                 >\n//                   Don't have an account? Sign up\n//                 </button>\n//               </div>\n//             </Form>\n//           )}\n//         </Formik>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\n\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { authAPI } from '../../services/api';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  onLoginSuccess,\n  onSwitchToSignup\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [userIds, setUserIds] = useState([]);\n  const [showDashboard, setShowDashboard] = useState(false);\n\n  // âœ… Validation schema\n  const validationSchema = Yup.object({\n    userId: Yup.string().matches(/^user([1-9]|10)$/, 'User ID must be user1 to user10').required('User ID is required'),\n    password: Yup.string().required('Password is required'),\n    parentMobile: Yup.string().matches(/^\\+?[\\d\\s\\-\\(\\)]{10,15}$/, 'Please enter a valid mobile number').required('Mobile number is required')\n  });\n\n  // âœ… Submit handler\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    setIsLoading(true);\n    setError('');\n    setUserIds([]);\n    setShowDashboard(false);\n    try {\n      const response = await authAPI.login({\n        userId: values.userId,\n        password: values.password,\n        parentMobile: values.parentMobile\n      });\n      if (response.success) {\n        var _response$data$user;\n        // ðŸŸ¢ Save token and user details in localStorage\n        if (response.data.token) {\n          localStorage.setItem(\"token\", response.data.token); // âœ… fixed key name\n          console.log(\"Saved token:\", response.data.token);\n        }\n        if ((_response$data$user = response.data.user) !== null && _response$data$user !== void 0 && _response$data$user._id) {\n          localStorage.setItem(\"userId\", response.data.user._id);\n          console.log(\"Saved userId:\", response.data.user._id);\n        } else {\n          localStorage.setItem(\"userId\", values.userId);\n          console.log(\"Saved userId (fallback):\", values.userId);\n        }\n        setUserIds(response.data.allUserIds);\n        setShowDashboard(true);\n\n        // Admin check\n        if (response.data.isAdmin) {\n          localStorage.setItem(\"isAdmin\", \"true\");\n        } else {\n          localStorage.removeItem(\"isAdmin\");\n        }\n        onLoginSuccess && onLoginSuccess(response.data);\n      } else {\n        setError(response.message || 'Login failed');\n      }\n    } catch (err) {\n      setError(err.message || 'Login failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  // âœ… Show all user IDs (if multiple accounts linked to same mobile)\n  if (showDashboard && userIds.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md w-full space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-center\",\n          children: \"User IDs for this mobile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"mt-4 mb-6\",\n          children: userIds.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"text-lg text-center py-1\",\n            children: id\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowDashboard(false),\n          className: \"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\",\n          children: \"Login as another user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this);\n  }\n\n  // âœ… Login form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mt-6 text-center text-3xl font-extrabold text-gray-900\",\n          children: \"Sign in to your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-center text-sm text-gray-600\",\n          children: \"Enter your user ID, password, and mobile number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          userId: '',\n          password: '',\n          parentMobile: ''\n        },\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit,\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"mt-8 space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"userId\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"userId\",\n              name: \"userId\",\n              type: \"text\",\n              required: true,\n              placeholder: \"user1, user2, ... user10\",\n              className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm  focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"userId\",\n              component: \"div\",\n              className: \"mt-1 text-sm text-red-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"password\",\n              name: \"password\",\n              type: \"password\",\n              required: true,\n              placeholder: \"Enter your password\",\n              className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm  focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"mt-1 text-sm text-red-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 text-right\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/forgot-password\",\n                className: \"text-sm text-indigo-600 hover:text-indigo-500\",\n                children: \"Forgot your password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"parentMobile\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Mobile Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"parentMobile\",\n              name: \"parentMobile\",\n              type: \"tel\",\n              required: true,\n              placeholder: \"Enter your mobile number\",\n              className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm  focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"parentMobile\",\n              component: \"div\",\n              className: \"mt-1 text-sm text-red-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rounded-md bg-red-50 p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium text-red-800\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting || isLoading,\n              className: \"group relative w-full flex justify-center py-2 px-4  border border-transparent text-sm font-medium rounded-md  text-white bg-indigo-600 hover:bg-indigo-700  focus:outline-none focus:ring-2 focus:ring-offset-2  focus:ring-indigo-500 disabled:opacity-50\",\n              children: isLoading ? 'Signing in...' : 'Sign in'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: onSwitchToSignup,\n              className: \"font-medium text-indigo-600 hover:text-indigo-500\",\n              children: \"Don't have an account? Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"8r9mZlCnDCvwCcD3sL0v5AIPx/U=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Formik","Form","Field","ErrorMessage","Yup","authAPI","Link","jsxDEV","_jsxDEV","LoginForm","onLoginSuccess","onSwitchToSignup","_s","isLoading","setIsLoading","error","setError","userIds","setUserIds","showDashboard","setShowDashboard","validationSchema","object","userId","string","matches","required","password","parentMobile","handleSubmit","values","setSubmitting","response","login","success","_response$data$user","data","token","localStorage","setItem","console","log","user","_id","allUserIds","isAdmin","removeItem","message","err","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","onClick","initialValues","onSubmit","isSubmitting","htmlFor","name","type","placeholder","component","to","disabled","_c","$RefreshReg$"],"sources":["C:/Users/moazz/Downloads/Ecommerce-MLM-Chain-main/Ecommerce-MLM-Chain-main/frontend/frontend/src/components/auth/LoginForm.js"],"sourcesContent":["// // import React, { useState } from 'react';\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // import * as Yup from 'yup';\n// // import { authAPI } from '../../services/api';\n// // import { Link } from 'react-router-dom';\n\n// // const LoginForm = ({ onLoginSuccess, onSwitchToSignup }) => {\n// //   const [isLoading, setIsLoading] = useState(false);\n// //   const [error, setError] = useState('');\n// //   const [userIds, setUserIds] = useState([]);\n// //   const [showDashboard, setShowDashboard] = useState(false);\n\n// //   const validationSchema = Yup.object({\n// //     userId: Yup.string().matches(/^user([1-9]|10)$/, 'User ID must be user1 to user10').required('User ID is required'),\n// //     password: Yup.string().required('Password is required'),\n// //     parentMobile: Yup.string().matches(/^\\+?[\\d\\s\\-\\(\\)]{10,15}$/, 'Please enter a valid mobile number').required('Mobile number is required'),\n// //   });\n\n// //   const handleSubmit = async (values, { setSubmitting }) => {\n// //     setIsLoading(true);\n// //     setError('');\n// //     setUserIds([]);\n// //     setShowDashboard(false);\n// //     try {\n// //       const response = await authAPI.login({\n// //         userId: values.userId,\n// //         password: values.password,\n// //         parentMobile: values.parentMobile,\n// //       });\n// //       if (response.success) {\n// //         setUserIds(response.data.allUserIds);\n// //         setShowDashboard(true);\n// //         if (response.data.isAdmin) {\n// //           localStorage.setItem('isAdmin', 'true');\n// //         } else {\n// //           localStorage.removeItem('isAdmin');\n// //         }\n// //         onLoginSuccess && onLoginSuccess(response.data);\n// //       } else {\n// //         setError(response.message || 'Login failed');\n// //       }\n// //     } catch (err) {\n// //       setError(err.message || 'Login failed. Please try again.');\n// //     } finally {\n// //       setIsLoading(false);\n// //       setSubmitting(false);\n// //     }\n// //   };\n\n// //   if (showDashboard && userIds.length > 0) {\n// //     return (\n// //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //         <div className=\"max-w-md w-full space-y-8\">\n// //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\n// //           <ul className=\"mt-4 mb-6\">\n// //             {userIds.map((id) => (\n// //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\n// //             ))}\n// //           </ul>\n// //           <button onClick={() => setShowDashboard(false)} className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\">Login as another user</button>\n// //         </div>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //       <div className=\"max-w-md w-full space-y-8\">\n// //         <div>\n// //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\n// //           <p className=\"mt-2 text-center text-sm text-gray-600\">Enter your user ID, password, and mobile number</p>\n// //         </div>\n// //         <Formik\n// //           initialValues={{ userId: '', password: '', parentMobile: '' }}\n// //           validationSchema={validationSchema}\n// //           onSubmit={handleSubmit}\n// //         >\n// //           {({ isSubmitting }) => (\n// //             <Form className=\"mt-8 space-y-6\">\n// //               <div>\n// //                 <label htmlFor=\"userId\" className=\"block text-sm font-medium text-gray-700\">User ID</label>\n// //                 <Field id=\"userId\" name=\"userId\" type=\"text\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"user1, user2, ... user10\" />\n// //                 <ErrorMessage name=\"userId\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //               </div>\n// //               <div>\n// //                 <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\n// //                 <Field id=\"password\" name=\"password\" type=\"password\" autoComplete=\"current-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your password\" />\n// //                 <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 <div className=\"mt-2 text-right\">\n// //                   <Link to=\"/forgot-password\" className=\"text-sm text-indigo-600 hover:text-indigo-500\">Forgot your password?</Link>\n// //                 </div>\n// //               </div>\n// //               <div>\n// //                 <label htmlFor=\"parentMobile\" className=\"block text-sm font-medium text-gray-700\">Mobile Number</label>\n// //                 <Field id=\"parentMobile\" name=\"parentMobile\" type=\"tel\" autoComplete=\"tel\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your mobile number\" />\n// //                 <ErrorMessage name=\"parentMobile\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //               </div>\n// //               {error && (\n// //                 <div className=\"rounded-md bg-red-50 p-4\">\n// //                   <div className=\"flex\">\n// //                     <div className=\"ml-3\">\n// //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\n// //                     </div>\n// //                   </div>\n// //                 </div>\n// //               )}\n// //               <div>\n// //                 <button type=\"submit\" disabled={isSubmitting || isLoading} className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\">\n// //                   {isLoading ? 'Signing in...' : 'Sign in'}\n// //                 </button>\n// //               </div>\n// //               <div className=\"text-center\">\n// //                 <button type=\"button\" onClick={onSwitchToSignup} className=\"font-medium text-indigo-600 hover:text-indigo-500\">Don't have an account? Sign up</button>\n// //               </div>\n// //             </Form>\n// //           )}\n// //         </Formik>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default LoginForm; \n\n// import React, { useState } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { authAPI } from '../../services/api';\n// import { Link } from 'react-router-dom';\n\n// const LoginForm = ({ onLoginSuccess, onSwitchToSignup }) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [userIds, setUserIds] = useState([]);\n//   const [showDashboard, setShowDashboard] = useState(false);\n\n//   // âœ… Validation schema\n//   const validationSchema = Yup.object({\n//     userId: Yup.string()\n//       .matches(/^user([1-9]|10)$/, 'User ID must be user1 to user10')\n//       .required('User ID is required'),\n//     password: Yup.string().required('Password is required'),\n//     parentMobile: Yup.string()\n//       .matches(/^\\+?[\\d\\s\\-\\(\\)]{10,15}$/, 'Please enter a valid mobile number')\n//       .required('Mobile number is required'),\n//   });\n\n//   // âœ… Submit handler\n//   const handleSubmit = async (values, { setSubmitting }) => {\n//     setIsLoading(true);\n//     setError('');\n//     setUserIds([]);\n//     setShowDashboard(false);\n\n//     try {\n//       const response = await authAPI.login({\n//         userId: values.userId,\n//         password: values.password,\n//         parentMobile: values.parentMobile,\n//       });\n\n//       if (response.success) {\n//         // ðŸŸ¢ Save token and user details in localStorage\n//         if (response.data.token) {\n//           localStorage.setItem(\"userToken\", response.data.token);\n//         }\n//         if (response.data.user?._id) {\n//           localStorage.setItem(\"userId\", response.data.user._id);\n//         } else {\n//           localStorage.setItem(\"userId\", values.userId); // fallback if _id missing\n//         }\n\n//         setUserIds(response.data.allUserIds);\n//         setShowDashboard(true);\n\n//         // Admin check\n//         if (response.data.isAdmin) {\n//           localStorage.setItem(\"isAdmin\", \"true\");\n//         } else {\n//           localStorage.removeItem(\"isAdmin\");\n//         }\n\n//         onLoginSuccess && onLoginSuccess(response.data);\n//       } else {\n//         setError(response.message || 'Login failed');\n//       }\n//     } catch (err) {\n//       setError(err.message || 'Login failed. Please try again.');\n//     } finally {\n//       setIsLoading(false);\n//       setSubmitting(false);\n//     }\n//   };\n\n//   // âœ… Show all user IDs (if multiple accounts linked to same mobile)\n//   if (showDashboard && userIds.length > 0) {\n//     return (\n//       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//         <div className=\"max-w-md w-full space-y-8\">\n//           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\n//           <ul className=\"mt-4 mb-6\">\n//             {userIds.map((id) => (\n//               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\n//             ))}\n//           </ul>\n//           <button \n//             onClick={() => setShowDashboard(false)} \n//             className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\n//           >\n//             Login as another user\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   // âœ… Login form\n//   return (\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//       <div className=\"max-w-md w-full space-y-8\">\n//         <div>\n//           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n//             Sign in to your account\n//           </h2>\n//           <p className=\"mt-2 text-center text-sm text-gray-600\">\n//             Enter your user ID, password, and mobile number\n//           </p>\n//         </div>\n\n//         <Formik\n//           initialValues={{ userId: '', password: '', parentMobile: '' }}\n//           validationSchema={validationSchema}\n//           onSubmit={handleSubmit}\n//         >\n//           {({ isSubmitting }) => (\n//             <Form className=\"mt-8 space-y-6\">\n//               {/* User ID */}\n//               <div>\n//                 <label htmlFor=\"userId\" className=\"block text-sm font-medium text-gray-700\">\n//                   User ID\n//                 </label>\n//                 <Field\n//                   id=\"userId\"\n//                   name=\"userId\"\n//                   type=\"text\"\n//                   required\n//                   placeholder=\"user1, user2, ... user10\"\n//                   className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm \n//                              focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n//                 />\n//                 <ErrorMessage name=\"userId\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//               </div>\n\n//               {/* Password */}\n//               <div>\n//                 <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n//                   Password\n//                 </label>\n//                 <Field\n//                   id=\"password\"\n//                   name=\"password\"\n//                   type=\"password\"\n//                   required\n//                   placeholder=\"Enter your password\"\n//                   className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm \n//                              focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n//                 />\n//                 <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n\n//                 <div className=\"mt-2 text-right\">\n//                   <Link to=\"/forgot-password\" className=\"text-sm text-indigo-600 hover:text-indigo-500\">\n//                     Forgot your password?\n//                   </Link>\n//                 </div>\n//               </div>\n\n//               {/* Mobile */}\n//               <div>\n//                 <label htmlFor=\"parentMobile\" className=\"block text-sm font-medium text-gray-700\">\n//                   Mobile Number\n//                 </label>\n//                 <Field\n//                   id=\"parentMobile\"\n//                   name=\"parentMobile\"\n//                   type=\"tel\"\n//                   required\n//                   placeholder=\"Enter your mobile number\"\n//                   className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm \n//                              focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n//                 />\n//                 <ErrorMessage name=\"parentMobile\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//               </div>\n\n//               {/* Error message */}\n//               {error && (\n//                 <div className=\"rounded-md bg-red-50 p-4\">\n//                   <div className=\"text-sm font-medium text-red-800\">{error}</div>\n//                 </div>\n//               )}\n\n//               {/* Submit button */}\n//               <div>\n//                 <button\n//                   type=\"submit\"\n//                   disabled={isSubmitting || isLoading}\n//                   className=\"group relative w-full flex justify-center py-2 px-4 \n//                              border border-transparent text-sm font-medium rounded-md \n//                              text-white bg-indigo-600 hover:bg-indigo-700 \n//                              focus:outline-none focus:ring-2 focus:ring-offset-2 \n//                              focus:ring-indigo-500 disabled:opacity-50\"\n//                 >\n//                   {isLoading ? 'Signing in...' : 'Sign in'}\n//                 </button>\n//               </div>\n\n//               {/* Switch to signup */}\n//               <div className=\"text-center\">\n//                 <button\n//                   type=\"button\"\n//                   onClick={onSwitchToSignup}\n//                   className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n//                 >\n//                   Don't have an account? Sign up\n//                 </button>\n//               </div>\n//             </Form>\n//           )}\n//         </Formik>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\n\n\n\n\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { authAPI } from '../../services/api';\nimport { Link } from 'react-router-dom';\n\nconst LoginForm = ({ onLoginSuccess, onSwitchToSignup }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [userIds, setUserIds] = useState([]);\n  const [showDashboard, setShowDashboard] = useState(false);\n\n  // âœ… Validation schema\n  const validationSchema = Yup.object({\n    userId: Yup.string()\n      .matches(/^user([1-9]|10)$/, 'User ID must be user1 to user10')\n      .required('User ID is required'),\n    password: Yup.string().required('Password is required'),\n    parentMobile: Yup.string()\n      .matches(/^\\+?[\\d\\s\\-\\(\\)]{10,15}$/, 'Please enter a valid mobile number')\n      .required('Mobile number is required'),\n  });\n\n  // âœ… Submit handler\n  const handleSubmit = async (values, { setSubmitting }) => {\n    setIsLoading(true);\n    setError('');\n    setUserIds([]);\n    setShowDashboard(false);\n\n    try {\n      const response = await authAPI.login({\n        userId: values.userId,\n        password: values.password,\n        parentMobile: values.parentMobile,\n      });\n\n      if (response.success) {\n        // ðŸŸ¢ Save token and user details in localStorage\n        if (response.data.token) {\n          localStorage.setItem(\"token\", response.data.token); // âœ… fixed key name\n          console.log(\"Saved token:\", response.data.token);\n        }\n\n        if (response.data.user?._id) {\n          localStorage.setItem(\"userId\", response.data.user._id);\n          console.log(\"Saved userId:\", response.data.user._id);\n        } else {\n          localStorage.setItem(\"userId\", values.userId); \n          console.log(\"Saved userId (fallback):\", values.userId);\n        }\n\n        setUserIds(response.data.allUserIds);\n        setShowDashboard(true);\n\n        // Admin check\n        if (response.data.isAdmin) {\n          localStorage.setItem(\"isAdmin\", \"true\");\n        } else {\n          localStorage.removeItem(\"isAdmin\");\n        }\n\n        onLoginSuccess && onLoginSuccess(response.data);\n      } else {\n        setError(response.message || 'Login failed');\n      }\n    } catch (err) {\n      setError(err.message || 'Login failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  // âœ… Show all user IDs (if multiple accounts linked to same mobile)\n  if (showDashboard && userIds.length > 0) {\n    return (\n      <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\n          <ul className=\"mt-4 mb-6\">\n            {userIds.map((id) => (\n              <li key={id} className=\"text-lg text-center py-1\">{id}</li>\n            ))}\n          </ul>\n          <button \n            onClick={() => setShowDashboard(false)} \n            className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\n          >\n            Login as another user\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // âœ… Login form\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Sign in to your account\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Enter your user ID, password, and mobile number\n          </p>\n        </div>\n\n        <Formik\n          initialValues={{ userId: '', password: '', parentMobile: '' }}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form className=\"mt-8 space-y-6\">\n              {/* User ID */}\n              <div>\n                <label htmlFor=\"userId\" className=\"block text-sm font-medium text-gray-700\">\n                  User ID\n                </label>\n                <Field\n                  id=\"userId\"\n                  name=\"userId\"\n                  type=\"text\"\n                  required\n                  placeholder=\"user1, user2, ... user10\"\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm \n                             focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                />\n                <ErrorMessage name=\"userId\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n              </div>\n\n              {/* Password */}\n              <div>\n                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                  Password\n                </label>\n                <Field\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  required\n                  placeholder=\"Enter your password\"\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm \n                             focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                />\n                <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n\n                <div className=\"mt-2 text-right\">\n                  <Link to=\"/forgot-password\" className=\"text-sm text-indigo-600 hover:text-indigo-500\">\n                    Forgot your password?\n                  </Link>\n                </div>\n              </div>\n\n              {/* Mobile */}\n              <div>\n                <label htmlFor=\"parentMobile\" className=\"block text-sm font-medium text-gray-700\">\n                  Mobile Number\n                </label>\n                <Field\n                  id=\"parentMobile\"\n                  name=\"parentMobile\"\n                  type=\"tel\"\n                  required\n                  placeholder=\"Enter your mobile number\"\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm \n                             focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                />\n                <ErrorMessage name=\"parentMobile\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n              </div>\n\n              {/* Error message */}\n              {error && (\n                <div className=\"rounded-md bg-red-50 p-4\">\n                  <div className=\"text-sm font-medium text-red-800\">{error}</div>\n                </div>\n              )}\n\n              {/* Submit button */}\n              <div>\n                <button\n                  type=\"submit\"\n                  disabled={isSubmitting || isLoading}\n                  className=\"group relative w-full flex justify-center py-2 px-4 \n                             border border-transparent text-sm font-medium rounded-md \n                             text-white bg-indigo-600 hover:bg-indigo-700 \n                             focus:outline-none focus:ring-2 focus:ring-offset-2 \n                             focus:ring-indigo-500 disabled:opacity-50\"\n                >\n                  {isLoading ? 'Signing in...' : 'Sign in'}\n                </button>\n              </div>\n\n              {/* Switch to signup */}\n              <div className=\"text-center\">\n                <button\n                  type=\"button\"\n                  onClick={onSwitchToSignup}\n                  className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n                >\n                  Don't have an account? Sign up\n                </button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}