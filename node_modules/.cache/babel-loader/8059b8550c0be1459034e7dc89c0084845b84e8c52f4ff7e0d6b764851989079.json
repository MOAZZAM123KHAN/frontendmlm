{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moazz\\\\Downloads\\\\Ecommerce-MLM-Chain-main\\\\Ecommerce-MLM-Chain-main\\\\frontend\\\\frontend\\\\src\\\\components\\\\dashboard\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { authAPI } from '../../services/api';\n// import { useNavigate } from 'react-router-dom'; // ✅ Import useNavigate\n\n// const UserDashboard = ({ userData, onLogout, onDataUpdate, onUserIdSelect }) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   const navigate = useNavigate(); // ✅ Initialize\n\n//   const validationSchema = Yup.object({\n//     name: Yup.string()\n//       .min(2, 'Name must be at least 2 characters')\n//       .max(50, 'Name cannot exceed 50 characters')\n//       .required('Name is required'),\n//   });\n\n//   const handleCreateNewId = async (values, { setSubmitting, resetForm }) => {\n//     setIsLoading(true);\n//     setError('');\n\n//     try {\n//       const response = await authAPI.signup(userData.mobileNumber, values.name);\n\n//       if (response.success) {\n//         onDataUpdate(response.data);\n//         setShowCreateForm(false);\n//         resetForm();\n//       } else {\n//         setError(response.message || 'Failed to create new ID');\n//       }\n//     } catch (err) {\n//       setError(err.message || 'Failed to create new ID. Please try again.');\n//     } finally {\n//       setIsLoading(false);\n//       setSubmitting(false);\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleDateString('en-US', {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: '2-digit',\n//       minute: '2-digit'\n//     });\n//   };\n\n//   const ids = userData?.allUserIds || [];\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-50\">\n//       {/* Header */}\n//       <div className=\"bg-white shadow\">\n//         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n//           <div className=\"flex justify-between items-center py-6\">\n//             <div>\n//               <h1 className=\"text-3xl font-bold text-gray-900\">Your Dashboard</h1>\n//               <p className=\"mt-1 text-sm text-gray-500\">\n//                 Mobile: {userData?.parentMobile || userData?.mobileNumber || ''} • {ids.length} User ID{ids.length !== 1 ? 's' : ''} created\n//               </p>\n//             </div>\n//             <button\n//               onClick={onLogout}\n//               className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n//             >\n//               Logout\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Main Content */}\n//       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n//         {/* Stats */}\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5\">\n//               <div className=\"flex items-center\">\n//                 <div className=\"flex-shrink-0\">\n//                   <div className=\"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\">\n//                     <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n//                     </svg>\n//                   </div>\n//                 </div>\n//                 <div className=\"ml-5 w-0 flex-1\">\n//                   <dl>\n//                     <dt className=\"text-sm font-medium text-gray-500 truncate\">Total IDs</dt>\n//                     <dd className=\"text-lg font-medium text-gray-900\">{userData.totalIds}/10</dd>\n//                   </dl>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5\">\n//               <div className=\"flex items-center\">\n//                 <div className=\"flex-shrink-0\">\n//                   <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\">\n//                     <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n//                     </svg>\n//                   </div>\n//                 </div>\n//                 <div className=\"ml-5 w-0 flex-1\">\n//                   <dl>\n//                     <dt className=\"text-sm font-medium text-gray-500 truncate\">Can Create More</dt>\n//                     <dd className=\"text-lg font-medium text-gray-900\">\n//                       {userData.canCreateMore ? 'Yes' : 'No'}\n//                     </dd>\n//                   </dl>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5\">\n//               <div className=\"flex items-center\">\n//                 <div className=\"flex-shrink-0\">\n//                   <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\">\n//                     <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n//                     </svg>\n//                   </div>\n//                 </div>\n//                 <div className=\"ml-5 w-0 flex-1\">\n//                   <dl>\n//                     <dt className=\"text-sm font-medium text-gray-500 truncate\">Last Login</dt>\n//                     <dd className=\"text-sm font-medium text-gray-900\">\n//                       {formatDate(new Date())}\n//                     </dd>\n//                   </dl>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Create New ID Button */}\n//         {userData.canCreateMore && (\n//           <div className=\"mb-6\">\n//             <button\n//               onClick={() => setShowCreateForm(!showCreateForm)}\n//               className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n//             >\n//               {showCreateForm ? 'Cancel' : 'Create New ID'}\n//             </button>\n//           </div>\n//         )}\n\n//         {/* Create New ID Form */}\n//         {showCreateForm && userData.canCreateMore && (\n//           <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\n//             <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New ID</h3>\n//             <Formik\n//               initialValues={{ name: '' }}\n//               validationSchema={validationSchema}\n//               onSubmit={handleCreateNewId}\n//             >\n//               {({ isSubmitting }) => (\n//                 <Form className=\"space-y-4\">\n//                   <div>\n//                     <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n//                       Name for new ID\n//                     </label>\n//                     <Field\n//                       id=\"name\"\n//                       name=\"name\"\n//                       type=\"text\"\n//                       className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                       placeholder=\"Enter name for new ID\"\n//                     />\n//                     <ErrorMessage\n//                       name=\"name\"\n//                       component=\"div\"\n//                       className=\"mt-1 text-sm text-red-600\"\n//                     />\n//                   </div>\n\n//                   {error && (\n//                     <div className=\"rounded-md bg-red-50 p-4\">\n//                       <div className=\"flex\">\n//                         <div className=\"ml-3\">\n//                           <h3 className=\"text-sm font-medium text-red-800\">\n//                             {error}\n//                           </h3>\n//                         </div>\n//                       </div>\n//                     </div>\n//                   )}\n\n//                   <div className=\"flex justify-end space-x-3\">\n//                     <button\n//                       type=\"button\"\n//                       onClick={() => setShowCreateForm(false)}\n//                       className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\"\n//                     >\n//                       Cancel\n//                     </button>\n//                     <button\n//                       type=\"submit\"\n//                       disabled={isSubmitting || isLoading}\n//                       className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\"\n//                     >\n//                       {isLoading ? 'Creating...' : 'Create ID'}\n//                     </button>\n//                   </div>\n//                 </Form>\n//               )}\n//             </Formik>\n//           </div>\n//         )}\n\n//         {/* IDs List */}\n//         <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n//           <div className=\"px-4 py-5 sm:px-6\">\n//             <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n//               Your User IDs\n//             </h3>\n//             <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n//               All user IDs associated with your mobile number\n//             </p>\n//           </div>\n//           <ul className=\"divide-y divide-gray-200\">\n//             {ids.map((userId, index) => (\n//               <li key={userId} className=\"px-4 py-4 sm:px-6 cursor-pointer hover:bg-indigo-50\">\n//                 <div className=\"flex items-center justify-between\">\n//                   <div className=\"flex items-center\">\n//                     <div className=\"flex-shrink-0\">\n//                       <div className=\"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n//                         <span className=\"text-indigo-600 font-medium text-sm\">\n//                           {index + 1}\n//                         </span>\n//                       </div>\n//                     </div>\n//                     <div className=\"ml-4\">\n//                       <div className=\"text-sm font-medium text-gray-900\">\n//                         {userId}\n//                       </div>\n//                     </div>\n//                   </div>\n//                   <button\n//                     className=\"ml-4 px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\"\n//                     onClick={(e) => {\n//                       e.stopPropagation();\n//                       if (onUserIdSelect) onUserIdSelect(userId); // optional\n//                     }}\n//                   >\n//                     Enter\n//                   </button>\n//                 </div>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n\n//         {/* Empty State */}\n//         {ids.length === 0 && (\n//           <div className=\"text-center py-12\">\n//             <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n//               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n//             </svg>\n//             <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No User IDs yet</h3>\n//             <p className=\"mt-1 text-sm text-gray-500\">\n//               Get started by creating your first user ID.\n//             </p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UserDashboard;\n\n// import React, { useState } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { authAPI } from '../../services/api';\n// import { useNavigate } from 'react-router-dom';\n\n// const UserDashboard = ({ userData, onLogout, onDataUpdate }) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   const navigate = useNavigate();\n\n//   const validationSchema = Yup.object({\n//     name: Yup.string()\n//       .min(2, 'Name must be at least 2 characters')\n//       .max(50, 'Name cannot exceed 50 characters')\n//       .required('Name is required'),\n//   });\n\n//   const handleCreateNewId = async (values, { setSubmitting, resetForm }) => {\n//     setIsLoading(true);\n//     setError('');\n\n//     try {\n//       const response = await authAPI.signup(userData.mobileNumber, values.name);\n\n//       if (response.success) {\n//         onDataUpdate(response.data);\n//         setShowCreateForm(false);\n//         resetForm();\n//       } else {\n//         setError(response.message || 'Failed to create new ID');\n//       }\n//     } catch (err) {\n//       setError(err.message || 'Failed to create new ID. Please try again.');\n//     } finally {\n//       setIsLoading(false);\n//       setSubmitting(false);\n//     }\n//   };\n\n//   // ✅ New Enter handler\n//   const handleEnter = (selectedUserId) => {\n//     if (!selectedUserId) {\n//       alert(\"Please select a user ID first\");\n//       return;\n//     }\n\n//     // Replace with actual token from backend if available\n//     const token = \"dummy-token\";\n\n//     localStorage.setItem(\"token\", token);\n//     localStorage.setItem(\n//       \"authData\",\n//       JSON.stringify({\n//         userId: selectedUserId,\n//         token: token\n//       })\n//     );\n\n//     console.log(\"Saved auth data:\", {\n//       userId: selectedUserId,\n//       token\n//     });\n\n//     navigate(\"/wallet\");\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleDateString('en-US', {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: '2-digit',\n//       minute: '2-digit'\n//     });\n//   };\n\n//   const ids = userData?.allUserIds || [];\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-50\">\n//       {/* Header */}\n//       <div className=\"bg-white shadow\">\n//         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n//           <div className=\"flex justify-between items-center py-6\">\n//             <div>\n//               <h1 className=\"text-3xl font-bold text-gray-900\">Your Dashboard</h1>\n//               <p className=\"mt-1 text-sm text-gray-500\">\n//                 Mobile: {userData?.parentMobile || userData?.mobileNumber || ''} • {ids.length} User ID{ids.length !== 1 ? 's' : ''} created\n//               </p>\n//             </div>\n//             <button\n//               onClick={onLogout}\n//               className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n//             >\n//               Logout\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Main Content */}\n//       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n//         {/* Stats */}\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5 flex items-center\">\n//               <div className=\"flex-shrink-0\">\n//                 <div className=\"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\">\n//                   <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n//                   </svg>\n//                 </div>\n//               </div>\n//               <div className=\"ml-5\">\n//                 <dt className=\"text-sm font-medium text-gray-500 truncate\">Total IDs</dt>\n//                 <dd className=\"text-lg font-medium text-gray-900\">{userData.totalIds}/10</dd>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5 flex items-center\">\n//               <div className=\"flex-shrink-0\">\n//                 <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\">\n//                   <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n//                   </svg>\n//                 </div>\n//               </div>\n//               <div className=\"ml-5\">\n//                 <dt className=\"text-sm font-medium text-gray-500 truncate\">Can Create More</dt>\n//                 <dd className=\"text-lg font-medium text-gray-900\">{userData.canCreateMore ? 'Yes' : 'No'}</dd>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5 flex items-center\">\n//               <div className=\"flex-shrink-0\">\n//                 <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\">\n//                   <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n//                   </svg>\n//                 </div>\n//               </div>\n//               <div className=\"ml-5\">\n//                 <dt className=\"text-sm font-medium text-gray-500 truncate\">Last Login</dt>\n//                 <dd className=\"text-sm font-medium text-gray-900\">{formatDate(new Date())}</dd>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Create New ID Button */}\n//         {userData.canCreateMore && (\n//           <div className=\"mb-6\">\n//             <button\n//               onClick={() => setShowCreateForm(!showCreateForm)}\n//               className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n//             >\n//               {showCreateForm ? 'Cancel' : 'Create New ID'}\n//             </button>\n//           </div>\n//         )}\n\n//         {/* Create New ID Form */}\n//         {showCreateForm && userData.canCreateMore && (\n//           <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\n//             <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New ID</h3>\n//             <Formik\n//               initialValues={{ name: '' }}\n//               validationSchema={validationSchema}\n//               onSubmit={handleCreateNewId}\n//             >\n//               {({ isSubmitting }) => (\n//                 <Form className=\"space-y-4\">\n//                   <div>\n//                     <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n//                       Name for new ID\n//                     </label>\n//                     <Field\n//                       id=\"name\"\n//                       name=\"name\"\n//                       type=\"text\"\n//                       className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                       placeholder=\"Enter name for new ID\"\n//                     />\n//                     <ErrorMessage\n//                       name=\"name\"\n//                       component=\"div\"\n//                       className=\"mt-1 text-sm text-red-600\"\n//                     />\n//                   </div>\n\n//                   {error && (\n//                     <div className=\"rounded-md bg-red-50 p-4\">\n//                       <div className=\"ml-3 text-sm font-medium text-red-800\">{error}</div>\n//                     </div>\n//                   )}\n\n//                   <div className=\"flex justify-end space-x-3\">\n//                     <button\n//                       type=\"button\"\n//                       onClick={() => setShowCreateForm(false)}\n//                       className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\"\n//                     >\n//                       Cancel\n//                     </button>\n//                     <button\n//                       type=\"submit\"\n//                       disabled={isSubmitting || isLoading}\n//                       className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\"\n//                     >\n//                       {isLoading ? 'Creating...' : 'Create ID'}\n//                     </button>\n//                   </div>\n//                 </Form>\n//               )}\n//             </Formik>\n//           </div>\n//         )}\n\n//         {/* IDs List */}\n//         <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n//           <div className=\"px-4 py-5 sm:px-6\">\n//             <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Your User IDs</h3>\n//             <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n//               All user IDs associated with your mobile number\n//             </p>\n//           </div>\n//           <ul className=\"divide-y divide-gray-200\">\n//             {ids.map((userId, index) => (\n//               <li key={userId} className=\"px-4 py-4 sm:px-6 hover:bg-indigo-50 flex justify-between items-center\">\n//                 <div className=\"flex items-center\">\n//                   <div className=\"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n//                     <span className=\"text-indigo-600 font-medium text-sm\">{index + 1}</span>\n//                   </div>\n//                   <div className=\"ml-4 text-sm font-medium text-gray-900\">{userId}</div>\n//                 </div>\n//                 <button\n//                   className=\"px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\"\n//                   onClick={() => handleEnter(userId)}\n//                 >\n//                   Enter\n//                 </button>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n\n//         {ids.length === 0 && (\n//           <div className=\"text-center py-12\">\n//             <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n//               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n//             </svg>\n//             <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No User IDs yet</h3>\n//             <p className=\"mt-1 text-sm text-gray-500\">Get started by creating your first user ID.</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UserDashboard;\n\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { authAPI } from '../../services/api';\nimport { useNavigate } from 'react-router-dom'; // ✅ Import useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = ({\n  userData,\n  onLogout,\n  onDataUpdate,\n  onUserIdSelect\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const navigate = useNavigate(); // ✅ Initialize navigate\n\n  const validationSchema = Yup.object({\n    name: Yup.string().min(2, 'Name must be at least 2 characters').max(50, 'Name cannot exceed 50 characters').required('Name is required')\n  });\n  const handleCreateNewId = async (values, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const response = await authAPI.signup(userData.mobileNumber, values.name);\n      if (response.success) {\n        onDataUpdate(response.data);\n        setShowCreateForm(false);\n        resetForm();\n      } else {\n        setError(response.message || 'Failed to create new ID');\n      }\n    } catch (err) {\n      setError(err.message || 'Failed to create new ID. Please try again.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const ids = (userData === null || userData === void 0 ? void 0 : userData.allUserIds) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center py-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-3xl font-bold text-gray-900\",\n              children: \"Your Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-gray-500\",\n              children: [\"Mobile: \", (userData === null || userData === void 0 ? void 0 : userData.parentMobile) || (userData === null || userData === void 0 ? void 0 : userData.mobileNumber) || '', \" \\u2022 \", ids.length, \" User ID\", ids.length !== 1 ? 's' : '', \" created\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onLogout,\n            className: \"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white overflow-hidden shadow rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-5 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-5 h-5 text-white\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-5 flex-1\",\n              children: /*#__PURE__*/_jsxDEV(\"dl\", {\n                children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n                  className: \"text-sm font-medium text-gray-500 truncate\",\n                  children: \"Total IDs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 645,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                  className: \"text-lg font-medium text-gray-900\",\n                  children: [userData.totalIds, \"/10\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white overflow-hidden shadow rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-5 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-5 h-5 text-white\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-5 flex-1\",\n              children: /*#__PURE__*/_jsxDEV(\"dl\", {\n                children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n                  className: \"text-sm font-medium text-gray-500 truncate\",\n                  children: \"Can Create More\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                  className: \"text-lg font-medium text-gray-900\",\n                  children: userData.canCreateMore ? 'Yes' : 'No'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white overflow-hidden shadow rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-5 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-5 h-5 text-white\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-5 flex-1\",\n              children: /*#__PURE__*/_jsxDEV(\"dl\", {\n                children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n                  className: \"text-sm font-medium text-gray-500 truncate\",\n                  children: \"Last Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                  className: \"text-sm font-medium text-gray-900\",\n                  children: formatDate(new Date())\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this), userData.canCreateMore && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCreateForm(!showCreateForm),\n          className: \"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\",\n          children: showCreateForm ? 'Cancel' : 'Create New ID'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 11\n      }, this), showCreateForm && userData.canCreateMore && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-4\",\n          children: \"Create New ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            name: ''\n          },\n          validationSchema: validationSchema,\n          onSubmit: handleCreateNewId,\n          children: ({\n            isSubmitting\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Name for new ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"name\",\n                name: \"name\",\n                type: \"text\",\n                className: \"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n                placeholder: \"Enter name for new ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"name\",\n                component: \"div\",\n                className: \"mt-1 text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 19\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rounded-md bg-red-50 p-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"text-sm font-medium text-red-800\",\n                    children: error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 734,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setShowCreateForm(false),\n                className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: isSubmitting || isLoading,\n                className: \"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\",\n                children: isLoading ? 'Creating...' : 'Create ID'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 750,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow overflow-hidden sm:rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-5 sm:px-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg leading-6 font-medium text-gray-900\",\n            children: \"Your User IDs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 max-w-2xl text-sm text-gray-500\",\n            children: \"All user IDs associated with your mobile number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"divide-y divide-gray-200\",\n          children: ids.map((userId, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"px-4 py-4 sm:px-6 cursor-pointer hover:bg-indigo-50\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-shrink-0\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-indigo-600 font-medium text-sm\",\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 781,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 780,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 779,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm font-medium text-gray-900\",\n                    children: userId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 787,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"ml-4 px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\",\n                onClick: e => {\n                  e.stopPropagation();\n\n                  // ✅ Save token & userId to localStorage\n                  const token = (userData === null || userData === void 0 ? void 0 : userData.token) || \"dummy-token\"; // Replace with actual token if available\n                  localStorage.setItem(\"token\", token);\n                  localStorage.setItem(\"authData\", JSON.stringify({\n                    userId,\n                    token\n                  }));\n\n                  // Optional: call your onUserIdSelect function\n                  if (onUserIdSelect) onUserIdSelect(userId);\n\n                  // ✅ Navigate to home or wallet\n                  navigate(\"/\"); // or navigate(\"/wallet\")\n                },\n                children: \"Enter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 17\n            }, this)\n          }, userId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 9\n      }, this), ids.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"mx-auto h-12 w-12 text-gray-400\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-2 text-sm font-medium text-gray-900\",\n          children: \"No User IDs yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-gray-500\",\n          children: \"Get started by creating your first user ID.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 611,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"Pmp4M2/enUexNnoil2JmGJT2Wb8=\", false, function () {\n  return [useNavigate];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","Formik","Form","Field","ErrorMessage","Yup","authAPI","useNavigate","jsxDEV","_jsxDEV","UserDashboard","userData","onLogout","onDataUpdate","onUserIdSelect","_s","isLoading","setIsLoading","error","setError","showCreateForm","setShowCreateForm","navigate","validationSchema","object","name","string","min","max","required","handleCreateNewId","values","setSubmitting","resetForm","response","signup","mobileNumber","success","data","message","err","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","ids","allUserIds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","parentMobile","length","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","totalIds","canCreateMore","initialValues","onSubmit","isSubmitting","htmlFor","id","type","placeholder","component","disabled","map","userId","index","e","stopPropagation","token","localStorage","setItem","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/moazz/Downloads/Ecommerce-MLM-Chain-main/Ecommerce-MLM-Chain-main/frontend/frontend/src/components/dashboard/UserDashboard.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { authAPI } from '../../services/api';\n// import { useNavigate } from 'react-router-dom'; // ✅ Import useNavigate\n\n// const UserDashboard = ({ userData, onLogout, onDataUpdate, onUserIdSelect }) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   const navigate = useNavigate(); // ✅ Initialize\n\n//   const validationSchema = Yup.object({\n//     name: Yup.string()\n//       .min(2, 'Name must be at least 2 characters')\n//       .max(50, 'Name cannot exceed 50 characters')\n//       .required('Name is required'),\n//   });\n\n//   const handleCreateNewId = async (values, { setSubmitting, resetForm }) => {\n//     setIsLoading(true);\n//     setError('');\n\n//     try {\n//       const response = await authAPI.signup(userData.mobileNumber, values.name);\n      \n//       if (response.success) {\n//         onDataUpdate(response.data);\n//         setShowCreateForm(false);\n//         resetForm();\n//       } else {\n//         setError(response.message || 'Failed to create new ID');\n//       }\n//     } catch (err) {\n//       setError(err.message || 'Failed to create new ID. Please try again.');\n//     } finally {\n//       setIsLoading(false);\n//       setSubmitting(false);\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleDateString('en-US', {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: '2-digit',\n//       minute: '2-digit'\n//     });\n//   };\n\n//   const ids = userData?.allUserIds || [];\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-50\">\n//       {/* Header */}\n//       <div className=\"bg-white shadow\">\n//         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n//           <div className=\"flex justify-between items-center py-6\">\n//             <div>\n//               <h1 className=\"text-3xl font-bold text-gray-900\">Your Dashboard</h1>\n//               <p className=\"mt-1 text-sm text-gray-500\">\n//                 Mobile: {userData?.parentMobile || userData?.mobileNumber || ''} • {ids.length} User ID{ids.length !== 1 ? 's' : ''} created\n//               </p>\n//             </div>\n//             <button\n//               onClick={onLogout}\n//               className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n//             >\n//               Logout\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Main Content */}\n//       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n//         {/* Stats */}\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5\">\n//               <div className=\"flex items-center\">\n//                 <div className=\"flex-shrink-0\">\n//                   <div className=\"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\">\n//                     <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n//                     </svg>\n//                   </div>\n//                 </div>\n//                 <div className=\"ml-5 w-0 flex-1\">\n//                   <dl>\n//                     <dt className=\"text-sm font-medium text-gray-500 truncate\">Total IDs</dt>\n//                     <dd className=\"text-lg font-medium text-gray-900\">{userData.totalIds}/10</dd>\n//                   </dl>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5\">\n//               <div className=\"flex items-center\">\n//                 <div className=\"flex-shrink-0\">\n//                   <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\">\n//                     <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n//                     </svg>\n//                   </div>\n//                 </div>\n//                 <div className=\"ml-5 w-0 flex-1\">\n//                   <dl>\n//                     <dt className=\"text-sm font-medium text-gray-500 truncate\">Can Create More</dt>\n//                     <dd className=\"text-lg font-medium text-gray-900\">\n//                       {userData.canCreateMore ? 'Yes' : 'No'}\n//                     </dd>\n//                   </dl>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5\">\n//               <div className=\"flex items-center\">\n//                 <div className=\"flex-shrink-0\">\n//                   <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\">\n//                     <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n//                     </svg>\n//                   </div>\n//                 </div>\n//                 <div className=\"ml-5 w-0 flex-1\">\n//                   <dl>\n//                     <dt className=\"text-sm font-medium text-gray-500 truncate\">Last Login</dt>\n//                     <dd className=\"text-sm font-medium text-gray-900\">\n//                       {formatDate(new Date())}\n//                     </dd>\n//                   </dl>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Create New ID Button */}\n//         {userData.canCreateMore && (\n//           <div className=\"mb-6\">\n//             <button\n//               onClick={() => setShowCreateForm(!showCreateForm)}\n//               className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n//             >\n//               {showCreateForm ? 'Cancel' : 'Create New ID'}\n//             </button>\n//           </div>\n//         )}\n\n//         {/* Create New ID Form */}\n//         {showCreateForm && userData.canCreateMore && (\n//           <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\n//             <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New ID</h3>\n//             <Formik\n//               initialValues={{ name: '' }}\n//               validationSchema={validationSchema}\n//               onSubmit={handleCreateNewId}\n//             >\n//               {({ isSubmitting }) => (\n//                 <Form className=\"space-y-4\">\n//                   <div>\n//                     <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n//                       Name for new ID\n//                     </label>\n//                     <Field\n//                       id=\"name\"\n//                       name=\"name\"\n//                       type=\"text\"\n//                       className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                       placeholder=\"Enter name for new ID\"\n//                     />\n//                     <ErrorMessage\n//                       name=\"name\"\n//                       component=\"div\"\n//                       className=\"mt-1 text-sm text-red-600\"\n//                     />\n//                   </div>\n\n//                   {error && (\n//                     <div className=\"rounded-md bg-red-50 p-4\">\n//                       <div className=\"flex\">\n//                         <div className=\"ml-3\">\n//                           <h3 className=\"text-sm font-medium text-red-800\">\n//                             {error}\n//                           </h3>\n//                         </div>\n//                       </div>\n//                     </div>\n//                   )}\n\n//                   <div className=\"flex justify-end space-x-3\">\n//                     <button\n//                       type=\"button\"\n//                       onClick={() => setShowCreateForm(false)}\n//                       className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\"\n//                     >\n//                       Cancel\n//                     </button>\n//                     <button\n//                       type=\"submit\"\n//                       disabled={isSubmitting || isLoading}\n//                       className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\"\n//                     >\n//                       {isLoading ? 'Creating...' : 'Create ID'}\n//                     </button>\n//                   </div>\n//                 </Form>\n//               )}\n//             </Formik>\n//           </div>\n//         )}\n\n//         {/* IDs List */}\n//         <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n//           <div className=\"px-4 py-5 sm:px-6\">\n//             <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n//               Your User IDs\n//             </h3>\n//             <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n//               All user IDs associated with your mobile number\n//             </p>\n//           </div>\n//           <ul className=\"divide-y divide-gray-200\">\n//             {ids.map((userId, index) => (\n//               <li key={userId} className=\"px-4 py-4 sm:px-6 cursor-pointer hover:bg-indigo-50\">\n//                 <div className=\"flex items-center justify-between\">\n//                   <div className=\"flex items-center\">\n//                     <div className=\"flex-shrink-0\">\n//                       <div className=\"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n//                         <span className=\"text-indigo-600 font-medium text-sm\">\n//                           {index + 1}\n//                         </span>\n//                       </div>\n//                     </div>\n//                     <div className=\"ml-4\">\n//                       <div className=\"text-sm font-medium text-gray-900\">\n//                         {userId}\n//                       </div>\n//                     </div>\n//                   </div>\n//                   <button\n//                     className=\"ml-4 px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\"\n//                     onClick={(e) => {\n//                       e.stopPropagation();\n//                       if (onUserIdSelect) onUserIdSelect(userId); // optional\n//                     }}\n//                   >\n//                     Enter\n//                   </button>\n//                 </div>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n\n//         {/* Empty State */}\n//         {ids.length === 0 && (\n//           <div className=\"text-center py-12\">\n//             <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n//               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n//             </svg>\n//             <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No User IDs yet</h3>\n//             <p className=\"mt-1 text-sm text-gray-500\">\n//               Get started by creating your first user ID.\n//             </p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UserDashboard;\n\n\n// import React, { useState } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { authAPI } from '../../services/api';\n// import { useNavigate } from 'react-router-dom';\n\n// const UserDashboard = ({ userData, onLogout, onDataUpdate }) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   const navigate = useNavigate();\n\n//   const validationSchema = Yup.object({\n//     name: Yup.string()\n//       .min(2, 'Name must be at least 2 characters')\n//       .max(50, 'Name cannot exceed 50 characters')\n//       .required('Name is required'),\n//   });\n\n//   const handleCreateNewId = async (values, { setSubmitting, resetForm }) => {\n//     setIsLoading(true);\n//     setError('');\n\n//     try {\n//       const response = await authAPI.signup(userData.mobileNumber, values.name);\n\n//       if (response.success) {\n//         onDataUpdate(response.data);\n//         setShowCreateForm(false);\n//         resetForm();\n//       } else {\n//         setError(response.message || 'Failed to create new ID');\n//       }\n//     } catch (err) {\n//       setError(err.message || 'Failed to create new ID. Please try again.');\n//     } finally {\n//       setIsLoading(false);\n//       setSubmitting(false);\n//     }\n//   };\n\n//   // ✅ New Enter handler\n//   const handleEnter = (selectedUserId) => {\n//     if (!selectedUserId) {\n//       alert(\"Please select a user ID first\");\n//       return;\n//     }\n\n//     // Replace with actual token from backend if available\n//     const token = \"dummy-token\";\n\n//     localStorage.setItem(\"token\", token);\n//     localStorage.setItem(\n//       \"authData\",\n//       JSON.stringify({\n//         userId: selectedUserId,\n//         token: token\n//       })\n//     );\n\n//     console.log(\"Saved auth data:\", {\n//       userId: selectedUserId,\n//       token\n//     });\n\n//     navigate(\"/wallet\");\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleDateString('en-US', {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: '2-digit',\n//       minute: '2-digit'\n//     });\n//   };\n\n//   const ids = userData?.allUserIds || [];\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-50\">\n//       {/* Header */}\n//       <div className=\"bg-white shadow\">\n//         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n//           <div className=\"flex justify-between items-center py-6\">\n//             <div>\n//               <h1 className=\"text-3xl font-bold text-gray-900\">Your Dashboard</h1>\n//               <p className=\"mt-1 text-sm text-gray-500\">\n//                 Mobile: {userData?.parentMobile || userData?.mobileNumber || ''} • {ids.length} User ID{ids.length !== 1 ? 's' : ''} created\n//               </p>\n//             </div>\n//             <button\n//               onClick={onLogout}\n//               className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n//             >\n//               Logout\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Main Content */}\n//       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n//         {/* Stats */}\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5 flex items-center\">\n//               <div className=\"flex-shrink-0\">\n//                 <div className=\"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\">\n//                   <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n//                   </svg>\n//                 </div>\n//               </div>\n//               <div className=\"ml-5\">\n//                 <dt className=\"text-sm font-medium text-gray-500 truncate\">Total IDs</dt>\n//                 <dd className=\"text-lg font-medium text-gray-900\">{userData.totalIds}/10</dd>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5 flex items-center\">\n//               <div className=\"flex-shrink-0\">\n//                 <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\">\n//                   <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n//                   </svg>\n//                 </div>\n//               </div>\n//               <div className=\"ml-5\">\n//                 <dt className=\"text-sm font-medium text-gray-500 truncate\">Can Create More</dt>\n//                 <dd className=\"text-lg font-medium text-gray-900\">{userData.canCreateMore ? 'Yes' : 'No'}</dd>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n//             <div className=\"p-5 flex items-center\">\n//               <div className=\"flex-shrink-0\">\n//                 <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\">\n//                   <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n//                   </svg>\n//                 </div>\n//               </div>\n//               <div className=\"ml-5\">\n//                 <dt className=\"text-sm font-medium text-gray-500 truncate\">Last Login</dt>\n//                 <dd className=\"text-sm font-medium text-gray-900\">{formatDate(new Date())}</dd>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Create New ID Button */}\n//         {userData.canCreateMore && (\n//           <div className=\"mb-6\">\n//             <button\n//               onClick={() => setShowCreateForm(!showCreateForm)}\n//               className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n//             >\n//               {showCreateForm ? 'Cancel' : 'Create New ID'}\n//             </button>\n//           </div>\n//         )}\n\n//         {/* Create New ID Form */}\n//         {showCreateForm && userData.canCreateMore && (\n//           <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\n//             <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New ID</h3>\n//             <Formik\n//               initialValues={{ name: '' }}\n//               validationSchema={validationSchema}\n//               onSubmit={handleCreateNewId}\n//             >\n//               {({ isSubmitting }) => (\n//                 <Form className=\"space-y-4\">\n//                   <div>\n//                     <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n//                       Name for new ID\n//                     </label>\n//                     <Field\n//                       id=\"name\"\n//                       name=\"name\"\n//                       type=\"text\"\n//                       className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                       placeholder=\"Enter name for new ID\"\n//                     />\n//                     <ErrorMessage\n//                       name=\"name\"\n//                       component=\"div\"\n//                       className=\"mt-1 text-sm text-red-600\"\n//                     />\n//                   </div>\n\n//                   {error && (\n//                     <div className=\"rounded-md bg-red-50 p-4\">\n//                       <div className=\"ml-3 text-sm font-medium text-red-800\">{error}</div>\n//                     </div>\n//                   )}\n\n//                   <div className=\"flex justify-end space-x-3\">\n//                     <button\n//                       type=\"button\"\n//                       onClick={() => setShowCreateForm(false)}\n//                       className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\"\n//                     >\n//                       Cancel\n//                     </button>\n//                     <button\n//                       type=\"submit\"\n//                       disabled={isSubmitting || isLoading}\n//                       className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\"\n//                     >\n//                       {isLoading ? 'Creating...' : 'Create ID'}\n//                     </button>\n//                   </div>\n//                 </Form>\n//               )}\n//             </Formik>\n//           </div>\n//         )}\n\n//         {/* IDs List */}\n//         <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n//           <div className=\"px-4 py-5 sm:px-6\">\n//             <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Your User IDs</h3>\n//             <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n//               All user IDs associated with your mobile number\n//             </p>\n//           </div>\n//           <ul className=\"divide-y divide-gray-200\">\n//             {ids.map((userId, index) => (\n//               <li key={userId} className=\"px-4 py-4 sm:px-6 hover:bg-indigo-50 flex justify-between items-center\">\n//                 <div className=\"flex items-center\">\n//                   <div className=\"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n//                     <span className=\"text-indigo-600 font-medium text-sm\">{index + 1}</span>\n//                   </div>\n//                   <div className=\"ml-4 text-sm font-medium text-gray-900\">{userId}</div>\n//                 </div>\n//                 <button\n//                   className=\"px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\"\n//                   onClick={() => handleEnter(userId)}\n//                 >\n//                   Enter\n//                 </button>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n\n//         {ids.length === 0 && (\n//           <div className=\"text-center py-12\">\n//             <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n//               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n//             </svg>\n//             <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No User IDs yet</h3>\n//             <p className=\"mt-1 text-sm text-gray-500\">Get started by creating your first user ID.</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UserDashboard;\n\n\n\n\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { authAPI } from '../../services/api';\nimport { useNavigate } from 'react-router-dom'; // ✅ Import useNavigate\n\nconst UserDashboard = ({ userData, onLogout, onDataUpdate, onUserIdSelect }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showCreateForm, setShowCreateForm] = useState(false);\n\n  const navigate = useNavigate(); // ✅ Initialize navigate\n\n  const validationSchema = Yup.object({\n    name: Yup.string()\n      .min(2, 'Name must be at least 2 characters')\n      .max(50, 'Name cannot exceed 50 characters')\n      .required('Name is required'),\n  });\n\n  const handleCreateNewId = async (values, { setSubmitting, resetForm }) => {\n    setIsLoading(true);\n    setError('');\n\n    try {\n      const response = await authAPI.signup(userData.mobileNumber, values.name);\n      \n      if (response.success) {\n        onDataUpdate(response.data);\n        setShowCreateForm(false);\n        resetForm();\n      } else {\n        setError(response.message || 'Failed to create new ID');\n      }\n    } catch (err) {\n      setError(err.message || 'Failed to create new ID. Please try again.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const ids = userData?.allUserIds || [];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-6\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">Your Dashboard</h1>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Mobile: {userData?.parentMobile || userData?.mobileNumber || ''} • {ids.length} User ID{ids.length !== 1 ? 's' : ''} created\n              </p>\n            </div>\n            <button\n              onClick={onLogout}\n              className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n          <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div className=\"p-5 flex items-center\">\n              <div className=\"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                </svg>\n              </div>\n              <div className=\"ml-5 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">Total IDs</dt>\n                  <dd className=\"text-lg font-medium text-gray-900\">{userData.totalIds}/10</dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div className=\"p-5 flex items-center\">\n              <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n              </div>\n              <div className=\"ml-5 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">Can Create More</dt>\n                  <dd className=\"text-lg font-medium text-gray-900\">\n                    {userData.canCreateMore ? 'Yes' : 'No'}\n                  </dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div className=\"p-5 flex items-center\">\n              <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n              </div>\n              <div className=\"ml-5 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">Last Login</dt>\n                  <dd className=\"text-sm font-medium text-gray-900\">\n                    {formatDate(new Date())}\n                  </dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Create New ID Button */}\n        {userData.canCreateMore && (\n          <div className=\"mb-6\">\n            <button\n              onClick={() => setShowCreateForm(!showCreateForm)}\n              className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium\"\n            >\n              {showCreateForm ? 'Cancel' : 'Create New ID'}\n            </button>\n          </div>\n        )}\n\n        {/* Create New ID Form */}\n        {showCreateForm && userData.canCreateMore && (\n          <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New ID</h3>\n            <Formik\n              initialValues={{ name: '' }}\n              validationSchema={validationSchema}\n              onSubmit={handleCreateNewId}\n            >\n              {({ isSubmitting }) => (\n                <Form className=\"space-y-4\">\n                  <div>\n                    <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n                      Name for new ID\n                    </label>\n                    <Field\n                      id=\"name\"\n                      name=\"name\"\n                      type=\"text\"\n                      className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                      placeholder=\"Enter name for new ID\"\n                    />\n                    <ErrorMessage\n                      name=\"name\"\n                      component=\"div\"\n                      className=\"mt-1 text-sm text-red-600\"\n                    />\n                  </div>\n\n                  {error && (\n                    <div className=\"rounded-md bg-red-50 p-4\">\n                      <div className=\"flex\">\n                        <div className=\"ml-3\">\n                          <h3 className=\"text-sm font-medium text-red-800\">\n                            {error}\n                          </h3>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"flex justify-end space-x-3\">\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowCreateForm(false)}\n                      className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md text-sm font-medium\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      disabled={isSubmitting || isLoading}\n                      className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm font-medium disabled:opacity-50\"\n                    >\n                      {isLoading ? 'Creating...' : 'Create ID'}\n                    </button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        )}\n\n        {/* IDs List */}\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n          <div className=\"px-4 py-5 sm:px-6\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n              Your User IDs\n            </h3>\n            <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n              All user IDs associated with your mobile number\n            </p>\n          </div>\n          <ul className=\"divide-y divide-gray-200\">\n            {ids.map((userId, index) => (\n              <li key={userId} className=\"px-4 py-4 sm:px-6 cursor-pointer hover:bg-indigo-50\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n                        <span className=\"text-indigo-600 font-medium text-sm\">\n                          {index + 1}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"ml-4\">\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {userId}\n                      </div>\n                    </div>\n                  </div>\n                  <button\n                    className=\"ml-4 px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n\n                      // ✅ Save token & userId to localStorage\n                      const token = userData?.token || \"dummy-token\"; // Replace with actual token if available\n                      localStorage.setItem(\"token\", token);\n                      localStorage.setItem(\"authData\", JSON.stringify({\n                        userId,\n                        token\n                      }));\n\n                      // Optional: call your onUserIdSelect function\n                      if (onUserIdSelect) onUserIdSelect(userId);\n\n                      // ✅ Navigate to home or wallet\n                      navigate(\"/\"); // or navigate(\"/wallet\")\n                    }}\n                  >\n                    Enter\n                  </button>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* Empty State */}\n        {ids.length === 0 && (\n          <div className=\"text-center py-12\">\n            <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n            </svg>\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No User IDs yet</h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Get started by creating your first user ID.\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}