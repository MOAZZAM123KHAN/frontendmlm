{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\Ecommerce-MLM-Chain-main\\\\Ecommerce-MLM-Chain-main\\\\frontend\\\\frontend\\\\src\\\\components\\\\auth\\\\SignupForm.js\",\n  _s = $RefreshSig$();\n// // // import React, { useState } from 'react';\n// // // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // // import * as Yup from 'yup';\n\n// // // import { authAPI } from '../../services/api';\n// // // import { API_URL } from '../../config';\n\n// // // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\n// // //   const [isLoading, setIsLoading] = useState(false);\n// // //   const [error, setError] = useState('');\n// // //   const [userIds, setUserIds] = useState([]);\n// // //   const [showDashboard, setShowDashboard] = useState(false);\n// // //   const [step, setStep] = useState(1); // 1: form, 2: otp\n// // //   const [mobileForOtp, setMobileForOtp] = useState('');\n// // //   const [otp, setOtp] = useState('');\n// // //   const [otpError, setOtpError] = useState('');\n// // //   const [otpMessage, setOtpMessage] = useState('');\n// // //   const [isOtpLoading, setIsOtpLoading] = useState(false);\n\n// // //   const validationSchema = Yup.object({\n// // //     name: Yup.string().min(2, 'Name must be at least 2 characters').max(50, 'Name cannot exceed 50 characters').required('Name is required'),\n// // //     email: Yup.string().email('Please enter a valid email address').nullable(),\n// // //     mobileNumber: Yup.string().matches(/^[0-9]{10,15}$/, 'Please enter a valid mobile number').required('Mobile number is required'),\n// // //     password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n// // //     confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm password is required'),\n// // //   });\n\n// // //   const sendOtp = async (mobile) => {\n// // //     setIsOtpLoading(true);\n// // //     setOtpError('');\n// // //     setOtpMessage('');\n// // //     try {\n// // //       // Using fetch with API_URL from config\n// // //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/send-otp`, {\n// // //         method: 'POST',\n// // //         headers: {\n// // //           'Content-Type': 'application/json',\n// // //         },\n// // //         body: JSON.stringify({ mobile }),\n// // //       });\n// // //       const data = await response.json();\n// // //       if (!response.ok) {\n// // //         throw new Error(data.error || 'Failed to send OTP');\n// // //       }\n// // //       setOtpMessage('OTP sent to your mobile number.');\n// // //     } catch (err) {\n// // //       setOtpError(err.message || 'Failed to send OTP');\n// // //     } finally {\n// // //       setIsOtpLoading(false);\n// // //     }\n// // //   };\n\n// // //   const handleSubmit = async (values, { setSubmitting }) => {\n// // //     setError('');\n// // //     setUserIds([]);\n// // //     setShowDashboard(false);\n// // //     setMobileForOtp(values.mobileNumber);\n// // //     setStep(2);\n// // //     await sendOtp(values.mobileNumber);\n// // //     setSubmitting(false);\n// // //   };\n\n// // //   const handleVerifyOtp = async () => {\n// // //     setIsOtpLoading(true);\n// // //     setOtpError('');\n// // //     setOtpMessage('');\n// // //     try {\n// // //       // Using fetch with API_URL from config for OTP verification\n// // //       const verifyResponse = await fetch(`${API_URL.replace('/api', '')}/auth/verify-otp`, {\n// // //         method: 'POST',\n// // //         headers: {\n// // //           'Content-Type': 'application/json',\n// // //         },\n// // //         body: JSON.stringify({ mobile: mobileForOtp, otp }),\n// // //       });\n\n// // //       const verifyData = await verifyResponse.json();\n// // //       if (!verifyResponse.ok) {\n// // //         throw new Error(verifyData.error || 'OTP verification failed');\n// // //       }\n\n// // //       // Now create the account using authAPI\n// // //       setIsLoading(true);\n// // //       try {\n// // //         const signupData = {\n// // //           mobileNumber: mobileForOtp,\n// // //           // You may want to store the rest of the form data in a ref or state for this step\n// // //           // For demo, just pass mobileNumber\n// // //         };\n\n// // //         const response = await authAPI.signup(signupData);\n\n// // //         if (response.success) {\n// // //           setUserIds(response.data?.allUserIds || []);\n// // //           setShowDashboard(true);\n// // //           onSignupSuccess && onSignupSuccess(response.data);\n// // //         } else {\n// // //           setError(response.message || 'Signup failed');\n// // //           setStep(1);\n// // //         }\n// // //       } catch (signupErr) {\n// // //         setError(signupErr.message || 'Signup failed');\n// // //         setStep(1);\n// // //       }\n// // //     } catch (err) {\n// // //       setOtpError(err.message || 'OTP verification failed');\n// // //     } finally {\n// // //       setIsOtpLoading(false);\n// // //       setIsLoading(false);\n// // //     }\n// // //   };\n\n// // //   if (showDashboard && userIds.length > 0) {\n// // //     return (\n// // //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // //         <div className=\"max-w-md w-full space-y-8\">\n// // //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\n// // //           <ul className=\"mt-4 mb-6\">\n// // //             {userIds.map((id) => (\n// // //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\n// // //             ))}\n// // //           </ul>\n// // //           <button onClick={() => setShowDashboard(false)} className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\">Create another user</button>\n// // //         </div>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   if (step === 2) {\n// // //     return (\n// // //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // //         <div className=\"max-w-md w-full space-y-8\">\n// // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n// // //           <p className=\"text-center text-sm text-gray-600\">Enter the OTP sent to your mobile number {mobileForOtp}</p>\n// // //           <div className=\"space-y-4\">\n// // //             <input\n// // //               type=\"text\"\n// // //               value={otp}\n// // //               onChange={e => setOtp(e.target.value)}\n// // //               placeholder=\"Enter OTP\"\n// // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n// // //             />\n// // //             <button\n// // //               onClick={handleVerifyOtp}\n// // //               disabled={isOtpLoading || !otp}\n// // //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\n// // //             >\n// // //               {isOtpLoading ? 'Verifying...' : 'Verify OTP'}\n// // //             </button>\n// // //             <button\n// // //               onClick={() => sendOtp(mobileForOtp)}\n// // //               disabled={isOtpLoading}\n// // //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md\"\n// // //             >\n// // //               Resend OTP\n// // //             </button>\n// // //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\n// // //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\n// // //             <button onClick={() => setStep(1)} className=\"w-full py-2 px-4 text-indigo-600\">Back to Signup</button>\n// // //           </div>\n// // //         </div>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   return (\n// // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // //       <div className=\"max-w-md w-full space-y-8\">\n// // //         <div>\n// // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Create your account</h2>\n// // //           <p className=\"mt-2 text-center text-sm text-gray-600\">Enter your details to create a user ID under your mobile</p>\n// // //         </div>\n// // //         <Formik\n// // //           initialValues={{ name: '', email: '', mobileNumber: '', password: '', confirmPassword: '' }}\n// // //           validationSchema={validationSchema}\n// // //           onSubmit={handleSubmit}\n// // //         >\n// // //           {({ isSubmitting }) => (\n// // //             <Form className=\"mt-8 space-y-6\">\n// // //               <div className=\"space-y-4\">\n// // //                 <div>\n// // //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Name</label>\n// // //                   <Field id=\"name\" name=\"name\" type=\"text\" autoComplete=\"name\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your name\" />\n// // //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n// // //                 <div>\n// // //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email (optional)</label>\n// // //                   <Field id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your email (optional)\" />\n// // //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n// // //                 <div>\n// // //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">Mobile Number</label>\n// // //                   <Field id=\"mobileNumber\" name=\"mobileNumber\" type=\"tel\" autoComplete=\"tel\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your mobile number\" />\n// // //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n// // //                 <div>\n// // //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\n// // //                   <Field id=\"password\" name=\"password\" type=\"password\" autoComplete=\"new-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your password\" />\n// // //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n// // //                 <div>\n// // //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">Confirm Password</label>\n// // //                   <Field id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" autoComplete=\"new-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Confirm your password\" />\n// // //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// // //                 </div>\n// // //               </div>\n// // //               {error && (\n// // //                 <div className=\"rounded-md bg-red-50 p-4\">\n// // //                   <div className=\"flex\">\n// // //                     <div className=\"ml-3\">\n// // //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\n// // //                     </div>\n// // //                   </div>\n// // //                 </div>\n// // //               )}\n// // //               <div>\n// // //                 <button type=\"submit\" disabled={isSubmitting || isLoading} className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\">\n// // //                   {isLoading ? 'Creating account...' : 'Create account'}\n// // //                 </button>\n// // //               </div>\n// // //               <div className=\"text-center\">\n// // //                 <button type=\"button\" onClick={onSwitchToLogin} className=\"font-medium text-indigo-600 hover:text-indigo-500\">Already have an account? Sign in</button>\n// // //               </div>\n// // //             </Form>\n// // //           )}\n// // //         </Formik>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default SignupForm;\n\n// // import React, { useState, useEffect } from 'react';\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\n// // import * as Yup from 'yup';\n// // import { authAPI } from '../../services/api';\n\n// // import { \n// //   auth, \n// //   RecaptchaVerifier, \n// //   signInWithPhoneNumber \n// // } from '../../firebase';\n\n// // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\n// //   const [isLoading, setIsLoading] = useState(false);\n// //   const [error, setError] = useState('');\n// //   const [userIds, setUserIds] = useState([]);\n// //   const [showDashboard, setShowDashboard] = useState(false);\n// //   const [step, setStep] = useState(1); // 1: form, 2: otp\n// //   const [mobileForOtp, setMobileForOtp] = useState('');\n// //   const [otp, setOtp] = useState('');\n// //   const [otpError, setOtpError] = useState('');\n// //   const [otpMessage, setOtpMessage] = useState('');\n// //   const [isOtpLoading, setIsOtpLoading] = useState(false);\n// //   const [formData, setFormData] = useState(null);\n\n// //   const validationSchema = Yup.object({\n// //     name: Yup.string()\n// //       .min(2, 'Name must be at least 2 characters')\n// //       .max(50, 'Name cannot exceed 50 characters')\n// //       .required('Name is required'),\n// //     email: Yup.string()\n// //       .email('Please enter a valid email address')\n// //       .nullable(),\n// //     mobileNumber: Yup.string()\n// //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n// //       .required('Mobile number is required'),\n// //     password: Yup.string()\n// //       .min(6, 'Password must be at least 6 characters')\n// //       .required('Password is required'),\n// //     confirmPassword: Yup.string()\n// //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n// //       .required('Confirm password is required'),\n// //   });\n\n// //   // Initialize reCAPTCHA\n// //   useEffect(() => {\n// //     window.recaptchaVerifier = new RecaptchaVerifier(\n// //       'recaptcha-container',\n// //       {\n// //         size: 'invisible',\n// //         callback: () => {\n// //           // This will be called when reCAPTCHA is solved\n// //         },\n// //       },\n// //       auth\n// //     );\n\n// //     return () => {\n// //       if (window.recaptchaVerifier) {\n// //         window.recaptchaVerifier.clear();\n// //       }\n// //     };\n// //   }, []);\n\n// //   const sendOtp = async (mobile) => {\n// //     setIsOtpLoading(true);\n// //     setOtpError('');\n// //     setOtpMessage('');\n\n// //     try {\n// //       const phoneNumber = `+91${mobile}`; // Adjust country code as needed\n// //       const confirmationResult = await auth().signInWithPhoneNumber(\n// //         phoneNumber,\n// //         window.recaptchaVerifier\n// //       );\n\n// //       window.confirmationResult = confirmationResult;\n// //       setOtpMessage('OTP sent to your mobile number.');\n// //     } catch (err) {\n// //       console.error('OTP Error:', err);\n// //       setOtpError(err.message || 'Failed to send OTP. Please try again.');\n// //     } finally {\n// //       setIsOtpLoading(false);\n// //     }\n// //   };\n\n// //   const handleSubmit = async (values, { setSubmitting }) => {\n// //     setError('');\n// //     setFormData(values);\n// //     setMobileForOtp(values.mobileNumber);\n// //     await sendOtp(values.mobileNumber);\n// //     setStep(2);\n// //     setSubmitting(false);\n// //   };\n\n// //   const handleVerifyOtp = async () => {\n// //     setIsOtpLoading(true);\n// //     setOtpError('');\n// //     setOtpMessage('');\n\n// //     try {\n// //       // Verify OTP with Firebase\n// //       await window.confirmationResult.confirm(otp);\n\n// //       // OTP verified - proceed with account creation\n// //       setIsLoading(true);\n// //       try {\n// //         const response = await authAPI.signup({\n// //           name: formData.name,\n// //           email: formData.email,\n// //           mobileNumber: formData.mobileNumber,\n// //           password: formData.password,\n// //         });\n\n// //         if (response.success) {\n// //           setUserIds(response.data?.allUserIds || []);\n// //           setShowDashboard(true);\n// //           onSignupSuccess && onSignupSuccess(response.data);\n// //         } else {\n// //           setError(response.message || 'Signup failed');\n// //           setStep(1);\n// //         }\n// //       } catch (signupErr) {\n// //         setError(signupErr.message || 'Signup failed. Please try again.');\n// //         setStep(1);\n// //       }\n// //     } catch (err) {\n// //       setOtpError(err.message || 'Invalid OTP. Please try again.');\n// //     } finally {\n// //       setIsOtpLoading(false);\n// //       setIsLoading(false);\n// //     }\n// //   };\n\n// //   if (showDashboard && userIds.length > 0) {\n// //     return (\n// //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //         <div className=\"max-w-md w-full space-y-8\">\n// //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\n// //           <ul className=\"mt-4 mb-6\">\n// //             {userIds.map((id) => (\n// //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\n// //             ))}\n// //           </ul>\n// //           <button \n// //             onClick={() => setShowDashboard(false)} \n// //             className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n// //           >\n// //             Create another user\n// //           </button>\n// //         </div>\n// //       </div>\n// //     );\n// //   }\n\n// //   if (step === 2) {\n// //     return (\n// //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// //         <div className=\"max-w-md w-full space-y-8\">\n// //           <div>\n// //             <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n// //             <p className=\"text-center text-sm text-gray-600\">\n// //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n// //             </p>\n// //           </div>\n\n// //           <div className=\"space-y-4\">\n// //             <div>\n// //               <input\n// //                 type=\"text\"\n// //                 value={otp}\n// //                 onChange={(e) => setOtp(e.target.value)}\n// //                 placeholder=\"Enter OTP\"\n// //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n// //                 maxLength=\"6\"\n// //               />\n// //             </div>\n\n// //             <button\n// //               onClick={handleVerifyOtp}\n// //               disabled={isOtpLoading || otp.length !== 6}\n// //               className={`w-full py-2 px-4 rounded-md text-white ${isOtpLoading || otp.length !== 6 ? 'bg-indigo-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'} transition-colors`}\n// //             >\n// //               {isOtpLoading ? (\n// //                 <span className=\"flex items-center justify-center\">\n// //                   <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// //                     <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// //                     <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// //                   </svg>\n// //                   Verifying...\n// //                 </span>\n// //               ) : 'Verify OTP'}\n// //             </button>\n\n// //             <button\n// //               onClick={() => sendOtp(mobileForOtp)}\n// //               disabled={isOtpLoading}\n// //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors disabled:opacity-50\"\n// //             >\n// //               Resend OTP\n// //             </button>\n\n// //             {otpMessage && (\n// //               <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n// //                 {otpMessage}\n// //               </div>\n// //             )}\n\n// //             {otpError && (\n// //               <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n// //                 {otpError}\n// //               </div>\n// //             )}\n\n// //             <button \n// //               onClick={() => setStep(1)}\n// //               className=\"w-full py-2 px-4 text-indigo-600 hover:text-indigo-800 transition-colors\"\n// //             >\n// //               Back to Signup\n// //             </button>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// //       <div className=\"max-w-md w-full space-y-8\">\n// //         <div>\n// //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n// //             Create your account\n// //           </h2>\n// //           <p className=\"mt-2 text-center text-sm text-gray-600\">\n// //             Enter your details to create a user ID under your mobile\n// //           </p>\n// //         </div>\n\n// //         <Formik\n// //           initialValues={{\n// //             name: '',\n// //             email: '',\n// //             mobileNumber: '',\n// //             password: '',\n// //             confirmPassword: ''\n// //           }}\n// //           validationSchema={validationSchema}\n// //           onSubmit={handleSubmit}\n// //         >\n// //           {({ isSubmitting, isValid, dirty }) => (\n// //             <Form className=\"mt-8 space-y-6\">\n// //               <div className=\"space-y-4\">\n// //                 <div>\n// //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Full Name\n// //                   </label>\n// //                   <Field \n// //                     id=\"name\" \n// //                     name=\"name\" \n// //                     type=\"text\" \n// //                     autoComplete=\"name\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"Enter your full name\"\n// //                   />\n// //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n\n// //                 <div>\n// //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Email (optional)\n// //                   </label>\n// //                   <Field \n// //                     id=\"email\" \n// //                     name=\"email\" \n// //                     type=\"email\" \n// //                     autoComplete=\"email\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"Enter your email\"\n// //                   />\n// //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n\n// //                 <div>\n// //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Mobile Number\n// //                   </label>\n// //                   <div className=\"mt-1 flex rounded-md shadow-sm\">\n// //                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 sm:text-sm\">\n// //                       +91\n// //                     </span>\n// //                     <Field \n// //                       id=\"mobileNumber\" \n// //                       name=\"mobileNumber\" \n// //                       type=\"tel\" \n// //                       autoComplete=\"tel\" \n// //                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                       placeholder=\"Enter your 10-digit mobile number\"\n// //                       maxLength=\"10\"\n// //                     />\n// //                   </div>\n// //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n\n// //                 <div>\n// //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Password\n// //                   </label>\n// //                   <Field \n// //                     id=\"password\" \n// //                     name=\"password\" \n// //                     type=\"password\" \n// //                     autoComplete=\"new-password\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"Enter your password\"\n// //                   />\n// //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n\n// //                 <div>\n// //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n// //                     Confirm Password\n// //                   </label>\n// //                   <Field \n// //                     id=\"confirmPassword\" \n// //                     name=\"confirmPassword\" \n// //                     type=\"password\" \n// //                     autoComplete=\"new-password\" \n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                     placeholder=\"Confirm your password\"\n// //                   />\n// //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n// //                 </div>\n// //               </div>\n\n// //               {error && (\n// //                 <div className=\"rounded-md bg-red-50 p-4\">\n// //                   <div className=\"flex\">\n// //                     <div className=\"ml-3\">\n// //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\n// //                     </div>\n// //                   </div>\n// //                 </div>\n// //               )}\n\n// //               <div>\n// //                 <button\n// //                   type=\"submit\"\n// //                   disabled={isSubmitting || isLoading || !isValid || !dirty}\n// //                   className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${isSubmitting || isLoading || !isValid || !dirty ? 'bg-indigo-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors`}\n// //                 >\n// //                   {isLoading ? (\n// //                     <span className=\"flex items-center justify-center\">\n// //                       <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n// //                         <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// //                         <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n// //                       </svg>\n// //                       Processing...\n// //                     </span>\n// //                   ) : 'Send OTP'}\n// //                 </button>\n// //               </div>\n\n// //               <div className=\"text-center\">\n// //                 <button\n// //                   type=\"button\"\n// //                   onClick={onSwitchToLogin}\n// //                   className=\"font-medium text-indigo-600 hover:text-indigo-500 transition-colors\"\n// //                 >\n// //                   Already have an account? Sign in\n// //                 </button>\n// //               </div>\n// //             </Form>\n// //           )}\n// //         </Formik>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default SignupForm;\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { authAPI } from '../../services/api';\n// import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\n\n// const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\n//   // State management\n//   const [step, setStep] = useState(1); // 1: form, 2: otp\n//   const [loading, setLoading] = useState({\n//     form: false,\n//     otp: false,\n//     resend: false\n//   });\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [formData, setFormData] = useState(null);\n//   const [mobileForOtp, setMobileForOtp] = useState('');\n//   const [otp, setOtp] = useState('');\n//   const recaptchaVerifier = useRef(null);\n\n//   // Form validation schema\n//   const validationSchema = Yup.object({\n//     name: Yup.string()\n//       .min(2, 'Name must be at least 2 characters')\n//       .max(50, 'Name cannot exceed 50 characters')\n//       .required('Name is required'),\n//     email: Yup.string()\n//       .email('Please enter a valid email address')\n//       .nullable(),\n//     mobileNumber: Yup.string()\n//       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\n//       .required('Mobile number is required'),\n//     password: Yup.string()\n//       .min(8, 'Password must be at least 8 characters')\n//       .matches(\n//         /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n//         'Password must contain at least one uppercase, one lowercase, one number and one special character'\n//       )\n//       .required('Password is required'),\n//     confirmPassword: Yup.string()\n//       .oneOf([Yup.ref('password'), null], 'Passwords must match')\n//       .required('Confirm password is required'),\n//   });\n\n//   // Initialize reCAPTCHA\n//   useEffect(() => {\n//     recaptchaVerifier.current = new RecaptchaVerifier(\n//       'recaptcha-container',\n//       {\n//         size: 'invisible',\n//         callback: () => {\n//           // This will be called when reCAPTCHA is solved\n//         },\n//       },\n//       auth\n//     );\n\n//     return () => {\n//       if (recaptchaVerifier.current) {\n//         recaptchaVerifier.current.clear();\n//       }\n//     };\n//   }, []);\n\n//   const sendOtp = async (mobile) => {\n//     setLoading(prev => ({ ...prev, form: true }));\n//     setError('');\n//     setMessage('');\n\n//     try {\n//       const phoneNumber = `+91${mobile}`;\n//       const confirmationResult = await signInWithPhoneNumber(\n//         auth,\n//         phoneNumber,\n//         recaptchaVerifier.current\n//       );\n\n//       window.confirmationResult = confirmationResult;\n//       setMessage('OTP sent to your mobile number.');\n//       setMobileForOtp(mobile);\n//       setStep(2);\n//     } catch (err) {\n//       console.error('OTP Error:', err);\n//       setError(err.message || 'Failed to send OTP. Please try again.');\n//       // Reset recaptcha on error\n//       recaptchaVerifier.current.clear();\n//       recaptchaVerifier.current = new RecaptchaVerifier(\n//         'recaptcha-container',\n//         {\n//           size: 'invisible',\n//           callback: () => {},\n//         },\n//         auth\n//       );\n//     } finally {\n//       setLoading(prev => ({ ...prev, form: false }));\n//     }\n//   };\n\n//   const resendOtp = async () => {\n//     setLoading(prev => ({ ...prev, resend: true }));\n//     setError('');\n\n//     try {\n//       await sendOtp(mobileForOtp);\n//       setMessage('New OTP sent to your mobile number.');\n//     } catch (err) {\n//       setError(err.message || 'Failed to resend OTP. Please try again.');\n//     } finally {\n//       setLoading(prev => ({ ...prev, resend: false }));\n//     }\n//   };\n\n//   const verifyOtp = async () => {\n//     setLoading(prev => ({ ...prev, otp: true }));\n//     setError('');\n\n//     try {\n//       // Verify OTP with Firebase\n//       await window.confirmationResult.confirm(otp);\n\n//       // OTP verified - proceed with account creation\n//       try {\n//         const response = await authAPI.signup({\n//           name: formData.name,\n//           email: formData.email,\n//           mobileNumber: formData.mobileNumber,\n//           password: formData.password,\n//         });\n\n//         if (response.success) {\n//           onSignupSuccess?.(response.data);\n//         } else {\n//           throw new Error(response.message || 'Signup failed');\n//         }\n//       } catch (signupErr) {\n//         throw new Error(signupErr.message || 'Signup failed. Please try again.');\n//       }\n//     } catch (err) {\n//       setError(err.message || 'Invalid OTP. Please try again.');\n//     } finally {\n//       setLoading(prev => ({ ...prev, otp: false }));\n//     }\n//   };\n\n//   const handleFormSubmit = async (values, { setSubmitting }) => {\n//     setFormData(values);\n//     await sendOtp(values.mobileNumber);\n//     setSubmitting(false);\n//   };\n\n//   // OTP Verification Step\n//   if (step === 2) {\n//     return (\n//       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n//         <div className=\"max-w-md w-full space-y-8\">\n//           <div className=\"text-center\">\n//             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\n//             <p className=\"mt-2 text-sm text-gray-600\">\n//               Enter the 6-digit OTP sent to +91 {mobileForOtp}\n//             </p>\n//           </div>\n\n//           <div className=\"space-y-4\">\n//             <div>\n//               <input\n//                 type=\"text\"\n//                 value={otp}\n//                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n//                 placeholder=\"Enter 6-digit OTP\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\n//                 inputMode=\"numeric\"\n//                 autoFocus\n//               />\n//             </div>\n\n//             <button\n//               onClick={verifyOtp}\n//               disabled={loading.otp || otp.length !== 6}\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n//             >\n//               {loading.otp ? (\n//                 <>\n//                   <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n//                     <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n//                     <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n//                   </svg>\n//                   Verifying...\n//                 </>\n//               ) : 'Verify OTP'}\n//             </button>\n\n//             <button\n//               onClick={resendOtp}\n//               disabled={loading.resend}\n//               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\n//             >\n//               {loading.resend ? 'Resending OTP...' : 'Resend OTP'}\n//             </button>\n\n//             {message && (\n//               <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n//                 {message}\n//               </div>\n//             )}\n\n//             {error && (\n//               <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n//                 {error}\n//               </div>\n//             )}\n\n//             <button \n//               onClick={() => {\n//                 setStep(1);\n//                 setError('');\n//                 setMessage('');\n//               }}\n//               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\n//             >\n//               ← Back to Signup\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   // Initial Signup Form\n//   return (\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n//       <div className=\"max-w-md w-full space-y-8\">\n//         <div className=\"text-center\">\n//           <h2 className=\"text-3xl font-extrabold text-gray-900\">\n//             Create your account\n//           </h2>\n//           <p className=\"mt-2 text-sm text-gray-600\">\n//             Enter your details to get started\n//           </p>\n//         </div>\n\n//         <Formik\n//           initialValues={{\n//             name: '',\n//             email: '',\n//             mobileNumber: '',\n//             password: '',\n//             confirmPassword: ''\n//           }}\n//           validationSchema={validationSchema}\n//           onSubmit={handleFormSubmit}\n//         >\n//           {({ isSubmitting, isValid, dirty }) => (\n//             <Form className=\"mt-8 space-y-6\">\n//               <div className=\"space-y-4\">\n//                 <div>\n//                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n//                     Full Name\n//                   </label>\n//                   <Field \n//                     id=\"name\" \n//                     name=\"name\" \n//                     type=\"text\" \n//                     autoComplete=\"name\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"Your full name\"\n//                   />\n//                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n\n//                 <div>\n//                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n//                     Email (optional)\n//                   </label>\n//                   <Field \n//                     id=\"email\" \n//                     name=\"email\" \n//                     type=\"email\" \n//                     autoComplete=\"email\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"your.email@example.com\"\n//                   />\n//                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n\n//                 <div>\n//                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\n//                     Mobile Number\n//                   </label>\n//                   <div className=\"mt-1 flex rounded-md shadow-sm\">\n//                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n//                       +91\n//                     </span>\n//                     <Field \n//                       id=\"mobileNumber\" \n//                       name=\"mobileNumber\" \n//                       type=\"tel\" \n//                       autoComplete=\"tel\" \n//                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                       placeholder=\"9876543210\"\n//                       maxLength=\"10\"\n//                     />\n//                   </div>\n//                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n\n//                 <div>\n//                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n//                     Password\n//                   </label>\n//                   <Field \n//                     id=\"password\" \n//                     name=\"password\" \n//                     type=\"password\" \n//                     autoComplete=\"new-password\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"At least 8 characters\"\n//                   />\n//                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n\n//                 <div>\n//                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n//                     Confirm Password\n//                   </label>\n//                   <Field \n//                     id=\"confirmPassword\" \n//                     name=\"confirmPassword\" \n//                     type=\"password\" \n//                     autoComplete=\"new-password\" \n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                     placeholder=\"Confirm your password\"\n//                   />\n//                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\n//                 </div>\n//               </div>\n\n//               {error && (\n//                 <div className=\"rounded-md bg-red-50 p-3\">\n//                   <p className=\"text-sm text-red-700\">{error}</p>\n//                 </div>\n//               )}\n\n//               <div>\n//                 <button\n//                   type=\"submit\"\n//                   disabled={loading.form || !isValid || !dirty}\n//                   className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n//                 >\n//                   {loading.form ? (\n//                     <>\n//                       <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n//                         <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n//                         <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n//                       </svg>\n//                       Sending OTP...\n//                     </>\n//                   ) : 'Send OTP'}\n//                 </button>\n//               </div>\n\n//               <div className=\"text-center text-sm\">\n//                 <p className=\"text-gray-600\">\n//                   Already have an account?{' '}\n//                   <button\n//                     type=\"button\"\n//                     onClick={onSwitchToLogin}\n//                     className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n//                   >\n//                     Sign in\n//                   </button>\n//                 </p>\n//               </div>\n//             </Form>\n//           )}\n//         </Formik>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SignupForm;\n\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupForm = () => {\n  _s();\n  const [step, setStep] = useState(1); // 1: form, 2: otp\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [mobileForOtp, setMobileForOtp] = useState('');\n  const [otp, setOtp] = useState('');\n  const navigate = useNavigate();\n  const validationSchema = Yup.object({\n    name: Yup.string().min(2, 'Name must be at least 2 characters').max(50, 'Name cannot exceed 50 characters').required('Name is required'),\n    email: Yup.string().email('Please enter a valid email address').nullable(),\n    mobileNumber: Yup.string().matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number').required('Mobile number is required'),\n    password: Yup.string().min(8, 'Password must be at least 8 characters').matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, 'Password must contain at least one uppercase, one lowercase, one number and one special character').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm password is required')\n  });\n  useEffect(() => {\n    window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n      size: 'invisible'\n    }, auth);\n    return () => {\n      if (window.recaptchaVerifier) {\n        window.recaptchaVerifier.clear();\n      }\n    };\n  }, []);\n  const sendOtp = async mobile => {\n    setLoading(true);\n    setError('');\n    setMessage('');\n    try {\n      const phoneNumber = `+91${mobile}`;\n      const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, window.recaptchaVerifier);\n      window.confirmationResult = confirmationResult;\n      setMessage('OTP sent to your mobile number.');\n      setMobileForOtp(mobile);\n      setStep(2);\n    } catch (err) {\n      setError(err.message || 'Failed to send OTP. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const verifyOtp = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      await window.confirmationResult.confirm(otp);\n      setMessage('Account created successfully! Redirecting to login...');\n      setTimeout(() => navigate('/login'), 2000);\n    } catch (err) {\n      setError(err.message || 'Invalid OTP. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFormSubmit = async values => {\n    await sendOtp(values.mobileNumber);\n    // You would typically save formData to use after OTP verification\n  };\n  if (step === 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recaptcha-container\",\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md w-full space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl font-extrabold text-gray-900\",\n            children: \"Verify OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-gray-600\",\n            children: [\"Enter the 6-digit OTP sent to +91 \", mobileForOtp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 bg-green-50 text-green-700 rounded-md text-sm\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 bg-red-50 text-red-700 rounded-md text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: otp,\n              onChange: e => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6)),\n              placeholder: \"Enter 6-digit OTP\",\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\",\n              inputMode: \"numeric\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: verifyOtp,\n            disabled: loading || otp.length !== 6,\n            className: \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\",\n            children: loading ? 'Verifying...' : 'Verify OTP'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendOtp(mobileForOtp),\n            disabled: loading,\n            className: \"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\",\n            children: \"Resend OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setStep(1);\n              setError('');\n              setMessage('');\n            },\n            className: \"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\",\n            children: \"\\u2190 Back to Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1107,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-extrabold text-gray-900\",\n          children: \"Create your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-gray-600\",\n          children: [\"Or\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"font-medium text-indigo-600 hover:text-indigo-500\",\n            children: \"sign in to your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          name: '',\n          email: '',\n          mobileNumber: '',\n          password: '',\n          confirmPassword: ''\n        },\n        validationSchema: validationSchema,\n        onSubmit: handleFormSubmit,\n        children: ({\n          isSubmitting,\n          isValid,\n          dirty\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"mt-8 space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1205,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"name\",\n                name: \"name\",\n                type: \"text\",\n                autoComplete: \"name\",\n                className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n                placeholder: \"Your full name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"name\",\n                component: \"div\",\n                className: \"mt-1 text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1216,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Email (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"email\",\n                name: \"email\",\n                type: \"email\",\n                autoComplete: \"email\",\n                className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n                placeholder: \"your.email@example.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1223,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                component: \"div\",\n                className: \"mt-1 text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1231,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"mobileNumber\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Mobile Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 flex rounded-md shadow-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\",\n                  children: \"+91\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1239,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  id: \"mobileNumber\",\n                  name: \"mobileNumber\",\n                  type: \"tel\",\n                  autoComplete: \"tel\",\n                  className: \"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n                  placeholder: \"9876543210\",\n                  maxLength: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1242,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1238,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"mobileNumber\",\n                component: \"div\",\n                className: \"mt-1 text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"password\",\n                name: \"password\",\n                type: \"password\",\n                autoComplete: \"new-password\",\n                className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n                placeholder: \"At least 8 characters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1259,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                component: \"div\",\n                className: \"mt-1 text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1267,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirmPassword\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"confirmPassword\",\n                name: \"confirmPassword\",\n                type: \"password\",\n                autoComplete: \"new-password\",\n                className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n                placeholder: \"Confirm your password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"confirmPassword\",\n                component: \"div\",\n                className: \"mt-1 text-sm text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1282,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rounded-md bg-red-50 p-3\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-red-700\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1288,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1287,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: loading || !isValid || !dirty,\n              className: \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\",\n              children: loading ? 'Sending OTP...' : 'Sign Up'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1293,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1175,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupForm, \"b7+/T1Mw6sy1ByX2JutkdKqGTM4=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","useEffect","Formik","Form","Field","ErrorMessage","Yup","Link","useNavigate","auth","RecaptchaVerifier","signInWithPhoneNumber","jsxDEV","_jsxDEV","SignupForm","_s","step","setStep","loading","setLoading","error","setError","message","setMessage","mobileForOtp","setMobileForOtp","otp","setOtp","navigate","validationSchema","object","name","string","min","max","required","email","nullable","mobileNumber","matches","password","confirmPassword","oneOf","ref","window","recaptchaVerifier","size","clear","sendOtp","mobile","phoneNumber","confirmationResult","err","verifyOtp","confirm","setTimeout","handleFormSubmit","values","className","children","id","style","display","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","replace","slice","placeholder","inputMode","autoFocus","onClick","disabled","length","to","initialValues","onSubmit","isSubmitting","isValid","dirty","htmlFor","autoComplete","component","maxLength","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/Ecommerce-MLM-Chain-main/Ecommerce-MLM-Chain-main/frontend/frontend/src/components/auth/SignupForm.js"],"sourcesContent":["// // // import React, { useState } from 'react';\r\n// // // import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// // // import * as Yup from 'yup';\r\n\r\n// // // import { authAPI } from '../../services/api';\r\n// // // import { API_URL } from '../../config';\r\n\r\n// // // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\r\n// // //   const [isLoading, setIsLoading] = useState(false);\r\n// // //   const [error, setError] = useState('');\r\n// // //   const [userIds, setUserIds] = useState([]);\r\n// // //   const [showDashboard, setShowDashboard] = useState(false);\r\n// // //   const [step, setStep] = useState(1); // 1: form, 2: otp\r\n// // //   const [mobileForOtp, setMobileForOtp] = useState('');\r\n// // //   const [otp, setOtp] = useState('');\r\n// // //   const [otpError, setOtpError] = useState('');\r\n// // //   const [otpMessage, setOtpMessage] = useState('');\r\n// // //   const [isOtpLoading, setIsOtpLoading] = useState(false);\r\n\r\n// // //   const validationSchema = Yup.object({\r\n// // //     name: Yup.string().min(2, 'Name must be at least 2 characters').max(50, 'Name cannot exceed 50 characters').required('Name is required'),\r\n// // //     email: Yup.string().email('Please enter a valid email address').nullable(),\r\n// // //     mobileNumber: Yup.string().matches(/^[0-9]{10,15}$/, 'Please enter a valid mobile number').required('Mobile number is required'),\r\n// // //     password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\r\n// // //     confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm password is required'),\r\n// // //   });\r\n\r\n// // //   const sendOtp = async (mobile) => {\r\n// // //     setIsOtpLoading(true);\r\n// // //     setOtpError('');\r\n// // //     setOtpMessage('');\r\n// // //     try {\r\n// // //       // Using fetch with API_URL from config\r\n// // //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/send-otp`, {\r\n// // //         method: 'POST',\r\n// // //         headers: {\r\n// // //           'Content-Type': 'application/json',\r\n// // //         },\r\n// // //         body: JSON.stringify({ mobile }),\r\n// // //       });\r\n// // //       const data = await response.json();\r\n// // //       if (!response.ok) {\r\n// // //         throw new Error(data.error || 'Failed to send OTP');\r\n// // //       }\r\n// // //       setOtpMessage('OTP sent to your mobile number.');\r\n// // //     } catch (err) {\r\n// // //       setOtpError(err.message || 'Failed to send OTP');\r\n// // //     } finally {\r\n// // //       setIsOtpLoading(false);\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   const handleSubmit = async (values, { setSubmitting }) => {\r\n// // //     setError('');\r\n// // //     setUserIds([]);\r\n// // //     setShowDashboard(false);\r\n// // //     setMobileForOtp(values.mobileNumber);\r\n// // //     setStep(2);\r\n// // //     await sendOtp(values.mobileNumber);\r\n// // //     setSubmitting(false);\r\n// // //   };\r\n\r\n// // //   const handleVerifyOtp = async () => {\r\n// // //     setIsOtpLoading(true);\r\n// // //     setOtpError('');\r\n// // //     setOtpMessage('');\r\n// // //     try {\r\n// // //       // Using fetch with API_URL from config for OTP verification\r\n// // //       const verifyResponse = await fetch(`${API_URL.replace('/api', '')}/auth/verify-otp`, {\r\n// // //         method: 'POST',\r\n// // //         headers: {\r\n// // //           'Content-Type': 'application/json',\r\n// // //         },\r\n// // //         body: JSON.stringify({ mobile: mobileForOtp, otp }),\r\n// // //       });\r\n      \r\n// // //       const verifyData = await verifyResponse.json();\r\n// // //       if (!verifyResponse.ok) {\r\n// // //         throw new Error(verifyData.error || 'OTP verification failed');\r\n// // //       }\r\n      \r\n// // //       // Now create the account using authAPI\r\n// // //       setIsLoading(true);\r\n// // //       try {\r\n// // //         const signupData = {\r\n// // //           mobileNumber: mobileForOtp,\r\n// // //           // You may want to store the rest of the form data in a ref or state for this step\r\n// // //           // For demo, just pass mobileNumber\r\n// // //         };\r\n        \r\n// // //         const response = await authAPI.signup(signupData);\r\n        \r\n// // //         if (response.success) {\r\n// // //           setUserIds(response.data?.allUserIds || []);\r\n// // //           setShowDashboard(true);\r\n// // //           onSignupSuccess && onSignupSuccess(response.data);\r\n// // //         } else {\r\n// // //           setError(response.message || 'Signup failed');\r\n// // //           setStep(1);\r\n// // //         }\r\n// // //       } catch (signupErr) {\r\n// // //         setError(signupErr.message || 'Signup failed');\r\n// // //         setStep(1);\r\n// // //       }\r\n// // //     } catch (err) {\r\n// // //       setOtpError(err.message || 'OTP verification failed');\r\n// // //     } finally {\r\n// // //       setIsOtpLoading(false);\r\n// // //       setIsLoading(false);\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   if (showDashboard && userIds.length > 0) {\r\n// // //     return (\r\n// // //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// // //         <div className=\"max-w-md w-full space-y-8\">\r\n// // //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\r\n// // //           <ul className=\"mt-4 mb-6\">\r\n// // //             {userIds.map((id) => (\r\n// // //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\r\n// // //             ))}\r\n// // //           </ul>\r\n// // //           <button onClick={() => setShowDashboard(false)} className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\">Create another user</button>\r\n// // //         </div>\r\n// // //       </div>\r\n// // //     );\r\n// // //   }\r\n\r\n// // //   if (step === 2) {\r\n// // //     return (\r\n// // //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// // //         <div className=\"max-w-md w-full space-y-8\">\r\n// // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\r\n// // //           <p className=\"text-center text-sm text-gray-600\">Enter the OTP sent to your mobile number {mobileForOtp}</p>\r\n// // //           <div className=\"space-y-4\">\r\n// // //             <input\r\n// // //               type=\"text\"\r\n// // //               value={otp}\r\n// // //               onChange={e => setOtp(e.target.value)}\r\n// // //               placeholder=\"Enter OTP\"\r\n// // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n// // //             />\r\n// // //             <button\r\n// // //               onClick={handleVerifyOtp}\r\n// // //               disabled={isOtpLoading || !otp}\r\n// // //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\r\n// // //             >\r\n// // //               {isOtpLoading ? 'Verifying...' : 'Verify OTP'}\r\n// // //             </button>\r\n// // //             <button\r\n// // //               onClick={() => sendOtp(mobileForOtp)}\r\n// // //               disabled={isOtpLoading}\r\n// // //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md\"\r\n// // //             >\r\n// // //               Resend OTP\r\n// // //             </button>\r\n// // //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\r\n// // //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\r\n// // //             <button onClick={() => setStep(1)} className=\"w-full py-2 px-4 text-indigo-600\">Back to Signup</button>\r\n// // //           </div>\r\n// // //         </div>\r\n// // //       </div>\r\n// // //     );\r\n// // //   }\r\n\r\n// // //   return (\r\n// // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// // //       <div className=\"max-w-md w-full space-y-8\">\r\n// // //         <div>\r\n// // //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Create your account</h2>\r\n// // //           <p className=\"mt-2 text-center text-sm text-gray-600\">Enter your details to create a user ID under your mobile</p>\r\n// // //         </div>\r\n// // //         <Formik\r\n// // //           initialValues={{ name: '', email: '', mobileNumber: '', password: '', confirmPassword: '' }}\r\n// // //           validationSchema={validationSchema}\r\n// // //           onSubmit={handleSubmit}\r\n// // //         >\r\n// // //           {({ isSubmitting }) => (\r\n// // //             <Form className=\"mt-8 space-y-6\">\r\n// // //               <div className=\"space-y-4\">\r\n// // //                 <div>\r\n// // //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Name</label>\r\n// // //                   <Field id=\"name\" name=\"name\" type=\"text\" autoComplete=\"name\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your name\" />\r\n// // //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // //                 </div>\r\n// // //                 <div>\r\n// // //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email (optional)</label>\r\n// // //                   <Field id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your email (optional)\" />\r\n// // //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // //                 </div>\r\n// // //                 <div>\r\n// // //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">Mobile Number</label>\r\n// // //                   <Field id=\"mobileNumber\" name=\"mobileNumber\" type=\"tel\" autoComplete=\"tel\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your mobile number\" />\r\n// // //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // //                 </div>\r\n// // //                 <div>\r\n// // //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\r\n// // //                   <Field id=\"password\" name=\"password\" type=\"password\" autoComplete=\"new-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Enter your password\" />\r\n// // //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // //                 </div>\r\n// // //                 <div>\r\n// // //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">Confirm Password</label>\r\n// // //                   <Field id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" autoComplete=\"new-password\" required className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Confirm your password\" />\r\n// // //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// // //                 </div>\r\n// // //               </div>\r\n// // //               {error && (\r\n// // //                 <div className=\"rounded-md bg-red-50 p-4\">\r\n// // //                   <div className=\"flex\">\r\n// // //                     <div className=\"ml-3\">\r\n// // //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\r\n// // //                     </div>\r\n// // //                   </div>\r\n// // //                 </div>\r\n// // //               )}\r\n// // //               <div>\r\n// // //                 <button type=\"submit\" disabled={isSubmitting || isLoading} className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\">\r\n// // //                   {isLoading ? 'Creating account...' : 'Create account'}\r\n// // //                 </button>\r\n// // //               </div>\r\n// // //               <div className=\"text-center\">\r\n// // //                 <button type=\"button\" onClick={onSwitchToLogin} className=\"font-medium text-indigo-600 hover:text-indigo-500\">Already have an account? Sign in</button>\r\n// // //               </div>\r\n// // //             </Form>\r\n// // //           )}\r\n// // //         </Formik>\r\n// // //       </div>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default SignupForm;\r\n\r\n\r\n\r\n\r\n// // import React, { useState, useEffect } from 'react';\r\n// // import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// // import * as Yup from 'yup';\r\n// // import { authAPI } from '../../services/api';\r\n\r\n\r\n// // import { \r\n// //   auth, \r\n// //   RecaptchaVerifier, \r\n// //   signInWithPhoneNumber \r\n// // } from '../../firebase';\r\n\r\n// // const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\r\n// //   const [isLoading, setIsLoading] = useState(false);\r\n// //   const [error, setError] = useState('');\r\n// //   const [userIds, setUserIds] = useState([]);\r\n// //   const [showDashboard, setShowDashboard] = useState(false);\r\n// //   const [step, setStep] = useState(1); // 1: form, 2: otp\r\n// //   const [mobileForOtp, setMobileForOtp] = useState('');\r\n// //   const [otp, setOtp] = useState('');\r\n// //   const [otpError, setOtpError] = useState('');\r\n// //   const [otpMessage, setOtpMessage] = useState('');\r\n// //   const [isOtpLoading, setIsOtpLoading] = useState(false);\r\n// //   const [formData, setFormData] = useState(null);\r\n\r\n// //   const validationSchema = Yup.object({\r\n// //     name: Yup.string()\r\n// //       .min(2, 'Name must be at least 2 characters')\r\n// //       .max(50, 'Name cannot exceed 50 characters')\r\n// //       .required('Name is required'),\r\n// //     email: Yup.string()\r\n// //       .email('Please enter a valid email address')\r\n// //       .nullable(),\r\n// //     mobileNumber: Yup.string()\r\n// //       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\r\n// //       .required('Mobile number is required'),\r\n// //     password: Yup.string()\r\n// //       .min(6, 'Password must be at least 6 characters')\r\n// //       .required('Password is required'),\r\n// //     confirmPassword: Yup.string()\r\n// //       .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n// //       .required('Confirm password is required'),\r\n// //   });\r\n\r\n// //   // Initialize reCAPTCHA\r\n// //   useEffect(() => {\r\n// //     window.recaptchaVerifier = new RecaptchaVerifier(\r\n// //       'recaptcha-container',\r\n// //       {\r\n// //         size: 'invisible',\r\n// //         callback: () => {\r\n// //           // This will be called when reCAPTCHA is solved\r\n// //         },\r\n// //       },\r\n// //       auth\r\n// //     );\r\n\r\n// //     return () => {\r\n// //       if (window.recaptchaVerifier) {\r\n// //         window.recaptchaVerifier.clear();\r\n// //       }\r\n// //     };\r\n// //   }, []);\r\n\r\n// //   const sendOtp = async (mobile) => {\r\n// //     setIsOtpLoading(true);\r\n// //     setOtpError('');\r\n// //     setOtpMessage('');\r\n    \r\n// //     try {\r\n// //       const phoneNumber = `+91${mobile}`; // Adjust country code as needed\r\n// //       const confirmationResult = await auth().signInWithPhoneNumber(\r\n// //         phoneNumber,\r\n// //         window.recaptchaVerifier\r\n// //       );\r\n      \r\n// //       window.confirmationResult = confirmationResult;\r\n// //       setOtpMessage('OTP sent to your mobile number.');\r\n// //     } catch (err) {\r\n// //       console.error('OTP Error:', err);\r\n// //       setOtpError(err.message || 'Failed to send OTP. Please try again.');\r\n// //     } finally {\r\n// //       setIsOtpLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleSubmit = async (values, { setSubmitting }) => {\r\n// //     setError('');\r\n// //     setFormData(values);\r\n// //     setMobileForOtp(values.mobileNumber);\r\n// //     await sendOtp(values.mobileNumber);\r\n// //     setStep(2);\r\n// //     setSubmitting(false);\r\n// //   };\r\n\r\n// //   const handleVerifyOtp = async () => {\r\n// //     setIsOtpLoading(true);\r\n// //     setOtpError('');\r\n// //     setOtpMessage('');\r\n    \r\n// //     try {\r\n// //       // Verify OTP with Firebase\r\n// //       await window.confirmationResult.confirm(otp);\r\n      \r\n// //       // OTP verified - proceed with account creation\r\n// //       setIsLoading(true);\r\n// //       try {\r\n// //         const response = await authAPI.signup({\r\n// //           name: formData.name,\r\n// //           email: formData.email,\r\n// //           mobileNumber: formData.mobileNumber,\r\n// //           password: formData.password,\r\n// //         });\r\n        \r\n// //         if (response.success) {\r\n// //           setUserIds(response.data?.allUserIds || []);\r\n// //           setShowDashboard(true);\r\n// //           onSignupSuccess && onSignupSuccess(response.data);\r\n// //         } else {\r\n// //           setError(response.message || 'Signup failed');\r\n// //           setStep(1);\r\n// //         }\r\n// //       } catch (signupErr) {\r\n// //         setError(signupErr.message || 'Signup failed. Please try again.');\r\n// //         setStep(1);\r\n// //       }\r\n// //     } catch (err) {\r\n// //       setOtpError(err.message || 'Invalid OTP. Please try again.');\r\n// //     } finally {\r\n// //       setIsOtpLoading(false);\r\n// //       setIsLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   if (showDashboard && userIds.length > 0) {\r\n// //     return (\r\n// //       <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// //         <div className=\"max-w-md w-full space-y-8\">\r\n// //           <h2 className=\"text-2xl font-bold text-center\">User IDs for this mobile</h2>\r\n// //           <ul className=\"mt-4 mb-6\">\r\n// //             {userIds.map((id) => (\r\n// //               <li key={id} className=\"text-lg text-center py-1\">{id}</li>\r\n// //             ))}\r\n// //           </ul>\r\n// //           <button \r\n// //             onClick={() => setShowDashboard(false)} \r\n// //             className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\r\n// //           >\r\n// //             Create another user\r\n// //           </button>\r\n// //         </div>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   if (step === 2) {\r\n// //     return (\r\n// //       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// //         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n// //         <div className=\"max-w-md w-full space-y-8\">\r\n// //           <div>\r\n// //             <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\r\n// //             <p className=\"text-center text-sm text-gray-600\">\r\n// //               Enter the 6-digit OTP sent to +91 {mobileForOtp}\r\n// //             </p>\r\n// //           </div>\r\n          \r\n// //           <div className=\"space-y-4\">\r\n// //             <div>\r\n// //               <input\r\n// //                 type=\"text\"\r\n// //                 value={otp}\r\n// //                 onChange={(e) => setOtp(e.target.value)}\r\n// //                 placeholder=\"Enter OTP\"\r\n// //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n// //                 maxLength=\"6\"\r\n// //               />\r\n// //             </div>\r\n            \r\n// //             <button\r\n// //               onClick={handleVerifyOtp}\r\n// //               disabled={isOtpLoading || otp.length !== 6}\r\n// //               className={`w-full py-2 px-4 rounded-md text-white ${isOtpLoading || otp.length !== 6 ? 'bg-indigo-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'} transition-colors`}\r\n// //             >\r\n// //               {isOtpLoading ? (\r\n// //                 <span className=\"flex items-center justify-center\">\r\n// //                   <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n// //                     <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n// //                     <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n// //                   </svg>\r\n// //                   Verifying...\r\n// //                 </span>\r\n// //               ) : 'Verify OTP'}\r\n// //             </button>\r\n            \r\n// //             <button\r\n// //               onClick={() => sendOtp(mobileForOtp)}\r\n// //               disabled={isOtpLoading}\r\n// //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors disabled:opacity-50\"\r\n// //             >\r\n// //               Resend OTP\r\n// //             </button>\r\n            \r\n// //             {otpMessage && (\r\n// //               <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\r\n// //                 {otpMessage}\r\n// //               </div>\r\n// //             )}\r\n            \r\n// //             {otpError && (\r\n// //               <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\r\n// //                 {otpError}\r\n// //               </div>\r\n// //             )}\r\n            \r\n// //             <button \r\n// //               onClick={() => setStep(1)}\r\n// //               className=\"w-full py-2 px-4 text-indigo-600 hover:text-indigo-800 transition-colors\"\r\n// //             >\r\n// //               Back to Signup\r\n// //             </button>\r\n// //           </div>\r\n// //         </div>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   return (\r\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n// //       <div className=\"max-w-md w-full space-y-8\">\r\n// //         <div>\r\n// //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n// //             Create your account\r\n// //           </h2>\r\n// //           <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n// //             Enter your details to create a user ID under your mobile\r\n// //           </p>\r\n// //         </div>\r\n        \r\n// //         <Formik\r\n// //           initialValues={{\r\n// //             name: '',\r\n// //             email: '',\r\n// //             mobileNumber: '',\r\n// //             password: '',\r\n// //             confirmPassword: ''\r\n// //           }}\r\n// //           validationSchema={validationSchema}\r\n// //           onSubmit={handleSubmit}\r\n// //         >\r\n// //           {({ isSubmitting, isValid, dirty }) => (\r\n// //             <Form className=\"mt-8 space-y-6\">\r\n// //               <div className=\"space-y-4\">\r\n// //                 <div>\r\n// //                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                     Full Name\r\n// //                   </label>\r\n// //                   <Field \r\n// //                     id=\"name\" \r\n// //                     name=\"name\" \r\n// //                     type=\"text\" \r\n// //                     autoComplete=\"name\" \r\n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// //                     placeholder=\"Enter your full name\"\r\n// //                   />\r\n// //                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// //                 </div>\r\n                \r\n// //                 <div>\r\n// //                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                     Email (optional)\r\n// //                   </label>\r\n// //                   <Field \r\n// //                     id=\"email\" \r\n// //                     name=\"email\" \r\n// //                     type=\"email\" \r\n// //                     autoComplete=\"email\" \r\n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// //                     placeholder=\"Enter your email\"\r\n// //                   />\r\n// //                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// //                 </div>\r\n                \r\n// //                 <div>\r\n// //                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                     Mobile Number\r\n// //                   </label>\r\n// //                   <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n// //                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 sm:text-sm\">\r\n// //                       +91\r\n// //                     </span>\r\n// //                     <Field \r\n// //                       id=\"mobileNumber\" \r\n// //                       name=\"mobileNumber\" \r\n// //                       type=\"tel\" \r\n// //                       autoComplete=\"tel\" \r\n// //                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// //                       placeholder=\"Enter your 10-digit mobile number\"\r\n// //                       maxLength=\"10\"\r\n// //                     />\r\n// //                   </div>\r\n// //                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// //                 </div>\r\n                \r\n// //                 <div>\r\n// //                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                     Password\r\n// //                   </label>\r\n// //                   <Field \r\n// //                     id=\"password\" \r\n// //                     name=\"password\" \r\n// //                     type=\"password\" \r\n// //                     autoComplete=\"new-password\" \r\n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// //                     placeholder=\"Enter your password\"\r\n// //                   />\r\n// //                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// //                 </div>\r\n                \r\n// //                 <div>\r\n// //                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                     Confirm Password\r\n// //                   </label>\r\n// //                   <Field \r\n// //                     id=\"confirmPassword\" \r\n// //                     name=\"confirmPassword\" \r\n// //                     type=\"password\" \r\n// //                     autoComplete=\"new-password\" \r\n// //                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// //                     placeholder=\"Confirm your password\"\r\n// //                   />\r\n// //                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n// //                 </div>\r\n// //               </div>\r\n              \r\n// //               {error && (\r\n// //                 <div className=\"rounded-md bg-red-50 p-4\">\r\n// //                   <div className=\"flex\">\r\n// //                     <div className=\"ml-3\">\r\n// //                       <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\r\n// //                     </div>\r\n// //                   </div>\r\n// //                 </div>\r\n// //               )}\r\n              \r\n// //               <div>\r\n// //                 <button\r\n// //                   type=\"submit\"\r\n// //                   disabled={isSubmitting || isLoading || !isValid || !dirty}\r\n// //                   className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${isSubmitting || isLoading || !isValid || !dirty ? 'bg-indigo-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors`}\r\n// //                 >\r\n// //                   {isLoading ? (\r\n// //                     <span className=\"flex items-center justify-center\">\r\n// //                       <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n// //                         <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n// //                         <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n// //                       </svg>\r\n// //                       Processing...\r\n// //                     </span>\r\n// //                   ) : 'Send OTP'}\r\n// //                 </button>\r\n// //               </div>\r\n              \r\n// //               <div className=\"text-center\">\r\n// //                 <button\r\n// //                   type=\"button\"\r\n// //                   onClick={onSwitchToLogin}\r\n// //                   className=\"font-medium text-indigo-600 hover:text-indigo-500 transition-colors\"\r\n// //                 >\r\n// //                   Already have an account? Sign in\r\n// //                 </button>\r\n// //               </div>\r\n// //             </Form>\r\n// //           )}\r\n// //         </Formik>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default SignupForm;\r\n\r\n\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n// import { authAPI } from '../../services/api';\r\n// import { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\r\n\r\n// const SignupForm = ({ onSignupSuccess, onSwitchToLogin }) => {\r\n//   // State management\r\n//   const [step, setStep] = useState(1); // 1: form, 2: otp\r\n//   const [loading, setLoading] = useState({\r\n//     form: false,\r\n//     otp: false,\r\n//     resend: false\r\n//   });\r\n//   const [error, setError] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const [formData, setFormData] = useState(null);\r\n//   const [mobileForOtp, setMobileForOtp] = useState('');\r\n//   const [otp, setOtp] = useState('');\r\n//   const recaptchaVerifier = useRef(null);\r\n\r\n//   // Form validation schema\r\n//   const validationSchema = Yup.object({\r\n//     name: Yup.string()\r\n//       .min(2, 'Name must be at least 2 characters')\r\n//       .max(50, 'Name cannot exceed 50 characters')\r\n//       .required('Name is required'),\r\n//     email: Yup.string()\r\n//       .email('Please enter a valid email address')\r\n//       .nullable(),\r\n//     mobileNumber: Yup.string()\r\n//       .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\r\n//       .required('Mobile number is required'),\r\n//     password: Yup.string()\r\n//       .min(8, 'Password must be at least 8 characters')\r\n//       .matches(\r\n//         /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\r\n//         'Password must contain at least one uppercase, one lowercase, one number and one special character'\r\n//       )\r\n//       .required('Password is required'),\r\n//     confirmPassword: Yup.string()\r\n//       .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n//       .required('Confirm password is required'),\r\n//   });\r\n\r\n//   // Initialize reCAPTCHA\r\n//   useEffect(() => {\r\n//     recaptchaVerifier.current = new RecaptchaVerifier(\r\n//       'recaptcha-container',\r\n//       {\r\n//         size: 'invisible',\r\n//         callback: () => {\r\n//           // This will be called when reCAPTCHA is solved\r\n//         },\r\n//       },\r\n//       auth\r\n//     );\r\n\r\n//     return () => {\r\n//       if (recaptchaVerifier.current) {\r\n//         recaptchaVerifier.current.clear();\r\n//       }\r\n//     };\r\n//   }, []);\r\n\r\n//   const sendOtp = async (mobile) => {\r\n//     setLoading(prev => ({ ...prev, form: true }));\r\n//     setError('');\r\n//     setMessage('');\r\n    \r\n//     try {\r\n//       const phoneNumber = `+91${mobile}`;\r\n//       const confirmationResult = await signInWithPhoneNumber(\r\n//         auth,\r\n//         phoneNumber,\r\n//         recaptchaVerifier.current\r\n//       );\r\n      \r\n//       window.confirmationResult = confirmationResult;\r\n//       setMessage('OTP sent to your mobile number.');\r\n//       setMobileForOtp(mobile);\r\n//       setStep(2);\r\n//     } catch (err) {\r\n//       console.error('OTP Error:', err);\r\n//       setError(err.message || 'Failed to send OTP. Please try again.');\r\n//       // Reset recaptcha on error\r\n//       recaptchaVerifier.current.clear();\r\n//       recaptchaVerifier.current = new RecaptchaVerifier(\r\n//         'recaptcha-container',\r\n//         {\r\n//           size: 'invisible',\r\n//           callback: () => {},\r\n//         },\r\n//         auth\r\n//       );\r\n//     } finally {\r\n//       setLoading(prev => ({ ...prev, form: false }));\r\n//     }\r\n//   };\r\n\r\n//   const resendOtp = async () => {\r\n//     setLoading(prev => ({ ...prev, resend: true }));\r\n//     setError('');\r\n    \r\n//     try {\r\n//       await sendOtp(mobileForOtp);\r\n//       setMessage('New OTP sent to your mobile number.');\r\n//     } catch (err) {\r\n//       setError(err.message || 'Failed to resend OTP. Please try again.');\r\n//     } finally {\r\n//       setLoading(prev => ({ ...prev, resend: false }));\r\n//     }\r\n//   };\r\n\r\n//   const verifyOtp = async () => {\r\n//     setLoading(prev => ({ ...prev, otp: true }));\r\n//     setError('');\r\n    \r\n//     try {\r\n//       // Verify OTP with Firebase\r\n//       await window.confirmationResult.confirm(otp);\r\n      \r\n//       // OTP verified - proceed with account creation\r\n//       try {\r\n//         const response = await authAPI.signup({\r\n//           name: formData.name,\r\n//           email: formData.email,\r\n//           mobileNumber: formData.mobileNumber,\r\n//           password: formData.password,\r\n//         });\r\n        \r\n//         if (response.success) {\r\n//           onSignupSuccess?.(response.data);\r\n//         } else {\r\n//           throw new Error(response.message || 'Signup failed');\r\n//         }\r\n//       } catch (signupErr) {\r\n//         throw new Error(signupErr.message || 'Signup failed. Please try again.');\r\n//       }\r\n//     } catch (err) {\r\n//       setError(err.message || 'Invalid OTP. Please try again.');\r\n//     } finally {\r\n//       setLoading(prev => ({ ...prev, otp: false }));\r\n//     }\r\n//   };\r\n\r\n//   const handleFormSubmit = async (values, { setSubmitting }) => {\r\n//     setFormData(values);\r\n//     await sendOtp(values.mobileNumber);\r\n//     setSubmitting(false);\r\n//   };\r\n\r\n//   // OTP Verification Step\r\n//   if (step === 2) {\r\n//     return (\r\n//       <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n//         <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n//         <div className=\"max-w-md w-full space-y-8\">\r\n//           <div className=\"text-center\">\r\n//             <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\r\n//             <p className=\"mt-2 text-sm text-gray-600\">\r\n//               Enter the 6-digit OTP sent to +91 {mobileForOtp}\r\n//             </p>\r\n//           </div>\r\n          \r\n//           <div className=\"space-y-4\">\r\n//             <div>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={otp}\r\n//                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\r\n//                 placeholder=\"Enter 6-digit OTP\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\r\n//                 inputMode=\"numeric\"\r\n//                 autoFocus\r\n//               />\r\n//             </div>\r\n            \r\n//             <button\r\n//               onClick={verifyOtp}\r\n//               disabled={loading.otp || otp.length !== 6}\r\n//               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n//             >\r\n//               {loading.otp ? (\r\n//                 <>\r\n//                   <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n//                     <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n//                     <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n//                   </svg>\r\n//                   Verifying...\r\n//                 </>\r\n//               ) : 'Verify OTP'}\r\n//             </button>\r\n            \r\n//             <button\r\n//               onClick={resendOtp}\r\n//               disabled={loading.resend}\r\n//               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\r\n//             >\r\n//               {loading.resend ? 'Resending OTP...' : 'Resend OTP'}\r\n//             </button>\r\n            \r\n//             {message && (\r\n//               <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\r\n//                 {message}\r\n//               </div>\r\n//             )}\r\n            \r\n//             {error && (\r\n//               <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\r\n//                 {error}\r\n//               </div>\r\n//             )}\r\n            \r\n//             <button \r\n//               onClick={() => {\r\n//                 setStep(1);\r\n//                 setError('');\r\n//                 setMessage('');\r\n//               }}\r\n//               className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\r\n//             >\r\n//               ← Back to Signup\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Initial Signup Form\r\n//   return (\r\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n//       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n//       <div className=\"max-w-md w-full space-y-8\">\r\n//         <div className=\"text-center\">\r\n//           <h2 className=\"text-3xl font-extrabold text-gray-900\">\r\n//             Create your account\r\n//           </h2>\r\n//           <p className=\"mt-2 text-sm text-gray-600\">\r\n//             Enter your details to get started\r\n//           </p>\r\n//         </div>\r\n        \r\n//         <Formik\r\n//           initialValues={{\r\n//             name: '',\r\n//             email: '',\r\n//             mobileNumber: '',\r\n//             password: '',\r\n//             confirmPassword: ''\r\n//           }}\r\n//           validationSchema={validationSchema}\r\n//           onSubmit={handleFormSubmit}\r\n//         >\r\n//           {({ isSubmitting, isValid, dirty }) => (\r\n//             <Form className=\"mt-8 space-y-6\">\r\n//               <div className=\"space-y-4\">\r\n//                 <div>\r\n//                   <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n//                     Full Name\r\n//                   </label>\r\n//                   <Field \r\n//                     id=\"name\" \r\n//                     name=\"name\" \r\n//                     type=\"text\" \r\n//                     autoComplete=\"name\" \r\n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                     placeholder=\"Your full name\"\r\n//                   />\r\n//                   <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n//                 </div>\r\n                \r\n//                 <div>\r\n//                   <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n//                     Email (optional)\r\n//                   </label>\r\n//                   <Field \r\n//                     id=\"email\" \r\n//                     name=\"email\" \r\n//                     type=\"email\" \r\n//                     autoComplete=\"email\" \r\n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                     placeholder=\"your.email@example.com\"\r\n//                   />\r\n//                   <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n//                 </div>\r\n                \r\n//                 <div>\r\n//                   <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\r\n//                     Mobile Number\r\n//                   </label>\r\n//                   <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n//                     <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\r\n//                       +91\r\n//                     </span>\r\n//                     <Field \r\n//                       id=\"mobileNumber\" \r\n//                       name=\"mobileNumber\" \r\n//                       type=\"tel\" \r\n//                       autoComplete=\"tel\" \r\n//                       className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                       placeholder=\"9876543210\"\r\n//                       maxLength=\"10\"\r\n//                     />\r\n//                   </div>\r\n//                   <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n//                 </div>\r\n                \r\n//                 <div>\r\n//                   <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n//                     Password\r\n//                   </label>\r\n//                   <Field \r\n//                     id=\"password\" \r\n//                     name=\"password\" \r\n//                     type=\"password\" \r\n//                     autoComplete=\"new-password\" \r\n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                     placeholder=\"At least 8 characters\"\r\n//                   />\r\n//                   <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n//                 </div>\r\n                \r\n//                 <div>\r\n//                   <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n//                     Confirm Password\r\n//                   </label>\r\n//                   <Field \r\n//                     id=\"confirmPassword\" \r\n//                     name=\"confirmPassword\" \r\n//                     type=\"password\" \r\n//                     autoComplete=\"new-password\" \r\n//                     className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                     placeholder=\"Confirm your password\"\r\n//                   />\r\n//                   <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               {error && (\r\n//                 <div className=\"rounded-md bg-red-50 p-3\">\r\n//                   <p className=\"text-sm text-red-700\">{error}</p>\r\n//                 </div>\r\n//               )}\r\n              \r\n//               <div>\r\n//                 <button\r\n//                   type=\"submit\"\r\n//                   disabled={loading.form || !isValid || !dirty}\r\n//                   className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n//                 >\r\n//                   {loading.form ? (\r\n//                     <>\r\n//                       <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n//                         <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n//                         <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n//                       </svg>\r\n//                       Sending OTP...\r\n//                     </>\r\n//                   ) : 'Send OTP'}\r\n//                 </button>\r\n//               </div>\r\n              \r\n//               <div className=\"text-center text-sm\">\r\n//                 <p className=\"text-gray-600\">\r\n//                   Already have an account?{' '}\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={onSwitchToLogin}\r\n//                     className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n//                   >\r\n//                     Sign in\r\n//                   </button>\r\n//                 </p>\r\n//               </div>\r\n//             </Form>\r\n//           )}\r\n//         </Formik>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SignupForm;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber } from '../../firebase';\r\n\r\nconst SignupForm = () => {\r\n  const [step, setStep] = useState(1); // 1: form, 2: otp\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [mobileForOtp, setMobileForOtp] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string()\r\n      .min(2, 'Name must be at least 2 characters')\r\n      .max(50, 'Name cannot exceed 50 characters')\r\n      .required('Name is required'),\r\n    email: Yup.string()\r\n      .email('Please enter a valid email address')\r\n      .nullable(),\r\n    mobileNumber: Yup.string()\r\n      .matches(/^[0-9]{10}$/, 'Please enter a valid 10-digit mobile number')\r\n      .required('Mobile number is required'),\r\n    password: Yup.string()\r\n      .min(8, 'Password must be at least 8 characters')\r\n      .matches(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\r\n        'Password must contain at least one uppercase, one lowercase, one number and one special character'\r\n      )\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n      .required('Confirm password is required'),\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.recaptchaVerifier = new RecaptchaVerifier(\r\n      'recaptcha-container',\r\n      { size: 'invisible' },\r\n      auth\r\n    );\r\n\r\n    return () => {\r\n      if (window.recaptchaVerifier) {\r\n        window.recaptchaVerifier.clear();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const sendOtp = async (mobile) => {\r\n    setLoading(true);\r\n    setError('');\r\n    setMessage('');\r\n    \r\n    try {\r\n      const phoneNumber = `+91${mobile}`;\r\n      const confirmationResult = await signInWithPhoneNumber(\r\n        auth,\r\n        phoneNumber,\r\n        window.recaptchaVerifier\r\n      );\r\n      \r\n      window.confirmationResult = confirmationResult;\r\n      setMessage('OTP sent to your mobile number.');\r\n      setMobileForOtp(mobile);\r\n      setStep(2);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to send OTP. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      await window.confirmationResult.confirm(otp);\r\n      setMessage('Account created successfully! Redirecting to login...');\r\n      setTimeout(() => navigate('/login'), 2000);\r\n    } catch (err) {\r\n      setError(err.message || 'Invalid OTP. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    await sendOtp(values.mobileNumber);\r\n    // You would typically save formData to use after OTP verification\r\n  };\r\n\r\n  if (step === 2) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n        <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n        <div className=\"max-w-md w-full space-y-8\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-3xl font-extrabold text-gray-900\">Verify OTP</h2>\r\n            <p className=\"mt-2 text-sm text-gray-600\">\r\n              Enter the 6-digit OTP sent to +91 {mobileForOtp}\r\n            </p>\r\n          </div>\r\n          \r\n          {message && (\r\n            <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\r\n              {message}\r\n            </div>\r\n          )}\r\n\r\n          {error && (\r\n            <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                value={otp}\r\n                onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\r\n                placeholder=\"Enter 6-digit OTP\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\r\n                inputMode=\"numeric\"\r\n                autoFocus\r\n              />\r\n            </div>\r\n            \r\n            <button\r\n              onClick={verifyOtp}\r\n              disabled={loading || otp.length !== 6}\r\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Verifying...' : 'Verify OTP'}\r\n            </button>\r\n            \r\n            <button\r\n              onClick={() => sendOtp(mobileForOtp)}\r\n              disabled={loading}\r\n              className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\r\n            >\r\n              Resend OTP\r\n            </button>\r\n            \r\n            <button \r\n              onClick={() => {\r\n                setStep(1);\r\n                setError('');\r\n                setMessage('');\r\n              }}\r\n              className=\"w-full py-2 text-indigo-600 hover:text-indigo-800 text-sm\"\r\n            >\r\n              ← Back to Signup\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-3xl font-extrabold text-gray-900\">\r\n            Create your account\r\n          </h2>\r\n          <p className=\"mt-2 text-sm text-gray-600\">\r\n            Or{' '}\r\n            <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n              sign in to your account\r\n            </Link>\r\n          </p>\r\n        </div>\r\n        \r\n        <Formik\r\n          initialValues={{\r\n            name: '',\r\n            email: '',\r\n            mobileNumber: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleFormSubmit}\r\n        >\r\n          {({ isSubmitting, isValid, dirty }) => (\r\n            <Form className=\"mt-8 space-y-6\">\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n                    Full Name\r\n                  </label>\r\n                  <Field \r\n                    id=\"name\" \r\n                    name=\"name\" \r\n                    type=\"text\" \r\n                    autoComplete=\"name\" \r\n                    className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                    placeholder=\"Your full name\"\r\n                  />\r\n                  <ErrorMessage name=\"name\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                    Email (optional)\r\n                  </label>\r\n                  <Field \r\n                    id=\"email\" \r\n                    name=\"email\" \r\n                    type=\"email\" \r\n                    autoComplete=\"email\" \r\n                    className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                    placeholder=\"your.email@example.com\"\r\n                  />\r\n                  <ErrorMessage name=\"email\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label htmlFor=\"mobileNumber\" className=\"block text-sm font-medium text-gray-700\">\r\n                    Mobile Number\r\n                  </label>\r\n                  <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n                    <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\r\n                      +91\r\n                    </span>\r\n                    <Field \r\n                      id=\"mobileNumber\" \r\n                      name=\"mobileNumber\" \r\n                      type=\"tel\" \r\n                      autoComplete=\"tel\" \r\n                      className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                      placeholder=\"9876543210\"\r\n                      maxLength=\"10\"\r\n                    />\r\n                  </div>\r\n                  <ErrorMessage name=\"mobileNumber\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                    Password\r\n                  </label>\r\n                  <Field \r\n                    id=\"password\" \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    autoComplete=\"new-password\" \r\n                    className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                    placeholder=\"At least 8 characters\"\r\n                  />\r\n                  <ErrorMessage name=\"password\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n                    Confirm Password\r\n                  </label>\r\n                  <Field \r\n                    id=\"confirmPassword\" \r\n                    name=\"confirmPassword\" \r\n                    type=\"password\" \r\n                    autoComplete=\"new-password\" \r\n                    className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                    placeholder=\"Confirm your password\"\r\n                  />\r\n                  <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"mt-1 text-sm text-red-600\" />\r\n                </div>\r\n              </div>\r\n              \r\n              {error && (\r\n                <div className=\"rounded-md bg-red-50 p-3\">\r\n                  <p className=\"text-sm text-red-700\">{error}</p>\r\n                </div>\r\n              )}\r\n              \r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={loading || !isValid || !dirty}\r\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n                >\r\n                  {loading ? 'Sending OTP...' : 'Sign Up'}\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}