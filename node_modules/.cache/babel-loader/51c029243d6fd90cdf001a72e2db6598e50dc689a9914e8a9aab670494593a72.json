{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moazz\\\\Desktop\\\\frontend\\\\frontend\\\\frontend\\\\src\\\\pages\\\\ForgotPassword.jsx\",\n  _s = $RefreshSig$();\n// // // // import React, { useState } from 'react';\n// // // // import { useNavigate } from 'react-router-dom';\n// // // // import { NavLink } from 'react-router-dom';\n// // // // import { authAPI } from '../services/api';\n// // // // import { API_URL } from '../config';\n\n// // // // const ForgotPassword = () => {\n// // // //   const [step, setStep] = useState(1); // 1: mobile, 2: otp, 3: reset\n// // // //   const [mobile, setMobile] = useState('');\n// // // //   const [otp, setOtp] = useState('');\n// // // //   const [otpError, setOtpError] = useState('');\n// // // //   const [otpMessage, setOtpMessage] = useState('');\n// // // //   const [isOtpLoading, setIsOtpLoading] = useState(false);\n// // // //   const [newPassword, setNewPassword] = useState('');\n// // // //   const [confirmPassword, setConfirmPassword] = useState('');\n// // // //   const [resetError, setResetError] = useState('');\n// // // //   const [resetMessage, setResetMessage] = useState('');\n// // // //   const navigate = useNavigate();\n\n// // // //   const sendOtp = async () => {\n// // // //     setIsOtpLoading(true);\n// // // //     setOtpError('');\n// // // //     setOtpMessage('');\n// // // //     try {\n// // // //       // Using fetch with API_URL from config\n// // // //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/send-otp`, {\n// // // //         method: 'POST',\n// // // //         headers: {\n// // // //           'Content-Type': 'application/json',\n// // // //         },\n// // // //         body: JSON.stringify({ mobile }),\n// // // //       });\n// // // //       const data = await response.json();\n// // // //       if (!response.ok) {\n// // // //         throw new Error(data.error || 'Failed to send OTP');\n// // // //       }\n// // // //       setOtpMessage('OTP sent to your mobile number.');\n// // // //       setStep(2);\n// // // //     } catch (err) {\n// // // //       setOtpError(err.message || 'Failed to send OTP');\n// // // //     } finally {\n// // // //       setIsOtpLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   const verifyOtp = async () => {\n// // // //     setIsOtpLoading(true);\n// // // //     setOtpError('');\n// // // //     setOtpMessage('');\n// // // //     try {\n// // // //       // Using fetch with API_URL from config\n// // // //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/verify-otp`, {\n// // // //         method: 'POST',\n// // // //         headers: {\n// // // //           'Content-Type': 'application/json',\n// // // //         },\n// // // //         body: JSON.stringify({ mobile, otp }),\n// // // //       });\n// // // //       const data = await response.json();\n// // // //       if (!response.ok) {\n// // // //         throw new Error(data.error || 'OTP verification failed');\n// // // //       }\n// // // //       setStep(3);\n// // // //     } catch (err) {\n// // // //       setOtpError(err.message || 'OTP verification failed');\n// // // //     } finally {\n// // // //       setIsOtpLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   const handleResetPassword = async () => {\n// // // //     setResetError('');\n// // // //     setResetMessage('');\n// // // //     if (!newPassword || newPassword.length < 6) {\n// // // //       setResetError('Password must be at least 6 characters');\n// // // //       return;\n// // // //     }\n// // // //     if (newPassword !== confirmPassword) {\n// // // //       setResetError('Passwords do not match');\n// // // //       return;\n// // // //     }\n// // // //     try {\n// // // //       // Using fetch with API_URL from config\n// // // //       const response = await fetch(`${API_URL}/auth/reset-password`, {\n// // // //         method: 'POST',\n// // // //         headers: {\n// // // //           'Content-Type': 'application/json',\n// // // //         },\n// // // //         body: JSON.stringify({ mobile, newPassword }),\n// // // //       });\n// // // //       const data = await response.json();\n// // // //       if (!response.ok) {\n// // // //         throw new Error(data.error || 'Password reset failed');\n// // // //       }\n// // // //       setResetMessage('Password reset successful! Redirecting to login...');\n// // // //       setTimeout(() => navigate('/login'), 2000);\n// // // //     } catch (err) {\n// // // //       setResetError(err.message || 'Password reset failed');\n// // // //     }\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // // //       <div className=\"max-w-md w-full space-y-8\">\n// // // //         <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Forgot Password</h2>\n// // // //         {step === 1 && (\n// // // //           <div className=\"space-y-4\">\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={mobile}\n// // // //               onChange={e => setMobile(e.target.value)}\n// // // //               placeholder=\"Enter your mobile number\"\n// // // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n// // // //             />\n// // // //             <button\n// // // //               onClick={sendOtp}\n// // // //               disabled={isOtpLoading || !mobile}\n// // // //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\n// // // //             >\n// // // //               {isOtpLoading ? 'Sending OTP...' : 'Send OTP'}\n// // // //             </button>\n// // // //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\n// // // //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\n// // // //           </div>\n// // // //         )}\n// // // //         {step === 2 && (\n// // // //           <div className=\"space-y-4\">\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={otp}\n// // // //               onChange={e => setOtp(e.target.value)}\n// // // //               placeholder=\"Enter OTP\"\n// // // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n// // // //             />\n// // // //             <button\n// // // //               onClick={verifyOtp}\n// // // //               disabled={isOtpLoading || !otp}\n// // // //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\n// // // //             >\n// // // //               {isOtpLoading ? 'Verifying...' : 'Verify OTP'}\n// // // //             </button>\n// // // //             <button\n// // // //               onClick={sendOtp}\n// // // //               disabled={isOtpLoading}\n// // // //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md\"\n// // // //             >\n// // // //               Resend OTP\n// // // //             </button>\n// // // //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\n// // // //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\n// // // //             <button onClick={() => setStep(1)} className=\"w-full py-2 px-4 text-indigo-600\">Back</button>\n// // // //           </div>\n// // // //         )}\n// // // //         {step === 3 && (\n// // // //           <div className=\"space-y-4\">\n// // // //             <input\n// // // //               type=\"password\"\n// // // //               value={newPassword}\n// // // //               onChange={e => setNewPassword(e.target.value)}\n// // // //               placeholder=\"Enter new password\"\n// // // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"password\"\n// // // //               value={confirmPassword}\n// // // //               onChange={e => setConfirmPassword(e.target.value)}\n// // // //               placeholder=\"Confirm new password\"\n// // // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n// // // //             />\n// // // //             <button\n// // // //               onClick={handleResetPassword}\n// // // //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\n// // // //             >\n// // // //               Reset Password\n// // // //             </button>\n// // // //             {resetMessage && <div className=\"text-green-600 text-sm\">{resetMessage}</div>}\n// // // //             {resetError && <div className=\"text-red-600 text-sm\">{resetError}</div>}\n// // // //           </div>\n// // // //         )}\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default ForgotPassword;\n\n// // // import React, { useState } from 'react';\n// // // import { useNavigate } from 'react-router-dom';\n\n// // // import { \n// // //   auth, \n// // //   RecaptchaVerifier, \n// // //   signInWithPhoneNumber,\n// // //   updatePassword \n// // // } from '../firebase';\n\n// // // const ForgotPasswordForm = () => {\n// // //   const [mobile, setMobile] = useState('');\n// // //   const [otp, setOtp] = useState('');\n// // //   const [newPassword, setNewPassword] = useState('');\n// // //   const [confirmPassword, setConfirmPassword] = useState('');\n// // //   const [step, setStep] = useState(1); // 1: enter mobile, 2: enter OTP, 3: enter new password\n// // //   const [loading, setLoading] = useState(false);\n// // //   const [error, setError] = useState('');\n// // //   const [message, setMessage] = useState('');\n// // //   const navigate = useNavigate();\n\n// // //   const setUpRecaptcha = () => {\n// // //     const recaptchaVerifier = new RecaptchaVerifier(\n// // //       'recaptcha-container', \n// // //       { size: 'invisible' }, \n// // //       auth\n// // //     );\n// // //     return recaptchaVerifier;\n// // //   };\n\n// // //   const sendOtp = async () => {\n// // //     setLoading(true);\n// // //     setError('');\n// // //     setMessage('');\n// // //     try {\n// // //       const appVerifier = setUpRecaptcha();\n// // //       const phoneNumber = `+${mobile.replace(/\\D/g, '')}`;\n\n// // //       const confirmationResult = await auth().signInWithPhoneNumber(\n// // //         phoneNumber, \n// // //         appVerifier\n// // //       );\n\n// // //       window.confirmationResult = confirmationResult;\n// // //       setStep(2);\n// // //       setMessage('OTP sent to your mobile number.');\n// // //     } catch (err) {\n// // //       setError(err.message || 'Failed to send OTP');\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   const verifyOtp = async () => {\n// // //     setLoading(true);\n// // //     setError('');\n// // //     setMessage('');\n// // //     try {\n// // //       const result = await window.confirmationResult.confirm(otp);\n// // //       // Store the user credential for password update\n// // //       window.passwordResetUser = result.user;\n// // //       setStep(3);\n// // //       setMessage('OTP verified. Please set your new password.');\n// // //     } catch (err) {\n// // //       setError(err.message || 'Invalid OTP');\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   const handleResetPassword = async () => {\n// // //     setLoading(true);\n// // //     setError('');\n// // //     setMessage('');\n\n// // //     // Client-side validation\n// // //     if (!newPassword || newPassword.length < 6) {\n// // //       setError('Password must be at least 6 characters');\n// // //       setLoading(false);\n// // //       return;\n// // //     }\n// // //     if (newPassword !== confirmPassword) {\n// // //       setError('Passwords do not match');\n// // //       setLoading(false);\n// // //       return;\n// // //     }\n\n// // //     try {\n// // //       // Update password using Firebase\n// // //       await updatePassword(window.passwordResetUser, newPassword);\n// // //       setMessage('Password reset successfully! Redirecting to login...');\n// // //       setTimeout(() => navigate('/login'), 2000);\n// // //     } catch (err) {\n// // //       setError(err.message || 'Password reset failed');\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// // //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// // //       <div className=\"max-w-md w-full space-y-8\">\n// // //         <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n// // //           {step === 1 && 'Reset Password'}\n// // //           {step === 2 && 'Verify OTP'}\n// // //           {step === 3 && 'Set New Password'}\n// // //         </h2>\n\n// // //         {message && (\n// // //           <div className=\"rounded-md bg-green-50 p-4\">\n// // //             <div className=\"flex\">\n// // //               <div className=\"ml-3\">\n// // //                 <p className=\"text-sm font-medium text-green-800\">{message}</p>\n// // //               </div>\n// // //             </div>\n// // //           </div>\n// // //         )}\n\n// // //         {error && (\n// // //           <div className=\"rounded-md bg-red-50 p-4\">\n// // //             <div className=\"flex\">\n// // //               <div className=\"ml-3\">\n// // //                 <p className=\"text-sm font-medium text-red-800\">{error}</p>\n// // //               </div>\n// // //             </div>\n// // //           </div>\n// // //         )}\n\n// // //         {step === 1 && (\n// // //           <div className=\"space-y-4\">\n// // //             <div>\n// // //               <label htmlFor=\"mobile\" className=\"block text-sm font-medium text-gray-700\">\n// // //                 Mobile Number\n// // //               </label>\n// // //               <input\n// // //                 id=\"mobile\"\n// // //                 name=\"mobile\"\n// // //                 type=\"tel\"\n// // //                 value={mobile}\n// // //                 onChange={(e) => setMobile(e.target.value)}\n// // //                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n// // //                 placeholder=\"Enter your mobile number\"\n// // //               />\n// // //             </div>\n// // //             <button\n// // //               onClick={sendOtp}\n// // //               disabled={loading || !mobile}\n// // //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n// // //             >\n// // //               {loading ? 'Sending...' : 'Send OTP'}\n// // //             </button>\n// // //           </div>\n// // //         )}\n\n// // //         {step === 2 && (\n// // //           <div className=\"space-y-4\">\n// // //             <div>\n// // //               <label htmlFor=\"otp\" className=\"block text-sm font-medium text-gray-700\">\n// // //                 OTP\n// // //               </label>\n// // //               <input\n// // //                 id=\"otp\"\n// // //                 name=\"otp\"\n// // //                 type=\"text\"\n// // //                 value={otp}\n// // //                 onChange={(e) => setOtp(e.target.value)}\n// // //                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n// // //                 placeholder=\"Enter OTP\"\n// // //               />\n// // //             </div>\n// // //             <button\n// // //               onClick={verifyOtp}\n// // //               disabled={loading || !otp}\n// // //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n// // //             >\n// // //               {loading ? 'Verifying...' : 'Verify OTP'}\n// // //             </button>\n// // //             <button\n// // //               onClick={sendOtp}\n// // //               disabled={loading}\n// // //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-indigo-600 hover:text-indigo-500\"\n// // //             >\n// // //               Resend OTP\n// // //             </button>\n// // //             <button \n// // //               onClick={() => setStep(1)}\n// // //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-gray-600 hover:text-gray-500\"\n// // //             >\n// // //               Back\n// // //             </button>\n// // //           </div>\n// // //         )}\n\n// // //         {step === 3 && (\n// // //           <div className=\"space-y-4\">\n// // //             <div>\n// // //               <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700\">\n// // //                 New Password\n// // //               </label>\n// // //               <input\n// // //                 id=\"newPassword\"\n// // //                 name=\"newPassword\"\n// // //                 type=\"password\"\n// // //                 value={newPassword}\n// // //                 onChange={(e) => setNewPassword(e.target.value)}\n// // //                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n// // //                 placeholder=\"Enter new password\"\n// // //               />\n// // //             </div>\n// // //             <div>\n// // //               <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n// // //                 Confirm Password\n// // //               </label>\n// // //               <input\n// // //                 id=\"confirmPassword\"\n// // //                 name=\"confirmPassword\"\n// // //                 type=\"password\"\n// // //                 value={confirmPassword}\n// // //                 onChange={(e) => setConfirmPassword(e.target.value)}\n// // //                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n// // //                 placeholder=\"Confirm new password\"\n// // //               />\n// // //             </div>\n// // //             <button\n// // //               onClick={handleResetPassword}\n// // //               disabled={loading || !newPassword || !confirmPassword}\n// // //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n// // //             >\n// // //               {loading ? 'Resetting...' : 'Reset Password'}\n// // //             </button>\n// // //           </div>\n// // //         )}\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default ForgotPasswordForm;\n\n// // import React, { useState, useEffect } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import { auth, RecaptchaVerifier, signInWithPhoneNumber, updatePassword } from '../firebase';\n\n// // const ForgotPassword = () => {\n// //   const [mobile, setMobile] = useState('');\n// //   const [otp, setOtp] = useState('');\n// //   const [newPassword, setNewPassword] = useState('');\n// //   const [confirmPassword, setConfirmPassword] = useState('');\n// //   const [step, setStep] = useState(1); // 1: mobile, 2: otp, 3: reset\n// //   const [loading, setLoading] = useState(false);\n// //   const [error, setError] = useState('');\n// //   const [message, setMessage] = useState('');\n// //   const navigate = useNavigate();\n\n// //   useEffect(() => {\n// //     window.recaptchaVerifier = new RecaptchaVerifier(\n// //       'recaptcha-container',\n// //       { size: 'invisible' },\n// //       auth\n// //     );\n\n// //     return () => {\n// //       if (window.recaptchaVerifier) {\n// //         window.recaptchaVerifier.clear();\n// //       }\n// //     };\n// //   }, []);\n\n// //   const sendOtp = async () => {\n// //     setLoading(true);\n// //     setError('');\n// //     setMessage('');\n\n// //     try {\n// //       const phoneNumber = `+91${mobile}`;\n// //       const confirmationResult = await signInWithPhoneNumber(\n// //         auth,\n// //         phoneNumber,\n// //         window.recaptchaVerifier\n// //       );\n\n// //       window.confirmationResult = confirmationResult;\n// //       setMessage('OTP sent to your mobile number.');\n// //       setStep(2);\n// //     } catch (err) {\n// //       setError(err.message || 'Failed to send OTP');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const verifyOtp = async () => {\n// //     setLoading(true);\n// //     setError('');\n\n// //     try {\n// //       await window.confirmationResult.confirm(otp);\n// //       setMessage('OTP verified. Please set your new password.');\n// //       setStep(3);\n// //     } catch (err) {\n// //       setError(err.message || 'Invalid OTP');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const handleResetPassword = async () => {\n// //     if (newPassword !== confirmPassword) {\n// //       setError('Passwords do not match');\n// //       return;\n// //     }\n\n// //     if (newPassword.length < 6) {\n// //       setError('Password must be at least 6 characters');\n// //       return;\n// //     }\n\n// //     setLoading(true);\n// //     setError('');\n\n// //     try {\n// //       const user = auth.currentUser;\n// //       await updatePassword(user, newPassword);\n// //       setMessage('Password reset successfully! Redirecting to login...');\n// //       setTimeout(() => navigate('/login'), 2000);\n// //     } catch (err) {\n// //       setError(err.message || 'Failed to reset password');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n// //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\n// //       <div className=\"max-w-md w-full space-y-8\">\n// //         <div>\n// //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n// //             {step === 1 && 'Reset Password'}\n// //             {step === 2 && 'Verify OTP'}\n// //             {step === 3 && 'Set New Password'}\n// //           </h2>\n// //         </div>\n\n// //         {message && (\n// //           <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\n// //             {message}\n// //           </div>\n// //         )}\n\n// //         {error && (\n// //           <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n// //             {error}\n// //           </div>\n// //         )}\n\n// //         {step === 1 && (\n// //           <div className=\"space-y-4\">\n// //             <div>\n// //               <label htmlFor=\"mobile\" className=\"block text-sm font-medium text-gray-700\">\n// //                 Mobile Number\n// //               </label>\n// //               <div className=\"mt-1 flex rounded-md shadow-sm\">\n// //                 <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n// //                   +91\n// //                 </span>\n// //                 <input\n// //                   id=\"mobile\"\n// //                   name=\"mobile\"\n// //                   type=\"tel\"\n// //                   value={mobile}\n// //                   onChange={(e) => setMobile(e.target.value.replace(/\\D/g, '').slice(0, 10))}\n// //                   className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                   placeholder=\"9876543210\"\n// //                 />\n// //               </div>\n// //             </div>\n// //             <button\n// //               onClick={sendOtp}\n// //               disabled={loading || mobile.length !== 10}\n// //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n// //             >\n// //               {loading ? 'Sending OTP...' : 'Send OTP'}\n// //             </button>\n// //             <div className=\"text-center text-sm\">\n// //               <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n// //                 Back to Login\n// //               </Link>\n// //             </div>\n// //           </div>\n// //         )}\n\n// //         {step === 2 && (\n// //           <div className=\"space-y-4\">\n// //             <div>\n// //               <label htmlFor=\"otp\" className=\"block text-sm font-medium text-gray-700\">\n// //                 OTP\n// //               </label>\n// //               <input\n// //                 id=\"otp\"\n// //                 name=\"otp\"\n// //                 type=\"text\"\n// //                 value={otp}\n// //                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n// //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\n// //                 placeholder=\"Enter 6-digit OTP\"\n// //                 inputMode=\"numeric\"\n// //                 autoFocus\n// //               />\n// //             </div>\n// //             <button\n// //               onClick={verifyOtp}\n// //               disabled={loading || otp.length !== 6}\n// //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n// //             >\n// //               {loading ? 'Verifying...' : 'Verify OTP'}\n// //             </button>\n// //             <button\n// //               onClick={sendOtp}\n// //               disabled={loading}\n// //               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\n// //             >\n// //               Resend OTP\n// //             </button>\n// //           </div>\n// //         )}\n\n// //         {step === 3 && (\n// //           <div className=\"space-y-4\">\n// //             <div>\n// //               <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700\">\n// //                 New Password\n// //               </label>\n// //               <input\n// //                 id=\"newPassword\"\n// //                 name=\"newPassword\"\n// //                 type=\"password\"\n// //                 value={newPassword}\n// //                 onChange={(e) => setNewPassword(e.target.value)}\n// //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                 placeholder=\"Enter new password\"\n// //               />\n// //             </div>\n// //             <div>\n// //               <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n// //                 Confirm Password\n// //               </label>\n// //               <input\n// //                 id=\"confirmPassword\"\n// //                 name=\"confirmPassword\"\n// //                 type=\"password\"\n// //                 value={confirmPassword}\n// //                 onChange={(e) => setConfirmPassword(e.target.value)}\n// //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n// //                 placeholder=\"Confirm new password\"\n// //               />\n// //             </div>\n// //             <button\n// //               onClick={handleResetPassword}\n// //               disabled={loading || !newPassword || !confirmPassword}\n// //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n// //             >\n// //               {loading ? 'Resetting...' : 'Reset Password'}\n// //             </button>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default ForgotPassword;\n\n// const sendOtp = async () => {\n//   setLoading(true);\n//   setError('');\n//   setMessage('');\n\n//   try {\n//     const phoneNumber = `+91${mobile}`;\n//     if (!window.recaptchaVerifier) {\n//       window.recaptchaVerifier = new RecaptchaVerifier(auth, 'recaptcha-container', {\n//         size: 'invisible'\n//       });\n//     }\n\n//     const appVerifier = window.recaptchaVerifier;\n//     const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, appVerifier);\n\n//     window.confirmationResult = confirmationResult;\n//     setMessage('OTP sent to your mobile number.');\n//     setStep(2);\n//   } catch (err) {\n//     setError(err.code || err.message || 'Failed to send OTP');\n//   } finally {\n//     setLoading(false);\n//   }\n// };\n\n// const verifyOtp = async () => {\n//   setLoading(true);\n//   setError('');\n\n//   try {\n//     const result = await window.confirmationResult.confirm(otp);\n//     const user = result.user;\n//     setMessage('OTP verified. Please set your new password.');\n//     setStep(3);\n//   } catch (err) {\n//     setError(err.code || err.message || 'Invalid OTP');\n//   } finally {\n//     setLoading(false);\n//   }\n// };\n\n// const handleResetPassword = async () => {\n//   if (newPassword !== confirmPassword) {\n//     setError('Passwords do not match');\n//     return;\n//   }\n\n//   if (newPassword.length < 6) {\n//     setError('Password must be at least 6 characters');\n//     return;\n//   }\n\n//   setLoading(true);\n//   setError('');\n\n//   try {\n//     // 👉 Instead of Firebase updatePassword, call your backend API\n//     const response = await fetch(`${process.env.REACT_APP_API_URL}/auth/reset-password`, {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ mobile, newPassword })\n//     });\n\n//     if (!response.ok) throw new Error('Failed to reset password');\n\n//     setMessage('Password reset successfully! Redirecting to login...');\n//     setTimeout(() => navigate('/login'), 2000);\n//   } catch (err) {\n//     setError(err.message || 'Failed to reset password');\n//   } finally {\n//     setLoading(false);\n//   }\n// };\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\nimport { auth } from \"../firebase\"; // 👈 make sure firebase.js exports \"auth\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [mobile, setMobile] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  // 🔹 Step 1: Send OTP\n  const sendOtp = async () => {\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n    try {\n      const phoneNumber = `+91${mobile}`;\n      if (!window.recaptchaVerifier) {\n        window.recaptchaVerifier = new RecaptchaVerifier(auth, \"recaptcha-container\", {\n          size: \"invisible\"\n        });\n      }\n      const appVerifier = window.recaptchaVerifier;\n      const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, appVerifier);\n      window.confirmationResult = confirmationResult;\n      setMessage(\"✅ OTP sent to your mobile number.\");\n      setStep(2);\n    } catch (err) {\n      setError(err.code || err.message || \"Failed to send OTP\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 🔹 Step 2: Verify OTP\n  const verifyOtp = async () => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const result = await window.confirmationResult.confirm(otp);\n      if (result.user) {\n        setMessage(\"✅ OTP verified. Please set your new password.\");\n        setStep(3);\n      }\n    } catch (err) {\n      setError(err.code || err.message || \"Invalid OTP\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 🔹 Step 3: Reset Password via Backend\n  const handleResetPassword = async () => {\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    if (newPassword.length < 6) {\n      setError(\"Password must be at least 6 characters\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/auth/reset-password`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          mobile,\n          newPassword\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to reset password\");\n      setMessage(\"✅ Password reset successfully! Redirecting to login...\");\n      setTimeout(() => navigate(\"/login\"), 2000);\n    } catch (err) {\n      setError(err.message || \"Failed to reset password\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 19\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter mobile number\",\n        value: mobile,\n        onChange: e => setMobile(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendOtp,\n        disabled: loading,\n        children: loading ? \"Sending...\" : \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recaptcha-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 9\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verifyOtp,\n        disabled: loading,\n        children: loading ? \"Verifying...\" : \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 9\n    }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New Password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetPassword,\n        disabled: loading,\n        children: loading ? \"Resetting...\" : \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 847,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"aS25WnfJ+hKaJ3gfHwj7BbVLVD8=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","RecaptchaVerifier","signInWithPhoneNumber","auth","jsxDEV","_jsxDEV","ForgotPassword","_s","step","setStep","mobile","setMobile","otp","setOtp","newPassword","setNewPassword","confirmPassword","setConfirmPassword","loading","setLoading","error","setError","message","setMessage","navigate","sendOtp","phoneNumber","window","recaptchaVerifier","size","appVerifier","confirmationResult","err","code","verifyOtp","result","confirm","user","handleResetPassword","length","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","Error","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","value","onChange","e","target","onClick","disabled","id","_c","$RefreshReg$"],"sources":["C:/Users/moazz/Desktop/frontend/frontend/frontend/src/pages/ForgotPassword.jsx"],"sourcesContent":["// // // // import React, { useState } from 'react';\r\n// // // // import { useNavigate } from 'react-router-dom';\r\n// // // // import { NavLink } from 'react-router-dom';\r\n// // // // import { authAPI } from '../services/api';\r\n// // // // import { API_URL } from '../config';\r\n\r\n// // // // const ForgotPassword = () => {\r\n// // // //   const [step, setStep] = useState(1); // 1: mobile, 2: otp, 3: reset\r\n// // // //   const [mobile, setMobile] = useState('');\r\n// // // //   const [otp, setOtp] = useState('');\r\n// // // //   const [otpError, setOtpError] = useState('');\r\n// // // //   const [otpMessage, setOtpMessage] = useState('');\r\n// // // //   const [isOtpLoading, setIsOtpLoading] = useState(false);\r\n// // // //   const [newPassword, setNewPassword] = useState('');\r\n// // // //   const [confirmPassword, setConfirmPassword] = useState('');\r\n// // // //   const [resetError, setResetError] = useState('');\r\n// // // //   const [resetMessage, setResetMessage] = useState('');\r\n// // // //   const navigate = useNavigate();\r\n\r\n// // // //   const sendOtp = async () => {\r\n// // // //     setIsOtpLoading(true);\r\n// // // //     setOtpError('');\r\n// // // //     setOtpMessage('');\r\n// // // //     try {\r\n// // // //       // Using fetch with API_URL from config\r\n// // // //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/send-otp`, {\r\n// // // //         method: 'POST',\r\n// // // //         headers: {\r\n// // // //           'Content-Type': 'application/json',\r\n// // // //         },\r\n// // // //         body: JSON.stringify({ mobile }),\r\n// // // //       });\r\n// // // //       const data = await response.json();\r\n// // // //       if (!response.ok) {\r\n// // // //         throw new Error(data.error || 'Failed to send OTP');\r\n// // // //       }\r\n// // // //       setOtpMessage('OTP sent to your mobile number.');\r\n// // // //       setStep(2);\r\n// // // //     } catch (err) {\r\n// // // //       setOtpError(err.message || 'Failed to send OTP');\r\n// // // //     } finally {\r\n// // // //       setIsOtpLoading(false);\r\n// // // //     }\r\n// // // //   };\r\n\r\n// // // //   const verifyOtp = async () => {\r\n// // // //     setIsOtpLoading(true);\r\n// // // //     setOtpError('');\r\n// // // //     setOtpMessage('');\r\n// // // //     try {\r\n// // // //       // Using fetch with API_URL from config\r\n// // // //       const response = await fetch(`${API_URL.replace('/api', '')}/auth/verify-otp`, {\r\n// // // //         method: 'POST',\r\n// // // //         headers: {\r\n// // // //           'Content-Type': 'application/json',\r\n// // // //         },\r\n// // // //         body: JSON.stringify({ mobile, otp }),\r\n// // // //       });\r\n// // // //       const data = await response.json();\r\n// // // //       if (!response.ok) {\r\n// // // //         throw new Error(data.error || 'OTP verification failed');\r\n// // // //       }\r\n// // // //       setStep(3);\r\n// // // //     } catch (err) {\r\n// // // //       setOtpError(err.message || 'OTP verification failed');\r\n// // // //     } finally {\r\n// // // //       setIsOtpLoading(false);\r\n// // // //     }\r\n// // // //   };\r\n\r\n// // // //   const handleResetPassword = async () => {\r\n// // // //     setResetError('');\r\n// // // //     setResetMessage('');\r\n// // // //     if (!newPassword || newPassword.length < 6) {\r\n// // // //       setResetError('Password must be at least 6 characters');\r\n// // // //       return;\r\n// // // //     }\r\n// // // //     if (newPassword !== confirmPassword) {\r\n// // // //       setResetError('Passwords do not match');\r\n// // // //       return;\r\n// // // //     }\r\n// // // //     try {\r\n// // // //       // Using fetch with API_URL from config\r\n// // // //       const response = await fetch(`${API_URL}/auth/reset-password`, {\r\n// // // //         method: 'POST',\r\n// // // //         headers: {\r\n// // // //           'Content-Type': 'application/json',\r\n// // // //         },\r\n// // // //         body: JSON.stringify({ mobile, newPassword }),\r\n// // // //       });\r\n// // // //       const data = await response.json();\r\n// // // //       if (!response.ok) {\r\n// // // //         throw new Error(data.error || 'Password reset failed');\r\n// // // //       }\r\n// // // //       setResetMessage('Password reset successful! Redirecting to login...');\r\n// // // //       setTimeout(() => navigate('/login'), 2000);\r\n// // // //     } catch (err) {\r\n// // // //       setResetError(err.message || 'Password reset failed');\r\n// // // //     }\r\n// // // //   };\r\n\r\n// // // //   return (\r\n// // // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// // // //       <div className=\"max-w-md w-full space-y-8\">\r\n// // // //         <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Forgot Password</h2>\r\n// // // //         {step === 1 && (\r\n// // // //           <div className=\"space-y-4\">\r\n// // // //             <input\r\n// // // //               type=\"text\"\r\n// // // //               value={mobile}\r\n// // // //               onChange={e => setMobile(e.target.value)}\r\n// // // //               placeholder=\"Enter your mobile number\"\r\n// // // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n// // // //             />\r\n// // // //             <button\r\n// // // //               onClick={sendOtp}\r\n// // // //               disabled={isOtpLoading || !mobile}\r\n// // // //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\r\n// // // //             >\r\n// // // //               {isOtpLoading ? 'Sending OTP...' : 'Send OTP'}\r\n// // // //             </button>\r\n// // // //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\r\n// // // //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\r\n// // // //           </div>\r\n// // // //         )}\r\n// // // //         {step === 2 && (\r\n// // // //           <div className=\"space-y-4\">\r\n// // // //             <input\r\n// // // //               type=\"text\"\r\n// // // //               value={otp}\r\n// // // //               onChange={e => setOtp(e.target.value)}\r\n// // // //               placeholder=\"Enter OTP\"\r\n// // // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n// // // //             />\r\n// // // //             <button\r\n// // // //               onClick={verifyOtp}\r\n// // // //               disabled={isOtpLoading || !otp}\r\n// // // //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\r\n// // // //             >\r\n// // // //               {isOtpLoading ? 'Verifying...' : 'Verify OTP'}\r\n// // // //             </button>\r\n// // // //             <button\r\n// // // //               onClick={sendOtp}\r\n// // // //               disabled={isOtpLoading}\r\n// // // //               className=\"w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md\"\r\n// // // //             >\r\n// // // //               Resend OTP\r\n// // // //             </button>\r\n// // // //             {otpMessage && <div className=\"text-green-600 text-sm\">{otpMessage}</div>}\r\n// // // //             {otpError && <div className=\"text-red-600 text-sm\">{otpError}</div>}\r\n// // // //             <button onClick={() => setStep(1)} className=\"w-full py-2 px-4 text-indigo-600\">Back</button>\r\n// // // //           </div>\r\n// // // //         )}\r\n// // // //         {step === 3 && (\r\n// // // //           <div className=\"space-y-4\">\r\n// // // //             <input\r\n// // // //               type=\"password\"\r\n// // // //               value={newPassword}\r\n// // // //               onChange={e => setNewPassword(e.target.value)}\r\n// // // //               placeholder=\"Enter new password\"\r\n// // // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n// // // //             />\r\n// // // //             <input\r\n// // // //               type=\"password\"\r\n// // // //               value={confirmPassword}\r\n// // // //               onChange={e => setConfirmPassword(e.target.value)}\r\n// // // //               placeholder=\"Confirm new password\"\r\n// // // //               className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n// // // //             />\r\n// // // //             <button\r\n// // // //               onClick={handleResetPassword}\r\n// // // //               className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded-md\"\r\n// // // //             >\r\n// // // //               Reset Password\r\n// // // //             </button>\r\n// // // //             {resetMessage && <div className=\"text-green-600 text-sm\">{resetMessage}</div>}\r\n// // // //             {resetError && <div className=\"text-red-600 text-sm\">{resetError}</div>}\r\n// // // //           </div>\r\n// // // //         )}\r\n// // // //       </div>\r\n// // // //     </div>\r\n// // // //   );\r\n// // // // };\r\n\r\n// // // // export default ForgotPassword;\r\n\r\n\r\n// // // import React, { useState } from 'react';\r\n// // // import { useNavigate } from 'react-router-dom';\r\n\r\n// // // import { \r\n// // //   auth, \r\n// // //   RecaptchaVerifier, \r\n// // //   signInWithPhoneNumber,\r\n// // //   updatePassword \r\n// // // } from '../firebase';\r\n\r\n// // // const ForgotPasswordForm = () => {\r\n// // //   const [mobile, setMobile] = useState('');\r\n// // //   const [otp, setOtp] = useState('');\r\n// // //   const [newPassword, setNewPassword] = useState('');\r\n// // //   const [confirmPassword, setConfirmPassword] = useState('');\r\n// // //   const [step, setStep] = useState(1); // 1: enter mobile, 2: enter OTP, 3: enter new password\r\n// // //   const [loading, setLoading] = useState(false);\r\n// // //   const [error, setError] = useState('');\r\n// // //   const [message, setMessage] = useState('');\r\n// // //   const navigate = useNavigate();\r\n\r\n// // //   const setUpRecaptcha = () => {\r\n// // //     const recaptchaVerifier = new RecaptchaVerifier(\r\n// // //       'recaptcha-container', \r\n// // //       { size: 'invisible' }, \r\n// // //       auth\r\n// // //     );\r\n// // //     return recaptchaVerifier;\r\n// // //   };\r\n\r\n// // //   const sendOtp = async () => {\r\n// // //     setLoading(true);\r\n// // //     setError('');\r\n// // //     setMessage('');\r\n// // //     try {\r\n// // //       const appVerifier = setUpRecaptcha();\r\n// // //       const phoneNumber = `+${mobile.replace(/\\D/g, '')}`;\r\n      \r\n// // //       const confirmationResult = await auth().signInWithPhoneNumber(\r\n// // //         phoneNumber, \r\n// // //         appVerifier\r\n// // //       );\r\n      \r\n// // //       window.confirmationResult = confirmationResult;\r\n// // //       setStep(2);\r\n// // //       setMessage('OTP sent to your mobile number.');\r\n// // //     } catch (err) {\r\n// // //       setError(err.message || 'Failed to send OTP');\r\n// // //     } finally {\r\n// // //       setLoading(false);\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   const verifyOtp = async () => {\r\n// // //     setLoading(true);\r\n// // //     setError('');\r\n// // //     setMessage('');\r\n// // //     try {\r\n// // //       const result = await window.confirmationResult.confirm(otp);\r\n// // //       // Store the user credential for password update\r\n// // //       window.passwordResetUser = result.user;\r\n// // //       setStep(3);\r\n// // //       setMessage('OTP verified. Please set your new password.');\r\n// // //     } catch (err) {\r\n// // //       setError(err.message || 'Invalid OTP');\r\n// // //     } finally {\r\n// // //       setLoading(false);\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   const handleResetPassword = async () => {\r\n// // //     setLoading(true);\r\n// // //     setError('');\r\n// // //     setMessage('');\r\n    \r\n// // //     // Client-side validation\r\n// // //     if (!newPassword || newPassword.length < 6) {\r\n// // //       setError('Password must be at least 6 characters');\r\n// // //       setLoading(false);\r\n// // //       return;\r\n// // //     }\r\n// // //     if (newPassword !== confirmPassword) {\r\n// // //       setError('Passwords do not match');\r\n// // //       setLoading(false);\r\n// // //       return;\r\n// // //     }\r\n\r\n// // //     try {\r\n// // //       // Update password using Firebase\r\n// // //       await updatePassword(window.passwordResetUser, newPassword);\r\n// // //       setMessage('Password reset successfully! Redirecting to login...');\r\n// // //       setTimeout(() => navigate('/login'), 2000);\r\n// // //     } catch (err) {\r\n// // //       setError(err.message || 'Password reset failed');\r\n// // //     } finally {\r\n// // //       setLoading(false);\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// // //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n// // //       <div className=\"max-w-md w-full space-y-8\">\r\n// // //         <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n// // //           {step === 1 && 'Reset Password'}\r\n// // //           {step === 2 && 'Verify OTP'}\r\n// // //           {step === 3 && 'Set New Password'}\r\n// // //         </h2>\r\n\r\n// // //         {message && (\r\n// // //           <div className=\"rounded-md bg-green-50 p-4\">\r\n// // //             <div className=\"flex\">\r\n// // //               <div className=\"ml-3\">\r\n// // //                 <p className=\"text-sm font-medium text-green-800\">{message}</p>\r\n// // //               </div>\r\n// // //             </div>\r\n// // //           </div>\r\n// // //         )}\r\n\r\n// // //         {error && (\r\n// // //           <div className=\"rounded-md bg-red-50 p-4\">\r\n// // //             <div className=\"flex\">\r\n// // //               <div className=\"ml-3\">\r\n// // //                 <p className=\"text-sm font-medium text-red-800\">{error}</p>\r\n// // //               </div>\r\n// // //             </div>\r\n// // //           </div>\r\n// // //         )}\r\n\r\n// // //         {step === 1 && (\r\n// // //           <div className=\"space-y-4\">\r\n// // //             <div>\r\n// // //               <label htmlFor=\"mobile\" className=\"block text-sm font-medium text-gray-700\">\r\n// // //                 Mobile Number\r\n// // //               </label>\r\n// // //               <input\r\n// // //                 id=\"mobile\"\r\n// // //                 name=\"mobile\"\r\n// // //                 type=\"tel\"\r\n// // //                 value={mobile}\r\n// // //                 onChange={(e) => setMobile(e.target.value)}\r\n// // //                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n// // //                 placeholder=\"Enter your mobile number\"\r\n// // //               />\r\n// // //             </div>\r\n// // //             <button\r\n// // //               onClick={sendOtp}\r\n// // //               disabled={loading || !mobile}\r\n// // //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n// // //             >\r\n// // //               {loading ? 'Sending...' : 'Send OTP'}\r\n// // //             </button>\r\n// // //           </div>\r\n// // //         )}\r\n\r\n// // //         {step === 2 && (\r\n// // //           <div className=\"space-y-4\">\r\n// // //             <div>\r\n// // //               <label htmlFor=\"otp\" className=\"block text-sm font-medium text-gray-700\">\r\n// // //                 OTP\r\n// // //               </label>\r\n// // //               <input\r\n// // //                 id=\"otp\"\r\n// // //                 name=\"otp\"\r\n// // //                 type=\"text\"\r\n// // //                 value={otp}\r\n// // //                 onChange={(e) => setOtp(e.target.value)}\r\n// // //                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n// // //                 placeholder=\"Enter OTP\"\r\n// // //               />\r\n// // //             </div>\r\n// // //             <button\r\n// // //               onClick={verifyOtp}\r\n// // //               disabled={loading || !otp}\r\n// // //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n// // //             >\r\n// // //               {loading ? 'Verifying...' : 'Verify OTP'}\r\n// // //             </button>\r\n// // //             <button\r\n// // //               onClick={sendOtp}\r\n// // //               disabled={loading}\r\n// // //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-indigo-600 hover:text-indigo-500\"\r\n// // //             >\r\n// // //               Resend OTP\r\n// // //             </button>\r\n// // //             <button \r\n// // //               onClick={() => setStep(1)}\r\n// // //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-gray-600 hover:text-gray-500\"\r\n// // //             >\r\n// // //               Back\r\n// // //             </button>\r\n// // //           </div>\r\n// // //         )}\r\n\r\n// // //         {step === 3 && (\r\n// // //           <div className=\"space-y-4\">\r\n// // //             <div>\r\n// // //               <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n// // //                 New Password\r\n// // //               </label>\r\n// // //               <input\r\n// // //                 id=\"newPassword\"\r\n// // //                 name=\"newPassword\"\r\n// // //                 type=\"password\"\r\n// // //                 value={newPassword}\r\n// // //                 onChange={(e) => setNewPassword(e.target.value)}\r\n// // //                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n// // //                 placeholder=\"Enter new password\"\r\n// // //               />\r\n// // //             </div>\r\n// // //             <div>\r\n// // //               <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n// // //                 Confirm Password\r\n// // //               </label>\r\n// // //               <input\r\n// // //                 id=\"confirmPassword\"\r\n// // //                 name=\"confirmPassword\"\r\n// // //                 type=\"password\"\r\n// // //                 value={confirmPassword}\r\n// // //                 onChange={(e) => setConfirmPassword(e.target.value)}\r\n// // //                 className=\"mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n// // //                 placeholder=\"Confirm new password\"\r\n// // //               />\r\n// // //             </div>\r\n// // //             <button\r\n// // //               onClick={handleResetPassword}\r\n// // //               disabled={loading || !newPassword || !confirmPassword}\r\n// // //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n// // //             >\r\n// // //               {loading ? 'Resetting...' : 'Reset Password'}\r\n// // //             </button>\r\n// // //           </div>\r\n// // //         )}\r\n// // //       </div>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default ForgotPasswordForm;\r\n\r\n\r\n\r\n// // import React, { useState, useEffect } from 'react';\r\n// // import { useNavigate, Link } from 'react-router-dom';\r\n// // import { auth, RecaptchaVerifier, signInWithPhoneNumber, updatePassword } from '../firebase';\r\n\r\n// // const ForgotPassword = () => {\r\n// //   const [mobile, setMobile] = useState('');\r\n// //   const [otp, setOtp] = useState('');\r\n// //   const [newPassword, setNewPassword] = useState('');\r\n// //   const [confirmPassword, setConfirmPassword] = useState('');\r\n// //   const [step, setStep] = useState(1); // 1: mobile, 2: otp, 3: reset\r\n// //   const [loading, setLoading] = useState(false);\r\n// //   const [error, setError] = useState('');\r\n// //   const [message, setMessage] = useState('');\r\n// //   const navigate = useNavigate();\r\n\r\n// //   useEffect(() => {\r\n// //     window.recaptchaVerifier = new RecaptchaVerifier(\r\n// //       'recaptcha-container',\r\n// //       { size: 'invisible' },\r\n// //       auth\r\n// //     );\r\n\r\n// //     return () => {\r\n// //       if (window.recaptchaVerifier) {\r\n// //         window.recaptchaVerifier.clear();\r\n// //       }\r\n// //     };\r\n// //   }, []);\r\n\r\n// //   const sendOtp = async () => {\r\n// //     setLoading(true);\r\n// //     setError('');\r\n// //     setMessage('');\r\n    \r\n// //     try {\r\n// //       const phoneNumber = `+91${mobile}`;\r\n// //       const confirmationResult = await signInWithPhoneNumber(\r\n// //         auth,\r\n// //         phoneNumber,\r\n// //         window.recaptchaVerifier\r\n// //       );\r\n      \r\n// //       window.confirmationResult = confirmationResult;\r\n// //       setMessage('OTP sent to your mobile number.');\r\n// //       setStep(2);\r\n// //     } catch (err) {\r\n// //       setError(err.message || 'Failed to send OTP');\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   const verifyOtp = async () => {\r\n// //     setLoading(true);\r\n// //     setError('');\r\n    \r\n// //     try {\r\n// //       await window.confirmationResult.confirm(otp);\r\n// //       setMessage('OTP verified. Please set your new password.');\r\n// //       setStep(3);\r\n// //     } catch (err) {\r\n// //       setError(err.message || 'Invalid OTP');\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleResetPassword = async () => {\r\n// //     if (newPassword !== confirmPassword) {\r\n// //       setError('Passwords do not match');\r\n// //       return;\r\n// //     }\r\n\r\n// //     if (newPassword.length < 6) {\r\n// //       setError('Password must be at least 6 characters');\r\n// //       return;\r\n// //     }\r\n\r\n// //     setLoading(true);\r\n// //     setError('');\r\n    \r\n// //     try {\r\n// //       const user = auth.currentUser;\r\n// //       await updatePassword(user, newPassword);\r\n// //       setMessage('Password reset successfully! Redirecting to login...');\r\n// //       setTimeout(() => navigate('/login'), 2000);\r\n// //     } catch (err) {\r\n// //       setError(err.message || 'Failed to reset password');\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n// //       <div id=\"recaptcha-container\" style={{ display: 'none' }}></div>\r\n// //       <div className=\"max-w-md w-full space-y-8\">\r\n// //         <div>\r\n// //           <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n// //             {step === 1 && 'Reset Password'}\r\n// //             {step === 2 && 'Verify OTP'}\r\n// //             {step === 3 && 'Set New Password'}\r\n// //           </h2>\r\n// //         </div>\r\n\r\n// //         {message && (\r\n// //           <div className=\"p-3 bg-green-50 text-green-700 rounded-md text-sm\">\r\n// //             {message}\r\n// //           </div>\r\n// //         )}\r\n\r\n// //         {error && (\r\n// //           <div className=\"p-3 bg-red-50 text-red-700 rounded-md text-sm\">\r\n// //             {error}\r\n// //           </div>\r\n// //         )}\r\n\r\n// //         {step === 1 && (\r\n// //           <div className=\"space-y-4\">\r\n// //             <div>\r\n// //               <label htmlFor=\"mobile\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                 Mobile Number\r\n// //               </label>\r\n// //               <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n// //                 <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\r\n// //                   +91\r\n// //                 </span>\r\n// //                 <input\r\n// //                   id=\"mobile\"\r\n// //                   name=\"mobile\"\r\n// //                   type=\"tel\"\r\n// //                   value={mobile}\r\n// //                   onChange={(e) => setMobile(e.target.value.replace(/\\D/g, '').slice(0, 10))}\r\n// //                   className=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// //                   placeholder=\"9876543210\"\r\n// //                 />\r\n// //               </div>\r\n// //             </div>\r\n// //             <button\r\n// //               onClick={sendOtp}\r\n// //               disabled={loading || mobile.length !== 10}\r\n// //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n// //             >\r\n// //               {loading ? 'Sending OTP...' : 'Send OTP'}\r\n// //             </button>\r\n// //             <div className=\"text-center text-sm\">\r\n// //               <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n// //                 Back to Login\r\n// //               </Link>\r\n// //             </div>\r\n// //           </div>\r\n// //         )}\r\n\r\n// //         {step === 2 && (\r\n// //           <div className=\"space-y-4\">\r\n// //             <div>\r\n// //               <label htmlFor=\"otp\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                 OTP\r\n// //               </label>\r\n// //               <input\r\n// //                 id=\"otp\"\r\n// //                 name=\"otp\"\r\n// //                 type=\"text\"\r\n// //                 value={otp}\r\n// //                 onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\r\n// //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 text-center text-lg tracking-widest\"\r\n// //                 placeholder=\"Enter 6-digit OTP\"\r\n// //                 inputMode=\"numeric\"\r\n// //                 autoFocus\r\n// //               />\r\n// //             </div>\r\n// //             <button\r\n// //               onClick={verifyOtp}\r\n// //               disabled={loading || otp.length !== 6}\r\n// //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n// //             >\r\n// //               {loading ? 'Verifying...' : 'Verify OTP'}\r\n// //             </button>\r\n// //             <button\r\n// //               onClick={sendOtp}\r\n// //               disabled={loading}\r\n// //               className=\"w-full py-2 px-4 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 text-sm\"\r\n// //             >\r\n// //               Resend OTP\r\n// //             </button>\r\n// //           </div>\r\n// //         )}\r\n\r\n// //         {step === 3 && (\r\n// //           <div className=\"space-y-4\">\r\n// //             <div>\r\n// //               <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                 New Password\r\n// //               </label>\r\n// //               <input\r\n// //                 id=\"newPassword\"\r\n// //                 name=\"newPassword\"\r\n// //                 type=\"password\"\r\n// //                 value={newPassword}\r\n// //                 onChange={(e) => setNewPassword(e.target.value)}\r\n// //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// //                 placeholder=\"Enter new password\"\r\n// //               />\r\n// //             </div>\r\n// //             <div>\r\n// //               <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n// //                 Confirm Password\r\n// //               </label>\r\n// //               <input\r\n// //                 id=\"confirmPassword\"\r\n// //                 name=\"confirmPassword\"\r\n// //                 type=\"password\"\r\n// //                 value={confirmPassword}\r\n// //                 onChange={(e) => setConfirmPassword(e.target.value)}\r\n// //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n// //                 placeholder=\"Confirm new password\"\r\n// //               />\r\n// //             </div>\r\n// //             <button\r\n// //               onClick={handleResetPassword}\r\n// //               disabled={loading || !newPassword || !confirmPassword}\r\n// //               className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n// //             >\r\n// //               {loading ? 'Resetting...' : 'Reset Password'}\r\n// //             </button>\r\n// //           </div>\r\n// //         )}\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default ForgotPassword;\r\n\r\n\r\n\r\n// const sendOtp = async () => {\r\n//   setLoading(true);\r\n//   setError('');\r\n//   setMessage('');\r\n\r\n//   try {\r\n//     const phoneNumber = `+91${mobile}`;\r\n//     if (!window.recaptchaVerifier) {\r\n//       window.recaptchaVerifier = new RecaptchaVerifier(auth, 'recaptcha-container', {\r\n//         size: 'invisible'\r\n//       });\r\n//     }\r\n\r\n//     const appVerifier = window.recaptchaVerifier;\r\n//     const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, appVerifier);\r\n\r\n//     window.confirmationResult = confirmationResult;\r\n//     setMessage('OTP sent to your mobile number.');\r\n//     setStep(2);\r\n//   } catch (err) {\r\n//     setError(err.code || err.message || 'Failed to send OTP');\r\n//   } finally {\r\n//     setLoading(false);\r\n//   }\r\n// };\r\n\r\n// const verifyOtp = async () => {\r\n//   setLoading(true);\r\n//   setError('');\r\n\r\n//   try {\r\n//     const result = await window.confirmationResult.confirm(otp);\r\n//     const user = result.user;\r\n//     setMessage('OTP verified. Please set your new password.');\r\n//     setStep(3);\r\n//   } catch (err) {\r\n//     setError(err.code || err.message || 'Invalid OTP');\r\n//   } finally {\r\n//     setLoading(false);\r\n//   }\r\n// };\r\n\r\n// const handleResetPassword = async () => {\r\n//   if (newPassword !== confirmPassword) {\r\n//     setError('Passwords do not match');\r\n//     return;\r\n//   }\r\n\r\n//   if (newPassword.length < 6) {\r\n//     setError('Password must be at least 6 characters');\r\n//     return;\r\n//   }\r\n\r\n//   setLoading(true);\r\n//   setError('');\r\n\r\n//   try {\r\n//     // 👉 Instead of Firebase updatePassword, call your backend API\r\n//     const response = await fetch(`${process.env.REACT_APP_API_URL}/auth/reset-password`, {\r\n//       method: 'POST',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify({ mobile, newPassword })\r\n//     });\r\n\r\n//     if (!response.ok) throw new Error('Failed to reset password');\r\n\r\n//     setMessage('Password reset successfully! Redirecting to login...');\r\n//     setTimeout(() => navigate('/login'), 2000);\r\n//   } catch (err) {\r\n//     setError(err.message || 'Failed to reset password');\r\n//   } finally {\r\n//     setLoading(false);\r\n//   }\r\n// };\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\r\nimport { auth } from \"../firebase\"; // 👈 make sure firebase.js exports \"auth\"\r\n\r\nconst ForgotPassword = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // 🔹 Step 1: Send OTP\r\n  const sendOtp = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      const phoneNumber = `+91${mobile}`;\r\n      if (!window.recaptchaVerifier) {\r\n        window.recaptchaVerifier = new RecaptchaVerifier(\r\n          auth,\r\n          \"recaptcha-container\",\r\n          { size: \"invisible\" }\r\n        );\r\n      }\r\n\r\n      const appVerifier = window.recaptchaVerifier;\r\n      const confirmationResult = await signInWithPhoneNumber(\r\n        auth,\r\n        phoneNumber,\r\n        appVerifier\r\n      );\r\n\r\n      window.confirmationResult = confirmationResult;\r\n      setMessage(\"✅ OTP sent to your mobile number.\");\r\n      setStep(2);\r\n    } catch (err) {\r\n      setError(err.code || err.message || \"Failed to send OTP\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 🔹 Step 2: Verify OTP\r\n  const verifyOtp = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const result = await window.confirmationResult.confirm(otp);\r\n      if (result.user) {\r\n        setMessage(\"✅ OTP verified. Please set your new password.\");\r\n        setStep(3);\r\n      }\r\n    } catch (err) {\r\n      setError(err.code || err.message || \"Invalid OTP\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 🔹 Step 3: Reset Password via Backend\r\n  const handleResetPassword = async () => {\r\n    if (newPassword !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 6) {\r\n      setError(\"Password must be at least 6 characters\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/auth/reset-password`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ mobile, newPassword }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) throw new Error(\"Failed to reset password\");\r\n\r\n      setMessage(\"✅ Password reset successfully! Redirecting to login...\");\r\n      setTimeout(() => navigate(\"/login\"), 2000);\r\n    } catch (err) {\r\n      setError(err.message || \"Failed to reset password\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgot-password\">\r\n      <h2>Forgot Password</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {message && <p style={{ color: \"green\" }}>{message}</p>}\r\n\r\n      {/* Step 1 */}\r\n      {step === 1 && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter mobile number\"\r\n            value={mobile}\r\n            onChange={(e) => setMobile(e.target.value)}\r\n          />\r\n          <button onClick={sendOtp} disabled={loading}>\r\n            {loading ? \"Sending...\" : \"Send OTP\"}\r\n          </button>\r\n          <div id=\"recaptcha-container\"></div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Step 2 */}\r\n      {step === 2 && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button onClick={verifyOtp} disabled={loading}>\r\n            {loading ? \"Verifying...\" : \"Verify OTP\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Step 3 */}\r\n      {step === 3 && (\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"New Password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n          <button onClick={handleResetPassword} disabled={loading}>\r\n            {loading ? \"Resetting...\" : \"Reset Password\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}